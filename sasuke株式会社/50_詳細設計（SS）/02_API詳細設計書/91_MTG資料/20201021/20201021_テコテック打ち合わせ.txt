2020/10/21　テコテック打ち合わせ

■ステータス同期

drawioをbacklogに添付している。
→バッチ設計書レビューのチケット

ステータス同期
申込完了はしない認識です。（テコテック）
→よいです（石井）

・プロセスシート
審査ステータスコードのところの判断は「申込取消」、「完了」以外をとってくる

商品付加.申込取消済フラグというのが別途あったはず（ER図）　（石井）

審査ステータスはどこの情報を参照しているか
→WFステータスマッピング要件案_200824
→この資料を見ているのであればあっている

申し込み完了した情報は申込テーブルで持っている。

ステータス同期の対象は審査中の状態のものを対象としている。
申込が完了すると、申込.申込完了日時に日時が入るのでそこも見てほしい
→承知した（テコテック）


審査ステータスコードの条件で問題ない？
→問題ない。プラス申込テーブル

取消済フラグは使わない？
→そうです（石井）

ダウンロード失敗した場合は、いくつかパターンがあると思っている
リトライするパターンがあると思っている（石井）
エラーレスポンスによってハンドリングが必要。

ステータス同期では一度失敗したら次に持ち越しと考えている。（テコテック）
→リトライ間隔を鑑みて次に回すか回さないかの制御をしなくちゃいけないと思っています。（石井）
→EAC002の(2)の処理ができない（石井）

データダウンロード要求API

○UI設計書_大容量データ送受信

ステータス同期の場合のエラーの範囲はNo.1〜No.4あたりを想定しなければならない。
→エラーパターンを鑑みて詳細設計に落とし込みます（テコテック）宿題


・ステータス更新の対象について
商品付加テーブルの更新日時とステータスリストファイルの更新日時で比較して更新する／しないを判断する

申込データの取り込みと日時を別に持った法が良いのではないか？
→CRMに絡むところなのでそれを含めて検討中（石井）

ステータスリストに工程IDを含めたほうが良いのではないか？（テコテック）
→こちらかもリクエストしたが工程名から判断してほしいとのことでした（石井）


査定結果の取得とは？
詳細が決定したら教えてほしい。（テコテック）
→特別条件承諾時に申し込みの内容を多少変更して合意させるというフローが有り、そこで使われるのでないかと想定している
→保険料、給付金が変わったりするかもしれない
→これを申し込みデータに反映しようと考えている。
→CRMはそんなに絡まないが、、、

→確定時期はいつ頃になるか？
→聞いておきます。（石井）宿題

保険業界の特性で証跡を細かくとっておきたい要望から、商品をレプリケーションしてバージョンなどをカウントアップするような想定。

8番
承諾テーブルにレコードを追加する？
→タスクテーブルを持たせることを検討中（石井）


9番
審査同期テーブルを更新する処理のところ
審査同期IDの生成方式は？（テコテック）
→審査同期IDはいらない（石井）
→商品付加IDと商品付加バージョンに紐付けがとれればいいので必要ない。審査同期IDは削除予定。
→審査同期IDを削除する（サスケ　宿題）


メール送信についてはステータス同期ではやらないことになったので、削除します。（テコテック）
→その認識で良いです。
→ただし、メールを送らずに連絡テーブルにレコードを作成するかもしれない。（石井）
→承知した（テコテック）


レスポンス結果の部分
targetId は、商品付加ID？
→商品付加IDになる。あとは商品付加バージョンがいるかどうかになる。（石井）


リンクが貼られているところについては、後ほどリンクできなくなってしまうので、削除をお願いします。（石井）
→承知した（テコテック）


・結果コードについて
バッチの監視の体型に合わせて書いていかないといけない。
妥当性は？
例えば一部失敗した場合とか、アラートあげる／あげないとか。。

→戻り値については、改めて検討します（テコテック）宿題

7番はバージョンの考慮が必要。
WF工程ステータスのコードによっては処理が変わる。
商品とか付随する情報を更新する場合はバージョンアップの処理が必要だが、
値をとってくるときはバージョンアップ処理はしない


2周目、3周目にて、書類の種類によって情報を変えるようなフローがあるらしい。
そうなると、webd側（AWS）が正しい情報を持っているはずが機関側の情報が正しいケースが有る。
その時は商品付加のバージョンアップが必要になってくるかもしれない。


ステータス同期結果オブジェクトがどこにも紐付けができていない状態。
→このあと記載するようにします。（テコテック）宿題



■申込完了API
申し込み完了時の帳票作成について

1周目、2周目で処理の対象が異なる？
→そうですね


2周めの判定は？（テコテック）
→できるのかどうか

申込が修正になる場合は、それ以降がバージョン２以降になる（石井）
→フロント側から叩かれることはあるか？
→2周目というのは審査が始まったタイミングから（石井）

特別条件承諾の条件は？
→

タスクテーブルに特別条件を承諾する／しないを用意しようと考えている。
→それを見て判断すればよいか？
→良いです。

2周目の判定というのは？
→2周目の判定というのはそもそもいるのか？（石井）
→2周目かどうかではなく特別条件承諾かどうかがわかればいいのでそれで判定しようと思います。（テコテック）



申込データ連動でエラーが発生した場合のハンドリングについて
→商品付加単位で成功していれば問題ない


★申込連動データAPIも複数処理を行えないか（おまとめ）を打診する必要がある。　（サスケ　宿題）

それが叶わなかった場合、失敗したものについては手動で連携しなければならない。
申込IDごとに申込連動ができるような仕組みも必要ではないか。
どうやってリランさせる？
リランの方式が単純であれば復旧も楽だよね。

インターフェースを変えたほうがいい！


CRM案件で、「連動済み」というステータスをもたせようと考えている。
それによって、連動待ち、未連動な状態だけに抽出することができる。（石井）

運用者側からは判断できる？
→見られる。
→CRMへはレプリケーションを渡すのでそれで確認することができます（石井）



■メール送信について

CRMに関わる４つのメールについては、１０月末の詳細設計では除外してもよいか？（若林）
24,25,27,28
→それで大丈夫です（石井）

・管理画面系のメール送信について
メール送信処理のI/Fを伝えるので、詳細設計はサスケ側でお願いしたい（若林）
→その想定で良いです。（石井）

１０月末前にもらえないと厳しいのではないか？
→今週末にお渡しすることにします（若林）

・帳票基盤の設計について
申し込み完了API＞帳票生成（１回目／２回目、zip）＞個別の帳票＞帳票基盤

エクセル＞置換＞PDF変換

複数のPDFをzip化


圧縮の過程で一時フォルダにまとめる
→セキュリティの観点で都度削除している
→レスポンスに３秒以上かかる

オンメモリ上で処理を行うことはできないでしょうか？
→いまのところできなさそうです（若林）

まずはオンメモリ上のデータをzip化できないかを検討してください（石井）
（セキュリティ的な制限がかかることが考えられるため）

ディスク容量も気にしなくてはならないので、実体化してしまうといろいろなタスクが増えてしまう（物理ファイルを削除したり）

レスポンス３秒というのは１帳票３秒以上かかる？
→今の検証結果だと、１つの帳票に対してかかってしまう。


３秒以上かかるということは、申込完了APIを叩くときは非同期のほうが良さそうですね。（石井）
検討します。（石井）

帳表生成の処理時間の検証をしたほうが良いか？
→できればやっていただけるとありがたいです。

あとは、容量についても検証いただきたい。（石井）
→承知した。いつごろお出しすればよいか？
→10月末にはむずかしい。
→実装フェーズでカバーする形で進めてください



■申込完了API

申込連動ステータスが未連動、連動待ちなどが入ってくる予定。
今週その案を持っていって打ち合わせ予定なので、もう少し時間がかかる見込み。

削除フラグは今から条件に含めないことにします。

外部認証IDとは？
→本人確認済みフラグのところです。

本人確認ができているかどうかは、承諾テーブルからのハンドリングでよい。

３番電話番号

４番商品付加ループ

６番について
NIT資料ベースで、申込データ連動APIからサスケで資料を作っている。
こちらを連携します。（石井）
→すぐ連携します　TODO



エラーのハンドリングについては、ステータス同期と同様に書き換えるようにします。（テコテック）宿題

アップロードAPIはNIT作なので、こちらでは準備していない（石井）
→戻り値などで齟齬が出そうだが、項目についての精査をします


取得するSQLが別れているのはなにか理由が？
商品付加、個人とか
JOINして一緒にとってこないの？
→ドキュメント上だとかなり長くなってしまうために分けたという理由があり。。


３．２
クエリ部分で契約者個人IDをとってくるほうが良い。

アカウントに紐づく個人
商品不可から紐づく個人→申込時点での個人の情報
違うことがあるの？
→あります（石井）



■メールアドレス再設定API

２番
アカウントIDで検索しないとヒットしない。
リクエストパラメータのメールアドレスは変更後のメールアドレスなので。
→承知した


個人テーブルは削除します。


アカウントIDが存在しない場合は400で返す。
→
メールアドレス再設定については、ログインしないとできないので、
認証済み前提ということでエラーは500とします（テコテック）


5番
メールアドレスについては、変更先のメールアドレス

メール送信失敗については、後ほど修正。


■認証ハッシュチェックAPI

1番
エラーがあれば401予定

有効期限のところは条件に含めないのでしょうか？（石井）
ハッシュ値にインデックスを貼っている

有効期限が切れたときに別ロジックの処理ができるようにするために、有効期限を条件に含めていませんでした（テコテック）
→有効期限の条件を入れるようにします（テコテック）
→フロント側でどう処理するのかによるのかもしれません（テコテック）
→フロント側でどうハンドリングするのか。
→実態としては有効期限が切れている理由で取得できないことが多いのではないか。
→SQL内で有効期限も鑑みて見てください。（石井）
→承知しました



I/F定義に合わせてキャメルケースに統一するようにします。（テコテック）
→基本的にWebD内部では統一したコードで認識合わせしていきたい（石井）


①申込チェックAPIについて
作る方向で進めている。
→テコテックに展開する（サスケ TODO）→展開済み

②プランは
保険商品APIに含まれる



最新の設計書フォーマットはどこにある？（石井）
→パスワード再設定、申込完了あたりが参考になります。
→申込完了を参考にします
→テコテック佐藤さんから連携される

アカウント系の設計書が完了してからのほうが楽かもしれない。

