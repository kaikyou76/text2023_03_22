<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0017)https://difff.jp/ -->
<html lang="ja"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta name="author" content="Yuki Naito">
<title>difff《ﾃﾞｭﾌﾌ》</title>
<script type="text/javascript">
<!--
	function hideForm() {
		if (document.getElementById('form').style.display == 'none') {
			document.getElementById('top' ).style.display = 'block';
			document.getElementById('form').style.display = 'block';
			document.getElementById('save').style.display = 'block';
			document.getElementById('hide').value = '結果のみ表示 (印刷用)';
		} else {
			document.getElementById('top' ).style.display = 'none';
			document.getElementById('form').style.display = 'none';
			document.getElementById('save').style.display = 'none';
			document.getElementById('hide').value = '全体を表示';
		}
	}
	function setColor1() {
		document.getElementById('top').style.borderTop = '5px solid #00BBFF';
		var emList = document.getElementsByTagName('em');
		for (i = 0; i < emList.length; i++) {
			emList[i].className = 'blue' ;
		}
	}
	function setColor2() {
		document.getElementById('top').style.borderTop = '5px solid #00bb00';
		var emList = document.getElementsByTagName('em');
		for (i = 0; i < emList.length; i++) {
			emList[i].className = 'green' ;
		}
	}
	function setColor3() {
		document.getElementById('top').style.borderTop = '5px solid black';
		var emList = document.getElementsByTagName('em');
		for (i = 0; i < emList.length; i++) {
			emList[i].className = 'black' ;
		}
	}
	function savehtml() {
		var element1 = document.createElement('input');
		element1.setAttribute('type', 'hidden');
		element1.setAttribute('name', 'sequenceA');
		element1.setAttribute('value', document.difff.sequenceA.value);
		document.save.appendChild(element1);

		var element2 = document.createElement('input');
		element2.setAttribute('type', 'hidden');
		element2.setAttribute('name', 'sequenceB');
		element2.setAttribute('value', document.difff.sequenceB.value);
		document.save.appendChild(element2);

		return confirm('本当に公開してもいいですか？\n[OK] → 結果を公開し、そのページに移動します。');
	}
//-->
</script>
<style type="text/css">
<!--
	* { font-family:verdana,arial,helvetica,sans-serif }
	p,table,textarea,ul { font-size:10pt }
	textarea { width:100% }
	a  { color:#3366CC }
	.k { color:black; text-decoration:none }
	em { font-style:normal }
	em,
	.blue  { font-weight:bold; color:black; background:#99EEFF; border:1px solid #00BBFF }
	.green { font-weight:bold; color:black; background:#99FF99; border:none }
	.black { font-weight:bold; color:white; background:black;   border:none }
	table {
		width:95%;
		margin:20px;
		table-layout:fixed;
		word-wrap:break-word;
		border-collapse:collapse;
	}
	td {
		padding:4px 15px;
		border-left:solid 1px silver;
		border-right:solid 1px silver;
	}
	table#passwd {
		width:auto;
		border:dotted 1px #8c93ba;
	}
	.n { border:none }
-->
</style>
</head>

<body>

<div id="top" style="border-top:5px solid #00BBFF; padding-top:10px">
<font size="5">
	<a class="k" href="https://difff.jp/">
	テキスト比較ツール difff《ﾃﾞｭﾌﾌ》</a></font><!--
--><font size="3">ver.6.1</font>
 
<font size="1" style="vertical-align:16px">
	<a href="https://difff.jp/en/">English</a> |
	Japanese
</font>
 
<font size="1" style="vertical-align:16px">
<a href="https://difff.jp/v5/">旧バージョン (ver.5)</a>
</font>
<hr><!-- ________________________________________ -->
</div>

<div id="form">
<p>下の枠に比較したい文章を入れてくだちい。差分 (diff) を表示します。</p>

<form method="POST" id="difff" name="difff" action="https://difff.jp/">
<table cellspacing="0">
<tbody><tr>
	<td class="n"><textarea name="sequenceA" rows="20">swagger: "2.0"
info:
  description: |-
    WEBダイレクトプロジェクトにおけるバックエンドモジュールAPIを記載する。&lt;br&gt;
    ルートパス設計はSS以降実施する。
  version: "1.0.0"
  title: "バックエンドモジュールAPI"
host: "localhost:8080"
basePath: "/webdirect"
# tags.nameにはマルチバイトは使わない
# description中の改行は&lt;br&gt;で行う
tags:
  - name: "Insurance products"
    description: "保険商品関連IFを定義する"
  - name: "Disclosure"
    description: "告知関連IFを定義する"
  - name: "Apply"
    description: "申込関連IFを定義する"
  - name: "Account"
    description: "アカウント関連IFを定義する"
  - name: "Batch"
    description: "スケジューラー起動を想定したIFを定義する"
  - name: "Back office"
    description: "管理画面やCRMからコールされるIFを定義する"
  - name: "Common"
    description: "業務に依存しない汎用IFを定義する"
schemes:
  - "http"
  - "https"
paths:
  /product/design:
    post:
      tags:
        - "Insurance products"
      summary: "保険商品設計API"
      description: "生年月日・性別を元に、契約年齢を算出し保険商品ラインナップ取得する。"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              birthDate:
                type: "string"
                description: "生年月日"
              sex:
                type: "string"
                description: "性別"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: object
            properties:
              contractAge:
                type: "integer"
              products:
                type: "array"
                items:
                  $ref: "#/definitions/ProductLineup"
              planCache:
                type: "object"
                allOf:
                  - $ref: "#/definitions/PlanCache"
                description: "プランキャッシュ(契約年齢・性別で抽出したデータ)"
        "400":
          description: "Invalid input"
  # TODO リファクタリング
  /product/feeRange/find:
    post:
      tags:
        - "Insurance products"
      summary: "保険料レンジ取得API"
      description: |-
        固定要素・生年月日・性別別の保険料レンジを取得する(主契約・特約のパラメーター未精査)。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              birthDate:
                type: "string"
                description: "生年月日"
              sex:
                type: "string"
                description: "性別"
              productDesigns:
                type: "array"
                description: "商品設計（制限職種該当有無（restrictionJobExist）は指定不要）"
                items:
                  allOf:
                    - $ref: "#/definitions/ProductDesign"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                appliedProvisionCd:
                  type: "string"
                  description: "該当約款コード"
                benefit:
                  type: "array"
                  description: "給付金額(保険金額)"
                  items:
                    type: "string"
                premium:
                  type: "array"
                  description: "保険料"
                  items:
                    type: "string"
        "400":
          description: "Invalid input"
  # TODO リファクタリング
  /product/fee/get:
    post:
      tags:
        - "Insurance products"
      summary: "保険料計算API"
      description: |-
        固定要素・生年月日・性別別の保険料を取得する(主契約・特約のパラメーター未精査)。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              birthDate:
                type: "string"
                description: "生年月日"
              sex:
                type: "string"
                description: "性別"
              needCheck:
                type: "boolean"
                description: "基幹APIを経由でチェックが必要か"
              productDesigns:
                type: "array"
                description: "商品設計"
                items:
                  allOf:
                    - $ref: "#/definitions/ProductDesign"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                appliedProvisionCd:
                  type: "string"
                  description: "該当約款コード"
                premium:
                  type: "string"
                  description: "保険料"
        "400":
          description: "Invalid input"
  /product/validate:
    post:
      tags:
        - "Insurance products"
      summary: "保険商品チェックAPI"
      description: |-
        販売条件チェックAPI経由のチェックと複数同時通算チェックを行い、保険商品の妥当性チェックを行う。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              birthDate:
                type: "string"
                description: "生年月日"
              sex:
                type: "string"
                description: "性別"
              productDesigns:
                type: "array"
                description: "チェック対象の商品"
                items:
                  allOf:
                    - $ref: "#/definitions/ProductDesign"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /account/auth:
    post:
      tags:
        - "Account"
      summary: "アカウント認証API"
      description: |-
        メールアドレスが確認済みのアカウントに対する、アカウント/パスワードか外部認証IDでマッチしたユーザー情報を返却する。&lt;br&gt;初回アクセス時にアカウントを本登録に変更する。&lt;br&gt;指定回数以上認証失敗した場合、アカウントをロックする。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              mailaddress:
                type: "string"
                description: "メールアドレス(アカウント/パスワードで認証時必須)"
              password:
                type: "string"
                description: "パスワード(アカウント/パスワードで認証時必須)"
              extAuthCode:
                type: "integer"
                description: "外部認証コード(外部認証時必須)"
              extAuthId:
                type: "string"
                description: "外部認証ID(外部認証時必須)"
              isFirstLogin:
                type: "boolean"
                description: "初回ログインか"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Account"
        "401":
          description: "authentication error"
  /account/publishTemporary:
    post:
      tags:
        - "Account"
      summary: "仮アカウント発行API"
      description: |-
        試算結果とメールアドレスを元に仮アカウントを発行する。&lt;br&gt;仮アカウントの通知はメールにて行う。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - individual
              - auth
              - acceptances
              - productDesignsV1
              - productDesignsV2
            properties:
              individual:
                allOf:
                  - $ref: "#/definitions/Individual"
                description: "個人"
              auth:
                allOf:
                  - $ref: "#/definitions/Auth"
                description: "認証"
              acceptances:
                type: "array"
                description: "承諾"
                items:
                  allOf:
                    - $ref: "#/definitions/Acceptance"
              productDesignsV1:
                type: "array"
                items:
                  $ref: "#/definitions/ProductDesign"
                description: "商品設計(当初意向)"
              productDesignsV2:
                type: "array"
                items:
                  $ref: "#/definitions/ProductDesign"
                description: "商品設計(最終意向)"
              agencyCode:
                type: "string"
                description: "代理店コード"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /account/resetPassword:
    post:
      tags:
        - "Account"
      summary: "パスワード再設定API"
      description: |-
        メールアドレスを持つアカウントに対してハッシュ生成を行い、ハッシュ付きURLをメールで送付する。&lt;br&gt;ハッシュの有効期限は現在日時より2時間。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - mailaddress
            properties:
              mailaddress:
                type: "string"
                description: "メールアドレス"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /account/resetMailaddress:
    post:
      tags:
        - "Account"
      summary: "メールアドレス再設定API"
      description: |-
        アカウントに対してハッシュ生成を行い、ハッシュ付きURLをメールで送付する。&lt;br&gt;ハッシュの有効期限は現在日時より2時間。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - accountId
              - mailaddress
              - confirmMailaddress
            properties:
              accountId:
                type: "string"
                description: "アカウントID"
              mailaddress:
                type: "string"
                description: "メールアドレス"
              confirmMailaddress:
                type: "string"
                description: "確認用メールアドレス"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /account/auth/{hashCode}:
    get:
      tags:
        - "Account"
      summary: "認証ハッシュチェックAPI"
      description: |-
        ハッシュ値が妥当か確認する。&lt;br&gt;ハッシュ値生成方法はSS以降決定。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "hashCode"
          in: "path"
          required: true
          type: "string"
          description: "ハッシュ値"
        - name: "hashUsageCode"
          in: "query"
          required: true
          type: "string"
          description: "ハッシュ用途コード"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Account"
        "401":
          description: "authentication error"
  /account/updatePassword:
    post:
      tags:
        - "Account"
      summary: "パスワード変更API"
      description: |-
        パスワードを変更する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - accountId
              - password
              - confirmPassword
            properties:
              accountId:
                type: "string"
                description: "アカウントID"
              password:
                type: "string"
                description: "パスワード"
              confirmPassword:
                type: "string"
                description: "確認用パスワード"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /account/updateMailaddress:
    post:
      tags:
        - "Account"
      summary: "メールアドレス変更API"
      description: |-
        ログインIDとしてのメールアドレスを事前に入力したメールアドレス候補で上書きする。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              mailaddress:
                type: "string"
                description: "メールアドレス(アカウント/パスワードで認証時必須)"
              password:
                type: "string"
                description: "パスワード(アカウント/パスワードで認証時必須)"
              extAuthCode:
                type: "integer"
                description: "外部認証コード(外部認証時必須)"
              extAuthId:
                type: "string"
                description: "外部認証ID(外部認証時必須)"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  # TODO 枠だけ作成。仕様は別途定義する
  /office/account/update:
    post:
      tags:
        - "Back office"
      summary: "アカウント更新API"
      description: |-
        アカウントIDに対するアカウントデータを更新する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - accountId
            properties:
              accountId:
                type: "integer"
                description: "アカウントID"
              mailAddress:
                type: "string"
                description: "メールアドレス"
              wannaDisconnect:
                type: "boolean"
                description: "メール配信切断可否（true:メール配信を切断する, false:接続する）"
              telNums:
                type: "array"
                items:
                  allOf:
                    - $ref: "#/definitions/TelNum"
                description: "電話番号"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /office/plan/find:
    post:
      tags:
        - "Back office"
      summary: "プラン参照API"
      description: |-
        プランデータを参照する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              planId:
                type: "integer"
                description: "プランID。指定しない場合、現在適用中と次回適用予定のプランを返却する。"
              needFileData:
                type: "boolean"
                description: "ファイルデータが必要な場合trueを設定する(デフォルトはfalse)"
      responses:
        "200":
          description: "successful operation"
          schema:
            properties:
              plans:
                type: "array"
                items:
                  allOf:
                    - $ref: "#/definitions/Plan"
        "400":
          description: "Invalid input"
  /office/plan/add:
    post:
      tags:
        - "Back office"
      summary: "プラン追加API"
      description: |-
        プランデータを追加する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - startDatetime
              - fileName
              - fileData
            properties:
              startDatetime:
                type: "string"
                description: "適用開始日時"
              fileName:
                type: "string"
                description: "ファイル名"
              fileData:
                type: "string"
                description: "ファイルデータ（Base64で暗号化された文字列）"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /office/plan/delete:
    post:
      tags:
        - "Back office"
      summary: "プラン削除API"
      description: |-
        プランIDに対するプランデータを物理削除する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - planId
            properties:
              planId:
                type: "integer"
                description: "プランID"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /office/operator/auth:
    post:
      tags:
        - "Back office"
      summary: "運用者認証API"
      description: |-
        ID／Password方式で運用者を認証する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - mailaddress
              - password
            properties:
              mailaddress:
                type: "string"
              password:
                type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Operator"
        "401":
          description: "Invalid input"
  /office/operator/auth/{hashCode}:
    get:
      tags:
        - "Back office"
      summary: "運用者認証ハッシュチェックAPI"
      description: |-
        ハッシュ値が妥当か確認する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "hashCode"
          in: "path"
          required: true
          type: "string"
          description: "ハッシュ値"
        - name: "hashUsageCode"
          in: "query"
          required: true
          type: "string"
          description: "ハッシュ用途コード"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Operator"
        "401":
          description: "Invalid input"
  /office/operator/resetPassword:
    post:
      tags:
        - "Back office"
      summary: "運用者パスワード再設定API"
      description: |-
        メールアドレスを持つアカウントに対してハッシュ生成を行い、ハッシュ付きURLをメールで送付する。&lt;br&gt;ハッシュの有効期限は現在日時より2時間。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - mailaddress
            properties:
              mailaddress:
                type: "string"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /office/operator/updatePassword:
    post:
      tags:
        - "Back office"
      summary: "運用者パスワード更新API"
      description: |-
        運用者認証ハッシュチェック後、運用者パスワードを更新し、認証ハッシュチェックに利用したハッシュデータを削除する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - operatorId
              - password
              - confirmPassword
            properties:
              operatorId:
                type: "integer"
                description: "運用者ID"
              password:
                type: "string"
                description: "パスワード"
              confirmPassword:
                type: "string"
                description: "確認用パスワード"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /office/operator/find:
    post:
      tags:
        - "Back office"
      summary: "運用者参照API"
      description: |-
        運用者IDに対する運用者データを取得する。&lt;br&gt;運用者IDを設定しない場合、全取得する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              operatorId:
                type: "array"
                description: "運用者ID(指定しない場合、全取得)"
                items:
                  type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Operator"
        "400":
          description: "Invalid input"
  /office/operator/add:
    post:
      tags:
        - "Back office"
      summary: "運用者追加API"
      description: |-
        仮発行状態で運用者を追加し、メールにて通知を行う。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              operators:
                type: "array"
                items:
                  required:
                    - lastName
                    - firstName
                    - mailaddress
                    - roleCode
                  properties:
                    lastName:
                      type: "string"
                      description: "姓"
                    firstName:
                      type: "string"
                      description: "名"
                    mailaddress:
                      type: "string"
                      description: "メールアドレス"
                    roleCode:
                      type: "integer"
                      description: "権限コード"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              properties:
                mailaddress:
                  type: "string"
                  description: "作成対象のメールアドレス(失敗時は運用者IDが発行されないため)"
                isSucceeded:
                  type: "boolean"
                  description: "処理成功フラグ"
        "400":
          description: "Invalid input"
  /office/operator/update:
    post:
      tags:
        - "Back office"
      summary: "運用者更新API"
      description: |-
        運用者を更新する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - operatorId
              - lastName
              - firstName
              - mailaddress
              - roleCode
            properties:
              operatorId:
                type: "integer"
                description: "運用者ID"
              lastName:
                type: "string"
                description: "姓"
              firstName:
                type: "string"
                description: "名"
              mailaddress:
                type: "string"
                description: "メールアドレス"
              roleCode:
                type: "integer"
                description: "権限コード"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /office/operator/delete:
    post:
      tags:
        - "Back office"
      summary: "運用者削除API"
      description: |-
        運用者IDに対する運用者を物理削除する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - operatorIds
            properties:
              operatorIds:
                type: "array"
                description: "運用者ID"
                items:
                  type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              properties:
                operatorId:
                  type: "integer"
                  description: "運用者ID"
                isSucceeded:
                  type: "boolean"
                  description: "処理成功フラグ"
        "400":
          description: "Invalid input"
  /common/contact/find:
    post:
      tags:
        - "Common"
      summary: "連絡参照API"
      description: "アカウントIDからトピックおよび連絡を取得する。"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              accountId:
                type: "string"
                description: "アカウントID"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              description: "連絡関連データ"
              properties:
                contactId:
                  type: "string"
                  description: "連絡ID"
                contactCode:
                  type: "integer"
                  description: "連絡対象コード"
                mailSubject:
                  type: "string"
                  description: "メールタイトル"
                mailContent:
                  type: "string"
                  description: "メール本文"
                messageBoxSubject:
                  type: "string"
                  description: "メッセージBoxタイトル"
                messageBoxContent:
                  type: "string"
                  description: "メッセージBox本文"
                response:
                  type: "string"
                  description: "回答"
                respondedDatetime:
                  type: "string"
                  description: "回答日時"
                createdDatetime:
                  type: "string"
                  description: "作成日時"
                displayedDatetime:
                  type: "string"
                  description: "掲載日時"
                wantDisplay:
                  type: "boolean"
                  description: "掲載フラグ"
                mailSendStartHour:
                  type: "string"
                  description: "メール送信可能開始時間"
                mailSendEndHour:
                  type: "string"
                  description: "メール送信可能終了時間"
                mailSendDatetime:
                  type: "string"
                  description: "メール送信日時"
                mailaddress:
                  type: "string"
                  description: "メールアドレス"
                sendStatusCode:
                  type: "integer"
                  description: "送信ステータスコード"
                sendServiceCode:
                  type: "integer"
                  description: "送信業務コード"
                sesMessageId:
                  type: "string"
                  description: "SES メッセージID"
                topicId:
                  type: "string"
                  description: "トピックID"
                topicCategories:
                  type: "array"
                  items: 
                    $ref: "#/definitions/TopicCategory"
                productAdditionalId:
                  type: "string"
                  description: "商品付加ID"
                productAdditionalVersion:
                  type: "integer"
                  description: "商品付加バージョン"
                policyNo:
                  type: "string"
                  description: "証券番号"
                productCode:
                  type: "string"
                  description: "販売商品コード"
                applyId:
                  type: "string"
                  description: "申込ID"
        "400":
          description: "Invalid input"
  /common/contact/markAsResponded:
    post:
      tags:
        - "Common"
      summary: "連絡対応済API"
      description: |-
        連絡IDに対する要対応連絡を対応済(CRM起点の連絡はCC確認待ち)にする。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              contactId:
                type: "string"
                description: "連絡ID"
              response:
                type: "string"
                description: "回答"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /common/resource/code:
    post:
      tags:
        - "Common"
      summary: "コード値参照API"
      description: |-
        コード値とラベルの一覧を返却する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              codeId:
                type: "array"
                items:
                  type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CodeMaster"
        "400":
          description: "Invalid input"
  /disclosure/start:
    post:
      tags:
        - "Disclosure"
      summary: "告知開始API"
      description: |-
        (未取得の場合)証券番号取得し、AURAセッションを開始(再開)し、回答すべき質問を返却する。
        セッション開始時に連携されるinput.xmlを保存する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            properties:
              applyId:
                type: "string"
                description: "申込ID"
      responses:
        "200":
          description: "successful operation"
          schema:
            properties:
              questions:
                type: "array"
                items:
                  $ref: "#/definitions/AuraQuestion"
              session:
                $ref: "#/definitions/AuraSession"
              status:
                $ref: "#/definitions/AuraStatus"
        "400":
          description: "Invalid input"
  /disclosure/answer:
    post:
      tags:
        - "Disclosure"
      summary: "告知回答API"
      description: |-
        AURAに質問の回答を送信する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            properties:
              answer:
                $ref: "#/definitions/AuraAnswer"
              session:
                $ref: "#/definitions/AuraSession"
      responses:
        "200":
          description: "successful operation"
          schema:
            properties:
              subQuestion:
                allOf:
                  - $ref: "#/definitions/AuraQuestion"
                description: "子質問"
              session:
                $ref: "#/definitions/AuraSession"
              status:
                $ref: "#/definitions/AuraStatus"
        "400":
          description: "Invalid input"
  /disclosure/complete:
    post:
      tags:
        - "Disclosure"
      summary: "告知完了API"
      description: |-
        AURAに告知完了を通知しOutput.xmlを基幹システムに連携する。&lt;br&gt;複数商品申込み時には画面で入力された回答結果を元に告知完了を行い、同様にOutput.xmlを基幹システムに連携する。&lt;br&gt;謝絶時には上記を行わない。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            properties:
              session:
                $ref: "#/definitions/AuraSession"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /apply/update:
    post:
      tags:
        - "Apply"
      summary: "申込更新API"
      description: |-
        入力データを更新し完了ステータスを付加する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - productGroups
            properties:
              productGroups:
                type: "array"
                items:
                  allOf:
                    - $ref: "#/definitions/ProductGroup"
                description: "商品グループ（商品付加、主契約、特約、承諾、契約者、受取人、支払、ドキュメント）"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /apply/submit:
    post:
      tags:
        - "Apply"
      summary: "申込完了API"
      description: |-
        申込データと付随するファイルを基幹システムに連携する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - applyId
            properties:
              applyId:
                type: "string"
                description: "申込ID"
              policyPostCls:
                type: "string"
                description: "保険証券郵送区分"
              applyChangeType:
                type: "string"
                description: "申込変更区分"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /apply/find:
    post:
      tags:
        - "Apply"
      summary: "申込参照API"
      description: |-
        アカウントに対する申込データを取得する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              accountId:
                type: "string"
                description: "アカウントID"
              applyId:
                type: "string"
                description: "申込ID"
              productAdditionalId:
                type: "string"
                description: "商品付加ID"
              productAdditionalVersion:
                type: "integer"
                description: "商品付加バージョン"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                applyId:
                  type: "string"
                  description: "申込ID"
                applyDatetime:
                  type: "string"
                  description: "申込完了日時"
                productGroups:
                  type: "array"
                  description: "商品グループ"
                  items:
                    allOf:
                      - $ref: "#/definitions/ProductGroup"
        "400":
          description: "Invalid input"
  /apply/delete:
    post:
      tags:
        - "Apply"
      summary: "申込削除API"
      description: |-
        申込IDに対する申込データを論理削除する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - applyId
            properties:
              applyId:
                type: "string"
                description: "申込ID"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /apply/individual/validate:
    post:
      tags:
        - "Apply"
      summary: "本人情報チェックAPI"
      description: "本人確認アシストAPIから取得した本人情報（生年月日、姓名、かな）と、申込データに対する個人情報の情報と突合する。"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - target
              - individual
            properties:
              target:
                type: "object"
                required:
                  - applyId
                properties:
                  applyId:
                    type: "string"
                    description: "申込ID"
              individual:
                required:
                  - lastName
                  - firstName
                  - lastNameKana
                  - firstNameKana
                  - birthDate
                properties:
                  lastName:
                    type: "string"
                    description: "姓"
                  firstName:
                    type: "string"
                    description: "名"
                  lastNameKana:
                    type: "string"
                    description: "セイ"
                  firstNameKana:
                    type: "string"
                    description: "メイ"
                  birthDate:
                    type: "string"
                    description: "生年月日"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /batch/judgeStatus/import:
    post:
      tags:
        - "Batch"
      summary: "ステータス同期API"
      description: "審査ステータスと査定結果を基幹システムから取得する。スケジューラーからの利用を想定している。"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BatchResult"
        "400":
          description: "Invalid input"
  /office/contact/add:
    post:
      tags:
        - "Back office"
      summary: "連絡追加・更新API"
      description: |-
        連絡IDに紐づくレコードが非存在の場合、連絡レコードを登録し、
        連絡IDに紐づくレコードが存在する場合、連絡レコードを更新する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              accountId:
                type: "integer"
                description: "アカウントID(追加時必須。連絡をアカウントに紐づける場合設定する。)"
              applyId:
                type: "integer"
                description: "申込ID(追加時必須。連絡を申込に紐づける場合設定する。)"
              productAdditionalId:
                type: "integer"
                description: "商品付加ID(追加時必須。連絡を商品に紐づける場合設定する。)"
              topicCategoryCode:
                type: "integer"
                description: "トピックカテゴリーコード(追加時必須)"
              needAction:
                type: "boolean"
                description: "対応要否フラグ(追加時必須。ユーザーアクションが必要な場合設定する。)"
                default: false
              contactId:
                type: "integer"
                description: "連絡ID(更新時必須)"
              contactCode:
                type: "integer"
                description: "連絡対象コード(追加時必須)"
              mailSubject:
                type: "string"
                description: "メールタイトル(追加時メールかメッセージBoxのどちらかが必須)"
              mailContent:
                type: "string"
                description: "メール本文(追加時メールかメッセージBoxのどちらかが必須)"
              messageBoxSubject:
                type: "string"
                description: "メッセージBoxタイトル(追加時メールかメッセージBoxのどちらかが必須)"
              messageBoxContent:
                type: "string"
                description: "メッセージBox本文(追加時メールかメッセージBoxのどちらかが必須)"
              response:
                type: "string"
                description: "回答"
              respondedDatetime:
                type: "string"
                description: "回答日時"
              mailSendStartHour:
                type: "integer"
                description: "メール送信可能開始時間(メール送信可能開始~終了時間の間にバッチ処理された連絡に対してメール送信を行う)"
              mailSendEndHour:
                type: "integer"
                description: "メール送信可能終了時間(メール送信可能開始~終了時間の間にバッチ処理された連絡に対してメール送信を行う)"
              wantDisplay:
                type: "boolean"
                description: "掲載フラグ(掲載が必要な場合設定する。)"
                default: false
              crmStaffName:
                type: "string"
                description: "CRM担当者（担当者の氏名を設定する。書式：姓＋全角スペース＋名）"
              crmApproverName:
                type: "string"
                description: "CRM承認者（承認者の氏名を設定する。主に掲載フラグをONにする（承認する）場合に使用する。書式：姓＋全角スペース＋名）"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /office/contact/delete:
    post:
      tags:
        - "Back office"
      summary: "連絡削除API"
      description: |-
        連絡IDに対する連絡レコードを論理削除する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - contactIds
            properties:
              contactIds:
                type: "array"
                description: "連絡ID"
                items:
                  type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              properties:
                contactId:
                  type: "integer"
                  description: "連絡ID"
                isSucceeded:
                  type: "boolean"
                  description: "処理成功フラグ"
        "400":
          description: "Invalid input"
  /office/announce/find:
    post:
      tags:
        - "Back office"
      summary: "アナウンス参照API"
      description: |-
        アナウンスIDに対する運用者データを取得する。&lt;br&gt;アナウンスIDを設定しない場合、全取得する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              announceId:
                type: "array"
                description: "アナウンスID(指定しない場合、全取得)"
                items:
                  type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Announce"
        "400":
          description: "Invalid input"
  /office/announce/add:
    post:
      tags:
        - "Back office"
      summary: "アナウンス追加・更新API"
      description: |-
        アナウンスを追加・更新する。&lt;br&gt;アナウンスIDが入力されていれば、更新処理を行う。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          schema:
            $ref: "#/definitions/Announce"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /office/announce/delete:
    post:
      tags:
        - "Back office"
      summary: "アナウンス削除API"
      description: |-
        アナウンスIDに対するアナウンスレコードを論理削除する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - announceIds
            properties:
              announceIds:
                type: "array"
                description: "アナウンスID"
                items:
                  type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              properties:
                announceId:
                  type: "integer"
                  description: "アナウンスID"
                isSucceeded:
                  type: "boolean"
                  description: "処理成功フラグ"
        "400":
          description: "Invalid input"
  /batch/maintenanceDatabae:
    post:
      tags:
        - "Batch"
      summary: "データメンテナンスAPI"
      description: "保持期間をすぎたデータを削除する、日次で実行する。&lt;br&gt;&lt;例&gt;&lt;br&gt;・一定期間更新ないアカウント・申込データを論理削除する。&lt;br&gt; ・一定期間更新のない仮アカウントを物理削除する。"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BatchResult"
        "400":
          description: "Invalid input"
  /batch/promotion:
    post:
      tags:
        - "Batch"
      summary: "フォローメール送信API"
      description: "申し込みフローが滞っているアカウントにフォローメールを送信する。日次で実行する。"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /common/bounce/update:
    post:
      tags:
        - "Common"
      summary: "バウンス受信API"
      description: "Amazon SESからコールされ、メールのバウンス状態を受信する。"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            required:
              - sesMessageId
              - becauseOf
            properties:
              sesMessageId:
                type: "string"
                description: "SESメッセージID"
              becauseOf:
                type: "string"
                description: "バウンス理由"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
definitions:
  ## TODO 頃合いを見てReq／Res最適化
  ProductAdditional:
    type: "object"
    description: "商品付加"
    required:
      - productCode
      - calcResult
      - hasDiff
      - isCanceled
      - productAdditionalVersion
    properties:
      productAdditionalId:
        type: "string"
        description: "商品付加ID"
      productAdditionalVersion:
        type: "integer"
        description: |-
          商品付加バージョン&lt;br&gt;バージョン管理する場合、現行からインクリメントする。
      productCode:
        type: "string"
        description: "販売商品コード"
      salesProductNameLabel:
        type: "string"
        description: "販売商品名称"
      salesProductPetNameLabel:
        type: "string"
        description: "販売商品愛称"
      unSelectableCds:
        type: "array"
        description: "同時申込不可商品"
        items:
          type: "string"
      calcResult:
        type: "object"
        description: "試算結果"
      calcBaseDate:
        type: "string"
        description: "保険料計算機基準日"
      disclosuredDate:
        type: "string"
        description: "告知完了日"
      applyDate:
        type: "string"
        description: "申込日"
      judgeStatCode:
        type: "integer"
        description: "審査ステータスコード"
      judgeReaction:
        type: "string"
        description: "査定結果対応"
      policyNo:
        type: "string"
        description: "証券番号"
      encryptedPolicyNo:
        type: "string"
        description: "暗号化証券番号"
      receiptDiversionPolicyNo:
        type: "string"
        description: "収納方法流用元証券番号"
      contractSpecialProvisions:
        type: "string"
        description: "契約日に関する特則"
      agencyCode:
        type: "string"
        description: "代理店コード"
      hasDiff:
        type: "boolean"
        description: "差分あり"
      isCanceled:
        type: "boolean"
        description: "取消済"
  ProductLineup:
    type: "object"
    description: |-
      商品ラインナップ&lt;br&gt;UI設計書_インターフェース仕様_商品情報取得APIを参照
    properties:
      salesProductCd:
        type: "string"
        description: "販売商品コード"
      salesProductName:
        type: "string"
        description: "販売商品名称"
      salesProductPetName:
        type: "string"
        description: "販売商品愛称"
      mainProvisionInfo:
        type: "object"
        description: "主約款情報"
      provisionInfoList:
        type: "array"
        description: "約款情報リスト"
        items:
          type: "object"
  ProductDesign:
    type: "object"
    description: "商品設計"
    properties:
      salesProductCd:
        type: "string"
        description: "販売商品コード"
      baseDate:
        type: "string"
        description: "計算基準日"
      contractSpecialProvisions:
        type: "string"
        description: "契約日に関する特則"
      restrictionJobExist:
        type: "string"
        description: "制限職種該当有無"
      basePolicy:
        $ref: "#/definitions/BasePolicy"
      riders:
        type: "array"
        items:
          $ref: "#/definitions/Rider"
  BasePolicy:
    type: "object"
    description: "主契約(基幹API項目より抽出。UCにより項目を吟味する)"
    properties:
      selectableFlg:
        type: "boolean"
        description: "選択フラグ"
      standardProvisionCd:
        type: "string"
        description: "標準約款コード"
      appliedProvisionCd:
        type: "string"
        description: "該当約款コード"
      appliedProvisionVersion:
        type: "string"
        description: "該当約款バージョン"
      provisionName:
        type: "string"
        description: "約款名称"
      benefitFirstPayConvCls:
        type: "string"
        description: "初回給付金支払倍率型区分"
      benefitFirstPayConvClsNameLabel:
        type: "string"
        description: "初回給付金支払倍率型区分名称"
      benefitFirstPayConvClsUnitLabel:
        type: "string"
        description: "初回給付金支払倍率型区分単位"
      insurancePeriodClass:
        type: "string"
        description: "保険期間種別"
      insurancePeriod:
        type: "string"
        description: "保険期間"
      insurancePeriodNameLabel:
        type: "string"
        description: "保険期間名称"
      insurancePeriodUnitLabel:
        type: "string"
        description: "保険期間単位"
      benefit:
        type: "string"
        description: "給付金額（保険金額）"
      benefitNameLabel:
        type: "string"
        description: "給付金額（保険金額）名称"
      benefitUnitLabel:
        type: "string"
        description: "給付金額（保険金額）単位"
      paymentPeriodClass:
        type: "string"
        description: "払込期間種別"
      paymentPeriod:
        type: "string"
        description: "払込期間"
      paymentPeriodNameLabel:
        type: "string"
        description: "払込期間名称"
      paymentPeriodUnitLabel:
        type: "string"
        description: "払込期間単位"
      paymentMethod:
        type: "string"
        description: "払込方法（回数）"
      paymentChannel:
        type: "string"
        description: "払込経路"
      premium:
        type: "string"
        description: "保険料"
      riskSelectionMethod:
        type: "string"
        description: "危険選択方法"
      livingNeedsRider:
        type: "string"
        description: "リビング・ニーズ特約有無"
      livingNeedsRiderNameLabel:
        type: "string"
        description: "リビング・ニーズ特約名称"
      livingNeedsRiderUnitLabel:
        type: "string"
        description: "リビング・ニーズ特約単位"
      freeOfPRiderFlg:
        type: "string"
        description: "保険料払込免除特約有無"
      freeOfPRiderNameLabel:
        type: "string"
        description: "保険料払込免除特約名称"
      freeOfPRiderUnitLabel:
        type: "string"
        description: "保険料払込免除特約単位"
      hosCovPayLimitClass:
        type: "string"
        description: "入院給付金支払限度日数型区分"
      hosCovPayLimitClassNameLabel:
        type: "string"
        description: "入院給付金支払限度日数型区分名称"
      hosCovPayLimitClassUnitLabel:
        type: "string"
        description: "入院給付金支払限度日数型区分単位"
      benefitPayConvCls:
        type: "string"
        description: "手術給付金支払倍率区分"
      benefitPayConvClsNameLabel:
        type: "string"
        description: "手術給付金支払倍率区分名称"
      benefitPayConvClsUnitLabel:
        type: "string"
        description: "手術給付金支払倍率区分単位"
      disHsptUnlmtDaysSpPrv:
        type: "string"
        description: "特定疾病支払日数無制限特則"
      disHsptUnlmtDaysSpPrvNameLabel:
        type: "string"
        description: "特定疾病支払日数無制限特則名称"
      disHsptUnlmtDaysSpPrvUnitLabel:
        type: "string"
        description: "特定疾病支払日数無制限特則単位"
      receiptDiversionExist:
        type: "string"
        description: "収納方法流用有無"
      receiptDiversionPolicyNo:
        type: "string"
        description: "収納方法流用元証券番号"
      diseaseCoverageType:
        type: "string"
        description: "保障範囲型区分"
      diseaseCoverageTypeNameLabel:
        type: "string"
        description: "保障範囲型区分名称"
      diseaseCoverageTypeUnitLabel:
        type: "string"
        description: "保障範囲型区分単位"
      freeOfPremiumRiderCls:
        type: "string"
        description: "保険料払込免除特約種類"
      freeOfPremiumRiderClsNameLabel:
        type: "string"
        description: "保険料払込免除特約種類名称"
      freeOfPremiumRiderClsUnitLabel:
        type: "string"
        description: "保険料払込免除特約種類単位"
      prepayKind:
        type: "string"
        description: "前納種類"
      firstPrepayFrequency:
        type: "string"
        description: "前納払込回数"
      downPaymentBenefit:
        type: "string"
        description: "一部一時払給付金額（保険金額）"
      currencyKind:
        type: "string"
        description: "通貨種類"
  PlanBasePolicy:
    type: "object"
    description: "プラン主契約"
    properties:
      rider:
        allOf:
          - $ref: "#/definitions/BasePolicy"
      isChosenWell:
        type: "boolean"
        description: "商品レコメンドフラグ"
  Rider:
    type: "object"
    description: "特約(基幹API項目より抽出。UCにより項目を吟味する)"
    properties:
      selectableFlg:
        type: "boolean"
        description: "選択フラグ"
      standardProvisionCd:
        type: "string"
        description: "標準約款コード"
      appliedProvisionCd:
        type: "string"
        description: "該当約款コード"
      appliedProvisionVersion:
        type: "string"
        description: "該当約款バージョン"
      provisionName:
        type: "string"
        description: "約款名称"
      benefitFirstPayConvCls:
        type: "string"
        description: "初回給付金支払倍率型区分"
      benefitFirstPayConvClsNameLabel:
        type: "string"
        description: "初回給付金支払倍率型区分名称"
      benefitFirstPayConvClsUnitLabel:
        type: "string"
        description: "初回給付金支払倍率型区分単位"
      insurancePeriodClass:
        type: "string"
        description: "保険期間種別"
      insurancePeriod:
        type: "string"
        description: "保険期間"
      insurancePeriodNameLabel:
        type: "string"
        description: "保険期間名称"
      insurancePeriodUnitLabel:
        type: "string"
        description: "保険期間単位"
      benefit:
        type: "string"
        description: "給付金額（保険金額）"
      benefitNameLabel:
        type: "string"
        description: "給付金額（保険金額）名称"
      benefitUnitLabel:
        type: "string"
        description: "給付金額（保険金額）単位"
      paymentPeriodClass:
        type: "string"
        description: "払込期間種別"
      paymentPeriod:
        type: "string"
        description: "払込期間"
      paymentPeriodNameLabel:
        type: "string"
        description: "払込期間名称"
      paymentPeriodUnitLabel:
        type: "string"
        description: "払込期間単位"
      additionType:
        type: "string"
        description: "付加区分"
      additionTypeNameLabel:
        type: "string"
        description: "付加区分名称"
      additionTypeUnitLabel:
        type: "string"
        description: "付加区分単位"
      diseaseCoverageType:
        type: "string"
        description: "保障範囲型区分"
      diseaseCoverageTypeNameLabel:
        type: "string"
        description: "保障範囲型区分名称"
      diseaseCoverageTypeUnitLabel:
        type: "string"
        description: "保障範囲型区分単位"
      freeOfPremiumRiderCls:
        type: "string"
        description: "保険料払込免除特約種類"
      freeOfPremiumRiderClsNameLabel:
        type: "string"
        description: "保険料払込免除特約種類名称"
      freeOfPremiumRiderClsUnitLabel:
        type: "string"
        description: "保険料払込免除特約種類単位"
      premium:
        type: "string"
        description: "保険料"
      hosCovPayLimitClass:
        type: "string"
        description: "入院給付金支払限度日数型区分"
      hosCovPayLimitClassNameLabel:
        type: "string"
        description: "入院給付金支払限度日数型区分名称"
      hosCovPayLimitClassUnitLabel:
        type: "string"
        description: "入院給付金支払限度日数型区分単位"
      disHsptUnlmtDaysSpPrv:
        type: "string"
        description: "特定疾病支払日数無制限特則"
      disHsptUnlmtDaysSpPrvNameLabel:
        type: "string"
        description: "特定疾病支払日数無制限特則名称"
      disHsptUnlmtDaysSpPrvUnitLabel:
        type: "string"
        description: "特定疾病支払日数無制限特則単位"
      downPaymentBenefit:
        type: "string"
        description: "一部一時払給付金額（保険金額）"
      riskSelectionMethod:
        type: "string"
        description: "危険選択方法"
  PlanRider:
    type: "object"
    description: "プラン特約"
    properties:
      rider:
        allOf:
          - $ref: "#/definitions/Rider"
      isChosenWell:
        type: "boolean"
        description: "加入傾向フラグ"
  Account:
    type: "object"
    description: "アカウント"
    properties:
      accountId:
        type: "string"
        description: "アカウントID"
      wannaDisconnect:
        type: "boolean"
        description: "メール配信切断可否（true:メール配信を切断する, false:接続する）"
      individual:
        $ref: "#/definitions/Individual"
      auth:
        $ref: "#/definitions/Auth"
  Individual:
    type: "object"
    description: "個人"
    required:
      - lastName
      - firstName
      - lastNameKana
      - firstNameKana
      - birthDate
      - sexCode
      - relationshipCode
    properties:
      individualId:
        type: "string"
        description: "個人ID(新規作成時は不要)"
      lastName:
        type: "string"
        description: "姓"
      firstName:
        type: "string"
        description: "名"
      lastNameKana:
        type: "string"
        description: "セイ"
      firstNameKana:
        type: "string"
        description: "メイ"
      birthDate:
        type: "string"
        description: "生年月日"
      sexCode:
        type: "string"
        description: "性別コード"
      relationshipCode:
        type: "string"
        description: "続柄コード"
      relationshipDetail:
        type: "string"
        description: "続柄詳細"
      zipCode:
        type: "string"
        description: "郵便番号"
      prefectures:
        type: "string"
        description: "都道府県"
      city:
        type: "string"
        description: "市区町村"
      blockStreet:
        type: "string"
        description: "丁目番地"
      buildings:
        type: "string"
        description: "建物名"
      jobCode:
        type: "string"
        description: "職業コード"
      jobSubCode:
        type: "string"
        description: "職種コード"
      jobDetailCode:
        type: "string"
        description: "業務内容コード"
      office:
        type: "string"
        description: "勤務先"
      incomeCode:
        type: "string"
        description: "年収コード"
      telNums:
        type: "array"
        description: "電話番号関連"
        items:
          allOf:
            - $ref: "#/definitions/TelNum"
  Auth:
    type: "object"
    description: "認証(外に出すデータは吟味すること)"
    properties:
      mailaddress:
        type: "string"
        description: "メールアドレス"
      extAuthCode:
        type: "integer"
        description: "外部認証コード"
      extAuthId:
        type: "string"
        description: "外部認証ID"
      lastLoginDatetime:
        type: "string"
        description: "最終ログイン日時"
      mailaddressCandidate:
        type: "string"
        description: "メールアドレス候補"
      password:
        type: "string"
        description: "パスワード"
  Payment:
    type: "object"
    description: "支払"
    properties:
      productAdditionalId:
        type: "string"
        description: "商品付加ID"
      paymentChannelCode:
        type: "integer"
        description: "払込経路コード"
      extPaymentId:
        type: "string"
        description: "外部支払ID(TODO：要調査)"
  Document:
    type: "object"
    description: "ドキュメント"
    properties:
      productAdditionalId:
        type: "string"
        description: "商品付加ID"
      documentCode:
        type: "integer"
        description: "ドキュメントコード"
      fileData:
        type: "string"
        description: "ファイルデータ(base64で暗号化された文字列)"
      createDatetime:
        type: "string"
        description: "生成日時"
  ProductPlan:
    type: "object"
    description: "商品単位のプラン情報"
    properties:
      salesProductCd:
        type: "string"
        description: "販売商品コード"
      isRecommended:
        type: "boolean"
        description: "商品レコメンドフラグ"
      plans:
        type: "array"
        description: "プラン内容のリスト（最大５件まで）"
        items:
          type: "object"
          description: "プラン内容"
          properties:
            planNo:
              type: "string"
              description: "プラン番号"
            planName:
              type: "string"
              description: "プラン名"
            planDetail:
              type: "string"
              description: "プラン詳細"
            isRecommended:
              type: "boolean"
              description: "プランレコメンドフラグ"
            basePolicy:
              allOf:
                - $ref: "#/definitions/BasePolicy"
              description: "主契約"
            riders:
              type: "array"
              items:
                allOf:
                  - $ref: "#/definitions/PlanRider"
                description: "プラン特約"
  PlanCache:
    type: "object"
    description: "契約年齢、性別から抽出した全商品のプラン情報（Redisから取得するプランデータもこの形）"
    properties:
      productPlans:
        type: "array"
        description: "商品単位のプラン情報リスト"
        items:
          allOf:
            - $ref: "#/definitions/ProductPlan"
  Plan:
    type: "object"
    description: "プラン"
    properties:
      planId:
        type: "integer"
        description: "プランID"
      fileName:
        type: "string"
        description: "ファイル名"
      fileData:
        type: "string"
        description: "ファイルデータ"
      startDateTime:
        type: "string"
        description: "適用開始日時"
      isApplying:
        type: "boolean"
        description: "適用中プランフラグ（true: 適用中プラン, false: それ以外のプラン）"
  Operator:
    type: "object"
    description: "運用者"
    properties:
      operatorId:
        type: "integer"
        description: "運用者ID"
      lastName:
        type: "string"
        description: "姓"
      firstName:
        type: "string"
        description: "名"
      mailaddress:
        type: "string"
        description: "メールアドレス"
      activatedDatetime:
        type: "string"
        description: "本登録日時"
      roleCode:
        type: "integer"
        description: "権限コード"
      loginTrialTimes:
        type: "string"
        description: "ログイン試行回数"
      lastLoginDatetime:
        type: "string"
        description: "最終ログイン日時"
      password:
        type: "string"
        description: "パスワード(レスポンス時は指定しない)"
  CodeMaster:
    type: "object"
    description: "コードマスター"
    required:
      - code
      - name
    properties:
      code:
        type: "string"
        description: "コード"
      name:
        type: "string"
        description: "コード名"
      children:
        type: "array"
        description: "子コード"
        items:
          $ref: "#/definitions/CodeMaster"
  Contact:
    type: "object"
    description: "連絡"
    properties:
      contactId:
        type: "string"
        description: "連絡ID"
      contactCode:
        type: "integer"
        description: "連絡対象コード"
      mailSubject:
        type: "string"
        description: "メールタイトル"
      mailContent:
        type: "string"
        description: "メール本文"
      messageBoxSubject:
        type: "string"
        description: "メッセージBoxタイトル"
      messageBoxContent:
        type: "string"
        description: "メッセージBox本文"
      response:
        type: "string"
        description: "回答"
      respondedDatetime:
        type: "string"
        description: "回答日時"
      createdDatetime:
        type: "string"
        description: "作成日時"
      displayedDatetime:
        type: "string"
        description: "掲載日時"
      wantDisplay:
        type: "boolean"
        description: "掲載フラグ"
      mailSendStartHour:
        type: "string"
        description: "メール送信可能開始時間"
      mailSendEndHour:
        type: "string"
        description: "メール送信可能終了時間"
      mailSendDatetime:
        type: "string"
        description: "メール送信日時"
      mailaddress:
        type: "string"
        description: "メールアドレス"
      sendStatusCode:
        type: "integer"
        description: "送信ステータスコード"
      sendServiceCode:
        type: "integer"
        description: "送信業務コード"
      sesMessageId:
        type: "string"
        description: "SES メッセージID"
      topicId:
        type: "string"
        description: "トピックID"
#  トピックDTOについて、作成したものの不使用のためコメントアウト。
#  Topic:
#    type: "object"
#    description: "トピック"
#    properties:
#      productAdditionalId:
#        type: "string"
#        description: "商品付加ID"
#      productAdditionalVersion:
#        type: "integer"
#        description: "商品付加バージョン"
#      applyId:
#        type: "string"
#        description: "申込ID"
#      accountId:
#        type: "string"
#        description: "アカウントID"
  TopicCategory:
    type: "object"
    description: "トピックカテゴリー"
    properties:
      topicCategoryCode:
        type: "integer"
        description: "トピックカテゴリーコード"
      topicStatusCode:
        type: "integer"
        description: "トピックステータスコード"
  Announce:
    type: "object"
    description: "アナウンス"
    properties:
      announceId:
        type: "string"
        description: "アナウンスID"
      subject:
        type: "string"
        description: "タイトル"
      content:
        type: "string"
        description: "内容"
      linkUrl:
        type: "string"
        description: "リンク先URL"
      startDatetime:
        type: "string"
        description: "表示開始日時"
      endDatetime:
        type: "string"
        description: "表示終了日時"
  AuraSession:
    type: "object"
    description: "AURAとのリクエストに使用されるセッション項目"
    properties:
      applyId:
        type: "string"
        description: "申込ID"
      etag:
        type: "string"
        description: "AURAセッション時に指定するEtag"
  AuraStatus:
    type: "object"
    description: |-
      AURA告知に対するステータス
      eアンダーライティングインテグレーションガイドv6参照
    properties:
      completed:
        type: "boolean"
        description: "告知回答が完了しているか"
      submitted:
        type: "boolean"
        description: "AURAに告知が提出済みか"
  AuraQuestion:
    type: "object"
    description: |-
      AURA告知
      eアンダーライティングインテグレーションガイドv6参照
  AuraAnswer:
    type: "object"
    description: |-
      AURA告知に対する回答(questionType, unknownAnswer以外にもあり)
      eアンダーライティングインテグレーションガイドv6参照
    properties:
      questionId:
        type: "string"
      questionType:
        type: "string"
      unknownAnswer:
        type: "boolean"
      otherParam:
        type: "object"
        description: "質問形態により異なるデータ"
  BatchResult:
    type: "object"
    description: "バッチ実行結果を返却する。"
    properties:
      resultCode:
        type: "integer"
        description: "info/errorのコードを指定"
      detail:
        type: "object"
        description: "エラー時の詳細()"
        properties:
          targetId:
            type: "string"
            description: "原因特定のために使用するID"
  TelNum:
    type: "object"
    description: "電話番号"
    properties:
      telNum:
        type: "string"
        description: "電話番号"
      telNumType:
        type: "integer"
        description: "電話番号タイプ"
  ProductGroup:
    type: "object"
    description: "商品グループ"
    properties:
      productAdditional:
        allOf:
          - $ref: "#/definitions/ProductAdditional"
        description: "商品付加"
      basePolicy:
        allOf:
          - $ref: "#/definitions/BasePolicy"
        description: "主契約"
      riders:
        type: "array"
        items:
          allOf:
            - $ref: "#/definitions/Rider"
        description: "特約"
      acceptances:
        type: "array"
        items:
          allOf:
            - $ref: "#/definitions/Acceptance"
        description: "承諾"
      self:
        allOf:
          - $ref: "#/definitions/Individual"
        description: "契約者"
      reciever:
        allOf:
          - $ref: "#/definitions/Individual"
        description: "受取人"
      payment:
        allOf:
          - $ref: "#/definitions/Payment"
        description: "支払"
      docs:
        type: "array"
        description: "ドキュメント"
        items:
          allOf:
            - $ref: "#/definitions/Document"
  Acceptance:
    type: "object"
    description: "承諾"
    required:
      - acceptanceTargetCode
      - acceptanceDatetime
    properties:
      acceptanceTargetCode:
        type: "integer"
        description: "承諾対象コード"
      acceptanceDatetime:
        type: "string"
        description: "承諾日時(日時を指定しない場合、バックエンドで時間を設定する)"
</textarea></td>
	<td class="n"><textarea name="sequenceB" rows="20">swagger: "2.0"
info:
  description: |-
    WEBダイレクトプロジェクトにおけるバックエンドモジュールAPIを記載する。&lt;br&gt;
    ルートパス設計はSS以降実施する。
  version: "1.0.0"
  title: "バックエンドモジュールAPI"
host: "localhost:8080"
basePath: "/webdirect"
# tags.nameにはマルチバイトは使わない
# description中の改行は&lt;br&gt;で行う
tags:
  - name: "Insurance products"
    description: "保険商品関連IFを定義する"
  - name: "Disclosure"
    description: "告知関連IFを定義する"
  - name: "Apply"
    description: "申込関連IFを定義する"
  - name: "Account"
    description: "アカウント関連IFを定義する"
  - name: "Batch"
    description: "スケジューラー起動を想定したIFを定義する"
  - name: "Back office"
    description: "管理画面やCRMからコールされるIFを定義する"
  - name: "Common"
    description: "業務に依存しない汎用IFを定義する"
schemes:
  - "http"
  - "https"
paths:
  /product/design:
    post:
      tags:
        - "Insurance products"
      summary: "保険商品設計API"
      description: "生年月日・性別を元に、契約年齢を算出し保険商品ラインナップ取得する。"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              birthDate:
                type: "string"
                description: "生年月日"
              sex:
                type: "string"
                description: "性別"
              baseDate:
                type: "string"
                description: "計算基準日"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: object
            properties:
              contractAge:
                type: "integer"
              products:
                type: "array"
                items:
                  $ref: "#/definitions/ProductLineup"
              planCache:
                type: "object"
                allOf:
                  - $ref: "#/definitions/PlanCache"
                description: "プランキャッシュ(契約年齢・性別で抽出したデータ)"
        "400":
          description: "Invalid input"
  # TODO リファクタリング
  /product/feeRange/find:
    post:
      tags:
        - "Insurance products"
      summary: "保険料レンジ取得API"
      description: |-
        固定要素・生年月日・性別別の保険料レンジを取得する(主契約・特約のパラメーター未精査)。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              birthDate:
                type: "string"
                description: "生年月日"
              sex:
                type: "string"
                description: "性別"
              productDesigns:
                type: "array"
                description: "商品設計（制限職種該当有無（restrictionJobExist）は指定不要）"
                items:
                  allOf:
                    - $ref: "#/definitions/ProductDesign"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                productCode:
                  type: "string"
                  description: "販売商品コード"
                appliedProvisionCd:
                  type: "string"
                  description: "該当約款コード"
                benefit:
                  type: "array"
                  description: "給付金額(保険金額)"
                  items:
                    type: "string"
                premium:
                  type: "array"
                  description: "保険料"
                  items:
                    type: "string"
        "400":
          description: "Invalid input"
  # TODO リファクタリング
  /product/fee/get:
    post:
      tags:
        - "Insurance products"
      summary: "保険料計算API"
      description: |-
        固定要素・生年月日・性別別の保険料を取得する(主契約・特約のパラメーター未精査)。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              birthDate:
                type: "string"
                description: "生年月日"
              sex:
                type: "string"
                description: "性別"
              needCheck:
                type: "boolean"
                description: "基幹APIを経由でチェックが必要か"
              productDesigns:
                type: "array"
                description: "商品設計"
                items:
                  allOf:
                    - $ref: "#/definitions/ProductDesign"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                productCode:
                  type: "string"
                  description: "販売商品コード"
                appliedProvisionCd:
                  type: "string"
                  description: "該当約款コード"
                premium:
                  type: "string"
                  description: "保険料"
        "400":
          description: "Invalid input"
  /product/validate:
    post:
      tags:
        - "Insurance products"
      summary: "保険商品チェックAPI"
      description: |-
        販売条件チェックAPI経由のチェックと複数同時通算チェックを行い、保険商品の妥当性チェックを行う。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              birthDate:
                type: "string"
                description: "生年月日"
              sex:
                type: "string"
                description: "性別"
              productDesigns:
                type: "array"
                description: "チェック対象の商品"
                items:
                  allOf:
                    - $ref: "#/definitions/ProductDesign"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /account/auth:
    post:
      tags:
        - "Account"
      summary: "アカウント認証API"
      description: |-
        メールアドレスが確認済みのアカウントに対する、アカウント/パスワードか外部認証IDでマッチしたユーザー情報を返却する。&lt;br&gt;初回アクセス時にアカウントを本登録に変更する。&lt;br&gt;指定回数以上認証失敗した場合、アカウントをロックする。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              mailaddress:
                type: "string"
                description: "メールアドレス(アカウント/パスワードで認証時必須)"
              password:
                type: "string"
                description: "パスワード(アカウント/パスワードで認証時必須)"
              extAuthCode:
                type: "integer"
                description: "外部認証コード(外部認証時必須)"
              extAuthId:
                type: "string"
                description: "外部認証ID(外部認証時必須)"
              isFirstLogin:
                type: "boolean"
                description: "初回ログインか"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Account"
        "401":
          description: "authentication error"
  /apply/add:
    post:
      tags:
        - "Apply"
      summary: "申込追加API"
      description: |-
        アカウント未発行時：認証・個人データを元に仮アカウントを発行し、商品設計から申込を作成する。&lt;br&gt;アカウント発行済(個人IDが設定されている時)：個人データを元にアカウント情報を更新して、商品設計から申込を作成する。&lt;br&gt;※仮アカウントの通知はメールにて行う。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - individual
              - acceptances
              - productDesignsV1
              - productDesignsV2
            properties:
              individual:
                allOf:
                  - $ref: "#/definitions/Individual"
                description: "個人"
              auth:
                allOf:
                  - $ref: "#/definitions/Auth"
                description: "認証(アカウント発行済の場合には不要)"
              acceptances:
                type: "array"
                description: "承諾"
                items:
                  allOf:
                    - $ref: "#/definitions/Acceptance"
              productDesignsV1:
                type: "array"
                items:
                  $ref: "#/definitions/ProductDesign"
                description: "商品設計(当初意向)"
              productDesignsV2:
                type: "array"
                items:
                  $ref: "#/definitions/ProductDesign"
                description: "商品設計(最終意向)"
              agencyCode:
                type: "string"
                description: "代理店コード"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /account/resetPassword:
    post:
      tags:
        - "Account"
      summary: "パスワード再設定API"
      description: |-
        メールアドレスを持つアカウントに対してハッシュ生成を行い、ハッシュ付きURLをメールで送付する。&lt;br&gt;ハッシュの有効期限は現在日時より2時間。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - mailaddress
            properties:
              mailaddress:
                type: "string"
                description: "メールアドレス"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /account/resetMailaddress:
    post:
      tags:
        - "Account"
      summary: "メールアドレス再設定API"
      description: |-
        アカウントに対してハッシュ生成を行い、ハッシュ付きURLをメールで送付する。&lt;br&gt;ハッシュの有効期限は現在日時より2時間。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - accountId
              - mailaddress
              - confirmMailaddress
            properties:
              accountId:
                type: "integer"
                description: "アカウントID"
              mailaddress:
                type: "string"
                description: "メールアドレス"
              confirmMailaddress:
                type: "string"
                description: "確認用メールアドレス"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /account/auth/{hashCode}:
    get:
      tags:
        - "Account"
      summary: "認証ハッシュチェックAPI"
      description: |-
        ハッシュ値が妥当か確認する。&lt;br&gt;ハッシュ値生成方法はSS以降決定。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "hashCode"
          in: "path"
          required: true
          type: "string"
          description: "ハッシュ値"
        - name: "hashUsageCode"
          in: "query"
          required: true
          type: "string"
          description: "ハッシュ用途コード"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Account"
        "401":
          description: "authentication error"
  /account/updatePassword:
    post:
      tags:
        - "Account"
      summary: "パスワード変更API"
      description: |-
        パスワードを変更する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - accountId
              - password
              - confirmPassword
            properties:
              accountId:
                type: "integer"
                description: "アカウントID"
              password:
                type: "string"
                description: "パスワード"
              confirmPassword:
                type: "string"
                description: "確認用パスワード"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /account/updateMailaddress:
    post:
      tags:
        - "Account"
      summary: "メールアドレス変更API"
      description: |-
        ログインIDとしてのメールアドレスを事前に入力したメールアドレス候補で上書きする。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              mailaddress:
                type: "string"
                description: "メールアドレス(アカウント/パスワードで認証時必須)"
              password:
                type: "string"
                description: "パスワード(アカウント/パスワードで認証時必須)"
              extAuthCode:
                type: "integer"
                description: "外部認証コード(外部認証時必須)"
              extAuthId:
                type: "string"
                description: "外部認証ID(外部認証時必須)"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /account/canCreateNew:
    post:
      tags:
        - "Account"
      summary: "アカウント発行可否チェックAPI"
      description: |-
        メールアドレスや外部認証IDが未登録かどうかをチェックする
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              mailaddress:
                type: "string"
                description: "メールアドレス"
              extAuthCode:
                type: "integer"
                description: "外部認証コード(外部認証チェック時、IDとコードはセットで必須)"
              extAuthId:
                type: "string"
                description: "外部認証ID(外部認証チェック時、IDとコードはセットで必須)"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  # TODO 枠だけ作成。仕様は別途定義する
  /office/account/update:
    post:
      tags:
        - "Back office"
      summary: "アカウント更新API"
      description: |-
        アカウントIDに対するアカウントデータを更新する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - accountId
            properties:
              accountId:
                type: "integer"
                description: "アカウントID"
              mailAddress:
                type: "string"
                description: "メールアドレス"
              wannaDisconnect:
                type: "boolean"
                description: "メール配信切断可否（true:メール配信を切断する, false:接続する）"
              telNums:
                type: "array"
                items:
                  allOf:
                    - $ref: "#/definitions/TelNum"
                description: "電話番号"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /office/plan/find:
    post:
      tags:
        - "Back office"
      summary: "プラン参照API"
      description: |-
        プランデータを参照する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              planFileId:
                type: "integer"
                description: "プランファイルID。指定しない場合、現在適用中と次回適用予定のプランを返却する。"
              needFileData:
                type: "boolean"
                description: "ファイルデータが必要な場合trueを設定する(デフォルトはfalse)"
      responses:
        "200":
          description: "successful operation"
          schema:
            properties:
              plans:
                type: "array"
                items:
                  allOf:
                    - $ref: "#/definitions/PlanFile"
        "400":
          description: "Invalid input"
  /office/plan/add:
    post:
      tags:
        - "Back office"
      summary: "プラン追加API"
      description: |-
        プランデータを追加する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - startDatetime
              - fileName
              - fileData
            properties:
              startDatetime:
                type: "string"
                description: "適用開始日時"
              fileName:
                type: "string"
                description: "ファイル名"
              fileData:
                type: "string"
                description: "ファイルデータ（Base64で暗号化された文字列）"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /office/plan/delete:
    post:
      tags:
        - "Back office"
      summary: "プラン削除API"
      description: |-
        プランファイルIDに対するプランデータを物理削除する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - planFileId
            properties:
              planFileId:
                type: "integer"
                description: "プランファイルID"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /office/operator/auth:
    post:
      tags:
        - "Back office"
      summary: "運用者認証API"
      description: |-
        ID／Password方式で運用者を認証する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - mailaddress
              - password
            properties:
              mailaddress:
                type: "string"
              password:
                type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Operator"
        "401":
          description: "Invalid input"
  /office/operator/auth/{hashCode}:
    get:
      tags:
        - "Back office"
      summary: "運用者認証ハッシュチェックAPI"
      description: |-
        ハッシュ値が妥当か確認する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "hashCode"
          in: "path"
          required: true
          type: "string"
          description: "ハッシュ値"
        - name: "hashUsageCode"
          in: "query"
          required: true
          type: "string"
          description: "ハッシュ用途コード"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Operator"
        "401":
          description: "Invalid input"
  /office/operator/resetPassword:
    post:
      tags:
        - "Back office"
      summary: "運用者パスワード再設定API"
      description: |-
        メールアドレスを持つアカウントに対してハッシュ生成を行い、ハッシュ付きURLをメールで送付する。&lt;br&gt;ハッシュの有効期限は現在日時より2時間。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - mailaddress
            properties:
              mailaddress:
                type: "string"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /office/operator/updatePassword:
    post:
      tags:
        - "Back office"
      summary: "運用者パスワード更新API"
      description: |-
        運用者認証ハッシュチェック後、運用者パスワードを更新し、認証ハッシュチェックに利用したハッシュデータを削除する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - operatorId
              - password
              - confirmPassword
            properties:
              operatorId:
                type: "integer"
                description: "運用者ID"
              password:
                type: "string"
                description: "パスワード"
              confirmPassword:
                type: "string"
                description: "確認用パスワード"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /office/operator/find:
    post:
      tags:
        - "Back office"
      summary: "運用者参照API"
      description: |-
        運用者IDに対する運用者データを取得する。&lt;br&gt;運用者IDを設定しない場合、全取得する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              operatorId:
                type: "array"
                description: "運用者ID(指定しない場合、全取得)"
                items:
                  type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Operator"
        "400":
          description: "Invalid input"
  /office/operator/add:
    post:
      tags:
        - "Back office"
      summary: "運用者追加API"
      description: |-
        仮発行状態で運用者を追加し、メールにて通知を行う。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              operators:
                type: "array"
                items:
                  required:
                    - lastName
                    - firstName
                    - mailaddress
                    - roleCode
                  properties:
                    lastName:
                      type: "string"
                      description: "姓"
                    firstName:
                      type: "string"
                      description: "名"
                    mailaddress:
                      type: "string"
                      description: "メールアドレス"
                    roleCode:
                      type: "integer"
                      description: "権限コード"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              properties:
                mailaddress:
                  type: "string"
                  description: "作成対象のメールアドレス(失敗時は運用者IDが発行されないため)"
                isSucceeded:
                  type: "boolean"
                  description: "処理成功フラグ"
        "400":
          description: "Invalid input"
  /office/operator/update:
    post:
      tags:
        - "Back office"
      summary: "運用者更新API"
      description: |-
        運用者を更新する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - operatorId
              - lastName
              - firstName
              - mailaddress
              - roleCode
            properties:
              operatorId:
                type: "integer"
                description: "運用者ID"
              lastName:
                type: "string"
                description: "姓"
              firstName:
                type: "string"
                description: "名"
              mailaddress:
                type: "string"
                description: "メールアドレス"
              roleCode:
                type: "integer"
                description: "権限コード"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /office/operator/delete:
    post:
      tags:
        - "Back office"
      summary: "運用者削除API"
      description: |-
        運用者IDに対する運用者を物理削除する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - operatorIds
            properties:
              operatorIds:
                type: "array"
                description: "運用者ID"
                items:
                  type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              properties:
                operatorId:
                  type: "integer"
                  description: "運用者ID"
                isSucceeded:
                  type: "boolean"
                  description: "処理成功フラグ"
        "400":
          description: "Invalid input"
  /common/contact/find:
    post:
      tags:
        - "Common"
      summary: "連絡参照API"
      description: "アカウントIDからトピックおよび連絡を取得する。"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              accountId:
                type: "integer"
                description: "アカウントID"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              description: "連絡関連データ"
              properties:
                contactId:
                  type: "integer"
                  description: "連絡ID"
                contactCode:
                  type: "integer"
                  description: "連絡対象コード"
                mailSubject:
                  type: "string"
                  description: "メールタイトル"
                mailContent:
                  type: "string"
                  description: "メール本文"
                messageBoxSubject:
                  type: "string"
                  description: "メッセージBoxタイトル"
                messageBoxContent:
                  type: "string"
                  description: "メッセージBox本文"
                response:
                  type: "string"
                  description: "回答"
                respondedDatetime:
                  type: "string"
                  description: "回答日時"
                createdDatetime:
                  type: "string"
                  description: "作成日時"
                displayedDatetime:
                  type: "string"
                  description: "掲載日時"
                wantDisplay:
                  type: "boolean"
                  description: "掲載フラグ"
                mailSendStartHour:
                  type: "string"
                  description: "メール送信可能開始時間"
                mailSendEndHour:
                  type: "string"
                  description: "メール送信可能終了時間"
                mailSendDatetime:
                  type: "string"
                  description: "メール送信日時"
                mailaddress:
                  type: "string"
                  description: "メールアドレス"
                sendStatusCode:
                  type: "integer"
                  description: "送信ステータスコード"
                sendServiceCode:
                  type: "integer"
                  description: "送信業務コード"
                sesMessageId:
                  type: "string"
                  description: "SES メッセージID"
                topicId:
                  type: "integer"
                  description: "トピックID"
                topicCategories:
                  type: "array"
                  items: 
                    $ref: "#/definitions/TopicCategory"
                productAdditionalId:
                  type: "integer"
                  description: "商品付加ID"
                productAdditionalVersion:
                  type: "integer"
                  description: "商品付加バージョン"
                policyNo:
                  type: "string"
                  description: "証券番号"
                productCode:
                  type: "string"
                  description: "販売商品コード"
                applyId:
                  type: "integer"
                  description: "申込ID"
        "400":
          description: "Invalid input"
  /common/contact/markAsResponded:
    post:
      tags:
        - "Common"
      summary: "連絡対応済API"
      description: |-
        連絡IDに対する要対応連絡を対応済(CRM起点の連絡はCC確認待ち)にする。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              contactId:
                type: "integer"
                description: "連絡ID"
              response:
                type: "string"
                description: "回答"
              topicCategoryCode:
                type: "integer"
                description: "トピックカテゴリーコード"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /common/resource/code:
    post:
      tags:
        - "Common"
      summary: "コード値参照API"
      description: |-
        コード値とラベルの一覧を返却する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              codeId:
                type: "array"
                items:
                  type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CodeMaster"
        "400":
          description: "Invalid input"
  /disclosure/start:
    post:
      tags:
        - "Disclosure"
      summary: "告知開始API"
      description: |-
        (未取得の場合)証券番号取得し、AURAセッションを開始(再開)し、回答すべき質問を返却する。
        セッション開始時に連携されるinput.xmlを保存する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            properties:
              applyId:
                type: "integer"
                description: "申込ID"
      responses:
        "200":
          description: "successful operation"
          schema:
            properties:
              questions:
                type: "array"
                items:
                  $ref: "#/definitions/AuraQuestion"
              session:
                $ref: "#/definitions/AuraSession"
              status:
                $ref: "#/definitions/AuraStatus"
        "400":
          description: "Invalid input"
  /disclosure/answer:
    post:
      tags:
        - "Disclosure"
      summary: "告知回答API"
      description: |-
        AURAに質問の回答を送信する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            properties:
              answer:
                $ref: "#/definitions/AuraAnswer"
              session:
                $ref: "#/definitions/AuraSession"
      responses:
        "200":
          description: "successful operation"
          schema:
            properties:
              questions:
                type: "array"
                items:
                  $ref: "#/definitions/AuraQuestion"
              session:
                $ref: "#/definitions/AuraSession"
              status:
                $ref: "#/definitions/AuraStatus"
        "400":
          description: "Invalid input"
  /disclosure/complete:
    post:
      tags:
        - "Disclosure"
      summary: "告知完了API"
      description: |-
        AURAに告知完了を通知しOutput.xmlを基幹システムに連携する。&lt;br&gt;複数商品申込み時には画面で入力された回答結果を元に告知完了を行い、同様にOutput.xmlを基幹システムに連携する。&lt;br&gt;謝絶時には上記を行わない。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            properties:
              session:
                $ref: "#/definitions/AuraSession"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /apply/update:
    post:
      tags:
        - "Apply"
      summary: "申込更新API"
      description: |-
        入力データを更新し完了ステータスを付加する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - productGroups
            properties:
              productGroups:
                type: "array"
                items:
                  allOf:
                    - $ref: "#/definitions/ProductGroup"
                description: "商品グループ（商品付加、主契約、特約、承諾、契約者、受取人、支払、ドキュメント）"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /apply/submit:
    post:
      tags:
        - "Apply"
      summary: "申込完了API"
      description: |-
        申込データと付随するファイルを基幹システムに連携する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - applyId
            properties:
              applyId:
                type: "integer"
                description: "申込ID"
              policyPostCls:
                type: "string"
                description: "保険証券郵送区分"
              applyChangeType:
                type: "string"
                description: "申込変更区分"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /apply/find:
    post:
      tags:
        - "Apply"
      summary: "申込参照API"
      description: |-
        アカウントに対する申込データを取得する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              accountId:
                type: "integer"
                description: "アカウントID"
              applyId:
                type: "integer"
                description: "申込ID"
              productAdditionalId:
                type: "integer"
                description: "商品付加ID"
              productAdditionalVersion:
                type: "integer"
                description: "商品付加バージョン"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                applyId:
                  type: "integer"
                  description: "申込ID"
                applyDatetime:
                  type: "string"
                  description: "申込完了日時"
                productGroups:
                  type: "array"
                  description: "商品グループ"
                  items:
                    allOf:
                      - $ref: "#/definitions/ProductGroup"
        "400":
          description: "Invalid input"
  /apply/delete:
    post:
      tags:
        - "Apply"
      summary: "申込削除API"
      description: |-
        申込IDに対する申込データを論理削除する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - applyId
            properties:
              applyId:
                type: "integer"
                description: "申込ID"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /apply/individual/validate:
    post:
      tags:
        - "Apply"
      summary: "本人情報チェックAPI"
      description: "本人確認アシストAPIから取得した本人情報（生年月日、姓名、かな）と、申込データに対する個人情報の情報と突合する。"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - target
              - individual
            properties:
              target:
                type: "object"
                required:
                  - applyId
                properties:
                  applyId:
                    type: "integer"
                    description: "申込ID"
              individual:
                required:
                  - lastName
                  - firstName
                  - lastNameKana
                  - firstNameKana
                  - birthDate
                properties:
                  lastName:
                    type: "string"
                    description: "姓"
                  firstName:
                    type: "string"
                    description: "名"
                  lastNameKana:
                    type: "string"
                    description: "セイ"
                  firstNameKana:
                    type: "string"
                    description: "メイ"
                  birthDate:
                    type: "string"
                    description: "生年月日"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /apply/redesign:
    post:
      tags:
        - "Apply"
      summary: "申込再設定API"
      description: |-
        本人確認書類を更新し、基幹システムの本人確認書類搭載APIをコールする。
        ※IF項目は申込更新と同様（ただし使用するデータは本人確認書類のみをターゲットとする）
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - productGroups
            properties:
              productGroups:
                type: "array"
                items:
                  allOf:
                    - $ref: "#/definitions/ProductGroup"
                description: 商品グループ（商品付加、主契約、特約、承諾、契約者、受取人、支払、ドキュメント）
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /batch/judgeStatus/import:
    post:
      tags:
        - "Batch"
      summary: "ステータス同期API"
      description: "審査ステータスと査定結果を基幹システムから取得する。スケジューラーからの利用を想定している。"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BatchResult"
        "400":
          description: "Invalid input"
  /office/contact/add:
    post:
      tags:
        - "Back office"
      summary: "連絡追加・更新API"
      description: |-
        連絡IDに紐づくレコードが非存在の場合、連絡レコードを登録し、
        連絡IDに紐づくレコードが存在する場合、連絡レコードを更新する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              accountId:
                type: "integer"
                description: "アカウントID(追加時必須。連絡をアカウントに紐づける場合設定する。)"
              applyId:
                type: "integer"
                description: "申込ID(追加時必須。連絡を申込に紐づける場合設定する。)"
              productAdditionalId:
                type: "integer"
                description: "商品付加ID(追加時必須。連絡を商品に紐づける場合設定する。)"
              topicCategoryCode:
                type: "integer"
                description: "トピックカテゴリーコード(追加時必須)"
              topicStatusCode:
                type: "integer"
                description: "トピックステータスコード(新規追加時は対応不要、未対応のいずれか、代理回答時は対応済を設定する。)"
              contactId:
                type: "integer"
                description: "連絡ID(更新時必須)"
              contactCode:
                type: "integer"
                description: "連絡対象コード(追加時必須)"
              mailSubject:
                type: "string"
                description: "メールタイトル(追加時メールかメッセージBoxのどちらかが必須)"
              mailContent:
                type: "string"
                description: "メール本文(追加時メールかメッセージBoxのどちらかが必須)"
              messageBoxSubject:
                type: "string"
                description: "メッセージBoxタイトル(追加時メールかメッセージBoxのどちらかが必須)"
              messageBoxContent:
                type: "string"
                description: "メッセージBox本文(追加時メールかメッセージBoxのどちらかが必須)"
              response:
                type: "string"
                description: "回答"
              respondedDatetime:
                type: "string"
                description: "回答日時"
              mailSendStartHour:
                type: "integer"
                description: "メール送信可能開始時間(メール送信可能開始~終了時間の間にバッチ処理された連絡に対してメール送信を行う)"
              mailSendEndHour:
                type: "integer"
                description: "メール送信可能終了時間(メール送信可能開始~終了時間の間にバッチ処理された連絡に対してメール送信を行う)"
              wantDisplay:
                type: "boolean"
                description: "掲載フラグ(掲載が必要な場合設定する。)"
                default: false
              crmStaffName:
                type: "string"
                description: "CRM担当者（担当者の氏名を設定する。書式：姓＋全角スペース＋名）"
              crmApproverName:
                type: "string"
                description: "CRM承認者（承認者の氏名を設定する。主に掲載フラグをONにする（承認する）場合に使用する。書式：姓＋全角スペース＋名）"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /office/contact/delete:
    post:
      tags:
        - "Back office"
      summary: "連絡削除API"
      description: |-
        連絡IDに対する連絡レコードを論理削除する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - contactIds
            properties:
              contactIds:
                type: "array"
                description: "連絡ID"
                items:
                  type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              properties:
                contactId:
                  type: "integer"
                  description: "連絡ID"
                isSucceeded:
                  type: "boolean"
                  description: "処理成功フラグ"
        "400":
          description: "Invalid input"
  /office/announce/find:
    post:
      tags:
        - "Back office"
      summary: "アナウンス参照API"
      description: |-
        アナウンスIDに対する運用者データを取得する。&lt;br&gt;アナウンスIDを設定しない場合、全取得する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              announceId:
                type: "array"
                description: "アナウンスID(指定しない場合、全取得)"
                items:
                  type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Announce"
        "400":
          description: "Invalid input"
  /office/announce/add:
    post:
      tags:
        - "Back office"
      summary: "アナウンス追加・更新API"
      description: |-
        アナウンスを追加・更新する。&lt;br&gt;アナウンスIDが入力されていれば、更新処理を行う。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          schema:
            $ref: "#/definitions/Announce"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /office/announce/delete:
    post:
      tags:
        - "Back office"
      summary: "アナウンス削除API"
      description: |-
        アナウンスIDに対するアナウンスレコードを論理削除する。
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            required:
              - announceIds
            properties:
              announceIds:
                type: "array"
                description: "アナウンスID"
                items:
                  type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              properties:
                announceId:
                  type: "integer"
                  description: "アナウンスID"
                isSucceeded:
                  type: "boolean"
                  description: "処理成功フラグ"
        "400":
          description: "Invalid input"
  /batch/maintenanceDatabae:
    post:
      tags:
        - "Batch"
      summary: "データメンテナンスAPI"
      description: "保持期間をすぎたデータを削除する、日次で実行する。&lt;br&gt;&lt;例&gt;&lt;br&gt;・一定期間更新ないアカウント・申込データを論理削除する。&lt;br&gt; ・一定期間更新のない仮アカウントを物理削除する。"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BatchResult"
        "400":
          description: "Invalid input"
  /batch/promotion:
    post:
      tags:
        - "Batch"
      summary: "フォローメール送信API"
      description: "申し込みフローが滞っているアカウントにフォローメールを送信する。日次で実行する。"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
  /common/bounce/update:
    post:
      tags:
        - "Common"
      summary: "バウンス受信API"
      description: "Amazon SESからコールされ、メールのバウンス状態を受信する。"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            required:
              - sesMessageId
              - becauseOf
            properties:
              sesMessageId:
                type: "string"
                description: "SESメッセージID"
              becauseOf:
                type: "string"
                description: "バウンス理由"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid input"
definitions:
  ProductAdditional:
    type: "object"
    description: "商品付加"
    required:
      - productCode
      - isCanceled
      - productAdditionalVersion
    properties:
      productAdditionalId:
        type: "integer"
        description: "商品付加ID"
      productAdditionalVersion:
        type: "integer"
        description: |-
          商品付加バージョン&lt;br&gt;バージョン管理する場合、現行からインクリメントする。
      updateDatetime:
        type: "string"
        description: "更新日時"
      productCode:
        type: "string"
        description: "販売商品コード"
      salesProductNameLabel:
        type: "string"
        description: "販売商品名称"
      salesProductPetNameLabel:
        type: "string"
        description: "販売商品愛称"
      calcBaseDate:
        type: "string"
        description: "保険料計算機基準日"
      disclosuredDate:
        type: "string"
        description: "告知完了日"
      policyNo:
        type: "string"
        description: "証券番号"
      encryptedPolicyNo:
        type: "string"
        description: "暗号化証券番号"
      receiptDiversionPolicyNo:
        type: "string"
        description: "収納方法流用元証券番号"
      contractSpecialProvisions:
        type: "string"
        description: "契約日に関する特則"
      policyPostCls:
        type: "string"
        description: "保険証券郵送区分"
      agencyCode:
        type: "string"
        description: "代理店コード"
      unselectableCds:
        type: "array"
        description: "同時申込不可商品"
        items:
          type: "string"
      transferStatusCode:
        type: "string"
        description: "連動ステータスコード"
      applyChangeType:
        type: "string"
        description: "申込変更区分"
      judgementGetDatetime:
        type: "string"
        description: "審査取得日時"
      expirationDatetime:
        type: "string"
        description: "有効期限日時"
      isCanceled:
        type: "boolean"
        description: "取消済"
  ProductLineup:
    type: "object"
    description: |-
      商品ラインナップ&lt;br&gt;UI設計書_インターフェース仕様_商品情報取得APIを参照
    properties:
      salesProductCd:
        type: "string"
        description: "販売商品コード"
      salesProductName:
        type: "string"
        description: "販売商品名称"
      salesProductPetName:
        type: "string"
        description: "販売商品愛称"
      mainProvisionInfo:
        type: "object"
        description: "主約款情報"
      provisionInfoList:
        type: "array"
        description: "約款情報リスト"
        items:
          type: "object"
  ProductDesign:
    type: "object"
    description: "商品設計"
    properties:
      salesProductCd:
        type: "string"
        description: "販売商品コード"
      baseDate:
        type: "string"
        description: "計算基準日"
      contractSpecialProvisions:
        type: "string"
        description: "契約日に関する特則"
      restrictionJobExist:
        type: "string"
        description: "制限職種該当有無"
      basePolicy:
        $ref: "#/definitions/BasePolicy"
      riders:
        type: "array"
        items:
          $ref: "#/definitions/Rider"
  BasePolicy:
    type: "object"
    description: "主契約(基幹API項目より抽出。UCにより項目を吟味する)"
    properties:
      selectableFlg:
        type: "boolean"
        description: "選択フラグ"
      standardProvisionCd:
        type: "string"
        description: "標準約款コード"
      appliedProvisionCd:
        type: "string"
        description: "該当約款コード"
      appliedProvisionVersion:
        type: "string"
        description: "該当約款バージョン"
      provisionName:
        type: "string"
        description: "約款名称"
      benefitFirstPayConvCls:
        type: "string"
        description: "初回給付金支払倍率型区分"
      benefitFirstPayConvClsNameLabel:
        type: "string"
        description: "初回給付金支払倍率型区分名称"
      benefitFirstPayConvClsUnitLabel:
        type: "string"
        description: "初回給付金支払倍率型区分単位"
      insurancePeriodClass:
        type: "string"
        description: "保険期間種別"
      insurancePeriod:
        type: "string"
        description: "保険期間"
      insurancePeriodNameLabel:
        type: "string"
        description: "保険期間名称"
      insurancePeriodUnitLabel:
        type: "string"
        description: "保険期間単位"
      benefit:
        type: "string"
        description: "給付金額（保険金額）"
      benefitNameLabel:
        type: "string"
        description: "給付金額（保険金額）名称"
      benefitUnitLabel:
        type: "string"
        description: "給付金額（保険金額）単位"
      paymentPeriodClass:
        type: "string"
        description: "払込期間種別"
      paymentPeriod:
        type: "string"
        description: "払込期間"
      paymentPeriodNameLabel:
        type: "string"
        description: "払込期間名称"
      paymentPeriodUnitLabel:
        type: "string"
        description: "払込期間単位"
      paymentMethod:
        type: "string"
        description: "払込方法（回数）"
      paymentChannel:
        type: "string"
        description: "払込経路"
      premium:
        type: "string"
        description: "保険料"
      riskSelectionMethod:
        type: "string"
        description: "危険選択方法"
      livingNeedsRider:
        type: "string"
        description: "リビング・ニーズ特約有無"
      livingNeedsRiderNameLabel:
        type: "string"
        description: "リビング・ニーズ特約名称"
      livingNeedsRiderUnitLabel:
        type: "string"
        description: "リビング・ニーズ特約単位"
      freeOfPRiderFlg:
        type: "string"
        description: "保険料払込免除特約有無"
      freeOfPRiderNameLabel:
        type: "string"
        description: "保険料払込免除特約名称"
      freeOfPRiderUnitLabel:
        type: "string"
        description: "保険料払込免除特約単位"
      hosCovPayLimitClass:
        type: "string"
        description: "入院給付金支払限度日数型区分"
      hosCovPayLimitClassNameLabel:
        type: "string"
        description: "入院給付金支払限度日数型区分名称"
      hosCovPayLimitClassUnitLabel:
        type: "string"
        description: "入院給付金支払限度日数型区分単位"
      benefitPayConvCls:
        type: "string"
        description: "手術給付金支払倍率区分"
      benefitPayConvClsNameLabel:
        type: "string"
        description: "手術給付金支払倍率区分名称"
      benefitPayConvClsUnitLabel:
        type: "string"
        description: "手術給付金支払倍率区分単位"
      disHsptUnlmtDaysSpPrv:
        type: "string"
        description: "特定疾病支払日数無制限特則"
      disHsptUnlmtDaysSpPrvNameLabel:
        type: "string"
        description: "特定疾病支払日数無制限特則名称"
      disHsptUnlmtDaysSpPrvUnitLabel:
        type: "string"
        description: "特定疾病支払日数無制限特則単位"
      receiptDiversionExist:
        type: "string"
        description: "収納方法流用有無"
      receiptDiversionPolicyNo:
        type: "string"
        description: "収納方法流用元証券番号"
      diseaseCoverageType:
        type: "string"
        description: "保障範囲型区分"
      diseaseCoverageTypeNameLabel:
        type: "string"
        description: "保障範囲型区分名称"
      diseaseCoverageTypeUnitLabel:
        type: "string"
        description: "保障範囲型区分単位"
      freeOfPremiumRiderCls:
        type: "string"
        description: "保険料払込免除特約種類"
      freeOfPremiumRiderClsNameLabel:
        type: "string"
        description: "保険料払込免除特約種類名称"
      freeOfPremiumRiderClsUnitLabel:
        type: "string"
        description: "保険料払込免除特約種類単位"
      prepayKind:
        type: "string"
        description: "前納種類"
      firstPrepayFrequency:
        type: "string"
        description: "前納払込回数"
      downPaymentBenefit:
        type: "string"
        description: "一部一時払給付金額（保険金額）"
      currencyKind:
        type: "string"
        description: "通貨種類"
  PlanBasePolicy:
    type: "object"
    description: "プラン主契約"
    properties:
      rider:
        allOf:
          - $ref: "#/definitions/BasePolicy"
      isChosenWell:
        type: "boolean"
        description: "商品レコメンドフラグ"
  Rider:
    type: "object"
    description: "特約(基幹API項目より抽出。UCにより項目を吟味する)"
    properties:
      serialNumber:
        type: "integer"
        description: "シリアル番号"
      selectableFlg:
        type: "boolean"
        description: "選択フラグ"
      standardProvisionCd:
        type: "string"
        description: "標準約款コード"
      appliedProvisionCd:
        type: "string"
        description: "該当約款コード"
      appliedProvisionVersion:
        type: "string"
        description: "該当約款バージョン"
      provisionName:
        type: "string"
        description: "約款名称"
      benefitFirstPayConvCls:
        type: "string"
        description: "初回給付金支払倍率型区分"
      benefitFirstPayConvClsNameLabel:
        type: "string"
        description: "初回給付金支払倍率型区分名称"
      benefitFirstPayConvClsUnitLabel:
        type: "string"
        description: "初回給付金支払倍率型区分単位"
      insurancePeriodClass:
        type: "string"
        description: "保険期間種別"
      insurancePeriod:
        type: "string"
        description: "保険期間"
      insurancePeriodNameLabel:
        type: "string"
        description: "保険期間名称"
      insurancePeriodUnitLabel:
        type: "string"
        description: "保険期間単位"
      benefit:
        type: "string"
        description: "給付金額（保険金額）"
      benefitNameLabel:
        type: "string"
        description: "給付金額（保険金額）名称"
      benefitUnitLabel:
        type: "string"
        description: "給付金額（保険金額）単位"
      paymentPeriodClass:
        type: "string"
        description: "払込期間種別"
      paymentPeriod:
        type: "string"
        description: "払込期間"
      paymentPeriodNameLabel:
        type: "string"
        description: "払込期間名称"
      paymentPeriodUnitLabel:
        type: "string"
        description: "払込期間単位"
      additionType:
        type: "string"
        description: "付加区分"
      additionTypeNameLabel:
        type: "string"
        description: "付加区分名称"
      additionTypeUnitLabel:
        type: "string"
        description: "付加区分単位"
      diseaseCoverageType:
        type: "string"
        description: "保障範囲型区分"
      diseaseCoverageTypeNameLabel:
        type: "string"
        description: "保障範囲型区分名称"
      diseaseCoverageTypeUnitLabel:
        type: "string"
        description: "保障範囲型区分単位"
      freeOfPremiumRiderCls:
        type: "string"
        description: "保険料払込免除特約種類"
      freeOfPremiumRiderClsNameLabel:
        type: "string"
        description: "保険料払込免除特約種類名称"
      freeOfPremiumRiderClsUnitLabel:
        type: "string"
        description: "保険料払込免除特約種類単位"
      premium:
        type: "string"
        description: "保険料"
      hosCovPayLimitClass:
        type: "string"
        description: "入院給付金支払限度日数型区分"
      hosCovPayLimitClassNameLabel:
        type: "string"
        description: "入院給付金支払限度日数型区分名称"
      hosCovPayLimitClassUnitLabel:
        type: "string"
        description: "入院給付金支払限度日数型区分単位"
      disHsptUnlmtDaysSpPrv:
        type: "string"
        description: "特定疾病支払日数無制限特則"
      disHsptUnlmtDaysSpPrvNameLabel:
        type: "string"
        description: "特定疾病支払日数無制限特則名称"
      disHsptUnlmtDaysSpPrvUnitLabel:
        type: "string"
        description: "特定疾病支払日数無制限特則単位"
      downPaymentBenefit:
        type: "string"
        description: "一部一時払給付金額（保険金額）"
      riskSelectionMethod:
        type: "string"
        description: "危険選択方法"
  PlanRider:
    type: "object"
    description: "プラン特約"
    properties:
      rider:
        allOf:
          - $ref: "#/definitions/Rider"
      isChosenWell:
        type: "boolean"
        description: "加入傾向フラグ"
  Account:
    type: "object"
    description: "アカウント"
    properties:
      accountId:
        type: "integer"
        description: "アカウントID"
      wannaDisconnect:
        type: "boolean"
        description: "メール配信切断可否（true:メール配信を切断する, false:接続する）"
      individual:
        $ref: "#/definitions/Individual"
      auth:
        $ref: "#/definitions/Auth"
  Individual:
    type: "object"
    description: "個人"
    required:
      - lastName
      - firstName
      - lastNameKana
      - firstNameKana
      - birthDate
      - sexCode
      - relationshipCode
    properties:
      individualId:
        type: "integer"
        description: "個人ID(新規作成時は不要)"
      lastName:
        type: "string"
        description: "姓"
      firstName:
        type: "string"
        description: "名"
      lastNameKana:
        type: "string"
        description: "セイ"
      firstNameKana:
        type: "string"
        description: "メイ"
      birthDate:
        type: "string"
        description: "生年月日"
      sexCode:
        type: "string"
        description: "性別コード"
      relationshipCode:
        type: "string"
        description: "続柄コード"
      relationshipDetail:
        type: "string"
        description: "続柄詳細"
      zipCode:
        type: "string"
        description: "郵便番号"
      prefectures:
        type: "string"
        description: "都道府県"
      city:
        type: "string"
        description: "市区町村"
      blockStreet:
        type: "string"
        description: "丁目番地"
      buildings:
        type: "string"
        description: "建物名"
      jobCode:
        type: "string"
        description: "職業コード"
      jobSubCode:
        type: "string"
        description: "職種コード"
      jobDetailCode:
        type: "string"
        description: "業務内容コード"
      office:
        type: "string"
        description: "勤務先"
      incomeCode:
        type: "string"
        description: "年収コード"
      mailaddress:
        type: "string"
        description: "メールアドレス"
      telNums:
        type: "array"
        description: "電話番号関連"
        items:
          allOf:
            - $ref: "#/definitions/TelNum"
  Auth:
    type: "object"
    description: "認証(外に出すデータは吟味すること)"
    properties:
      mailaddress:
        type: "string"
        description: "メールアドレス"
      extAuthCode:
        type: "integer"
        description: "外部認証コード"
      extAuthId:
        type: "string"
        description: "外部認証ID"
      lastLoginDatetime:
        type: "string"
        description: "最終ログイン日時"
      mailaddressCandidate:
        type: "string"
        description: "メールアドレス候補"
      password:
        type: "string"
        description: "パスワード（申込追加APIのインプットのみ使用）"
  Payment:
    type: "object"
    description: "支払"
    properties:
      productAdditionalId:
        type: "integer"
        description: "商品付加ID"
      paymentChannelCode:
        type: "integer"
        description: "払込経路コード"
      extPaymentId:
        type: "string"
        description: "外部支払ID(TODO：要調査)"
  Document:
    type: "object"
    description: "ドキュメント"
    properties:
      productAdditionalId:
        type: "integer"
        description: "商品付加ID"
      documentCode:
        type: "integer"
        description: "ドキュメントコード"
      fileData:
        type: "string"
        description: "ファイルデータ(base64で暗号化された文字列)"
      createDatetime:
        type: "string"
        description: "生成日時"
  ProductPlan:
    type: "object"
    description: "商品単位のプラン情報"
    properties:
      salesProductCd:
        type: "string"
        description: "販売商品コード"
      isRecommended:
        type: "boolean"
        description: "商品レコメンドフラグ"
      plans:
        type: "array"
        description: "プラン内容のリスト（最大５件まで）"
        items:
          type: "object"
          description: "プラン内容"
          properties:
            planNo:
              type: "string"
              description: "プラン番号"
            planName:
              type: "string"
              description: "プラン名"
            planDetail:
              type: "string"
              description: "プラン詳細"
            isRecommended:
              type: "boolean"
              description: "プランレコメンドフラグ"
            basePolicy:
              allOf:
                - $ref: "#/definitions/BasePolicy"
              description: "主契約"
            riders:
              type: "array"
              items:
                allOf:
                  - $ref: "#/definitions/PlanRider"
                description: "プラン特約"
  PlanCache:
    type: "object"
    description: "契約年齢、性別から抽出した全商品のプラン情報（Redisから取得するプランデータもこの形）"
    properties:
      productPlans:
        type: "array"
        description: "商品単位のプラン情報リスト"
        items:
          allOf:
            - $ref: "#/definitions/ProductPlan"
  PlanFile:
    type: "object"
    description: "プランファイル"
    properties:
      planId:
        type: "integer"
        description: "プランファイルID"
      fileName:
        type: "string"
        description: "ファイル名"
      fileData:
        type: "string"
        description: "ファイルデータ"
      startDateTime:
        type: "string"
        description: "適用開始日時"
      endDateTime:
        type: "string"
        description: "適用終了日時"
      note:
        type: "string"
        description: "注釈"
      isApplying:
        type: "boolean"
        description: "適用中プランフラグ（true: 適用中プラン, false: それ以外のプラン）"
  Operator:
    type: "object"
    description: "運用者"
    properties:
      operatorId:
        type: "integer"
        description: "運用者ID"
      lastName:
        type: "string"
        description: "姓"
      firstName:
        type: "string"
        description: "名"
      mailaddress:
        type: "string"
        description: "メールアドレス"
      activatedDatetime:
        type: "string"
        description: "本登録日時"
      roleCode:
        type: "integer"
        description: "権限コード"
      loginTrialTimes:
        type: "string"
        description: "ログイン試行回数"
      lastLoginDatetime:
        type: "string"
        description: "最終ログイン日時"
  CodeMaster:
    type: "object"
    description: "コードマスター"
    required:
      - code
      - name
    properties:
      code:
        type: "string"
        description: "コード"
      name:
        type: "string"
        description: "コード名"
      children:
        type: "array"
        description: "子コード"
        items:
          $ref: "#/definitions/CodeMaster"
  Contact:
    type: "object"
    description: "連絡"
    properties:
      contactId:
        type: "integer"
        description: "連絡ID"
      contactCode:
        type: "integer"
        description: "連絡対象コード"
      mailSubject:
        type: "string"
        description: "メールタイトル"
      mailContent:
        type: "string"
        description: "メール本文"
      messageBoxSubject:
        type: "string"
        description: "メッセージBoxタイトル"
      messageBoxContent:
        type: "string"
        description: "メッセージBox本文"
      response:
        type: "string"
        description: "回答"
      respondedDatetime:
        type: "string"
        description: "回答日時"
      createdDatetime:
        type: "string"
        description: "作成日時"
      displayedDatetime:
        type: "string"
        description: "掲載日時"
      wantDisplay:
        type: "boolean"
        description: "掲載フラグ"
      mailSendStartHour:
        type: "string"
        description: "メール送信可能開始時間"
      mailSendEndHour:
        type: "string"
        description: "メール送信可能終了時間"
      mailSendDatetime:
        type: "string"
        description: "メール送信日時"
      mailaddress:
        type: "string"
        description: "メールアドレス"
      sendStatusCode:
        type: "integer"
        description: "送信ステータスコード"
      sendServiceCode:
        type: "integer"
        description: "送信業務コード"
      sesMessageId:
        type: "string"
        description: "SES メッセージID"
      topicId:
        type: "integer"
        description: "トピックID"
#  トピックDTOについて、作成したものの不使用のためコメントアウト。
#  Topic:
#    type: "object"
#    description: "トピック"
#    properties:
#      productAdditionalId:
#        type: "integer"
#        description: "商品付加ID"
#      productAdditionalVersion:
#        type: "integer"
#        description: "商品付加バージョン"
#      applyId:
#        type: "integer"
#        description: "申込ID"
#      accountId:
#        type: "integer"
#        description: "アカウントID"
  TopicCategory:
    type: "object"
    description: "トピックカテゴリー"
    properties:
      topicCategoryCode:
        type: "integer"
        description: "トピックカテゴリーコード"
      topicStatusCode:
        type: "integer"
        description: "トピックステータスコード"
  Announce:
    type: "object"
    description: "アナウンス"
    properties:
      announceId:
        type: "integer"
        description: "アナウンスID"
      subject:
        type: "string"
        description: "タイトル"
      content:
        type: "string"
        description: "内容"
      linkUrl:
        type: "string"
        description: "リンク先URL"
      startDatetime:
        type: "string"
        description: "表示開始日時"
      endDatetime:
        type: "string"
        description: "表示終了日時"
  AuraSession:
    type: "object"
    description: "AURAとのリクエストに使用されるセッション項目"
    properties:
      applyId:
        type: "integer"
        description: "申込ID"
      etag:
        type: "string"
        description: "AURAセッション時に指定するEtag"
  AuraStatus:
    type: "object"
    description: |-
      AURA告知に対するステータス
      eアンダーライティングインテグレーションガイドv6参照
    properties:
      completed:
        type: "boolean"
        description: "告知回答が完了しているか"
      submitted:
        type: "boolean"
        description: "AURAに告知が提出済みか"
  AuraQuestion:
    type: "object"
    description: |-
      AURA告知
      eアンダーライティングインテグレーションガイドv6参照
  AuraAnswer:
    type: "object"
    description: |-
      AURA告知に対する回答(questionType, unknownAnswer以外にもあり)
      eアンダーライティングインテグレーションガイドv6参照
    properties:
      questionId:
        type: "string"
      questionType:
        type: "string"
      unknownAnswer:
        type: "boolean"
      otherParam:
        type: "object"
        description: "質問形態により異なるデータ"
      searchString:
        type: "string"
        description: "検索の質問を渡す際に必要となるパラメータ"
  BatchResult:
    type: "object"
    description: "バッチ実行結果を返却する。"
    properties:
      resultCode:
        type: "integer"
        description: "info/errorのコードを指定"
      detail:
        type: "object"
        description: "エラー時の詳細()"
        properties:
          targetId:
            type: "string"
            description: "原因特定のために使用するID"
  TelNum:
    type: "object"
    description: "電話番号"
    properties:
      telNum:
        type: "string"
        description: "電話番号"
      telNumType:
        type: "integer"
        description: "電話番号タイプ"
  Assessment:
    type: "object"
    description: "査定"
    properties:
      assessmentId:
        type: "integer"
        description: "査定ID"
      productAdditionalId:
        type: "integer"
        description: "商品付加ID"
      productAdditionalVersion:
        type: "integer"
        description: "商品付加バージョン"
      policyNo:
        type: "string"
        description: "証券番号"
      auraProductCd:
        type: "string"
        description: "AURA用プロダクトコード"
      standardProvisionCd:
        type: "string"
        description: "標準約款コード"
      appliedProvisionCd:
        type: "string"
        description: "該当約款コード"
      appliedProvisionVersion:
        type: "string"
        description: "該当約款バージョン"
      decisionCd:
        type: "string"
        description: "査定結果コード"
      freeOfPRiderFlg:
        type: "string"
        description: "保険料払込免除特約有無"
      freeOfPremiumRiderCls:
        type: "string"
        description: "保険料払込免除特約種類"
      diseaseCoverageType:
        type: "string"
        description: "保障範囲型区分"
      amountRestriction:
        type: "string"
        description: "金額制限"
      amountRestriction10k:
        type: "string"
        description: "金額制限（万円）"
      exclusions:
        type: "array"
        description: "不担保"
        items:
          allOf:
            - $ref: "#/definitions/Exclusion"
  Exclusion:
    type: "object"
    description: "不担保"
    properties:
      serialNumber:
        type: "integer"
        description: "シリアル番号"
      exclusionClassCd:
        type: "string"
        description: "不担保種別コード"
      exclusionPartCd:
        type: "string"
        description: "不担保部位・傷病コード"
      exclusionPeriodCd:
        type: "string"
        description: "不担保期間コード"
      exclusionSpareCd:
        type: "string"
        description: "不担保予備コード"
      exclusionClassName:
        type: "string"
        description: "特別条件内容"
      exclusionPeriodName:
        type: "string"
        description: "不担保期間"
      exclusionPartName:
        type: "string"
        description: "不担保部位名称"
  ProductGroup:
    type: "object"
    description: "商品グループ"
    properties:
      productAdditional:
        allOf:
          - $ref: "#/definitions/ProductAdditional"
        description: "商品付加"
      basePolicy:
        allOf:
          - $ref: "#/definitions/BasePolicy"
        description: "主契約"
      riders:
        type: "array"
        items:
          allOf:
            - $ref: "#/definitions/Rider"
        description: "特約"
      acceptances:
        type: "array"
        items:
          allOf:
            - $ref: "#/definitions/Acceptance"
        description: "承諾"
      self:
        allOf:
          - $ref: "#/definitions/Individual"
        description: "契約者"
      reciever:
        allOf:
          - $ref: "#/definitions/Individual"
        description: "受取人"
      payment:
        allOf:
          - $ref: "#/definitions/Payment"
        description: "支払"
      docs:
        type: "array"
        description: "ドキュメント"
        items:
          allOf:
            - $ref: "#/definitions/Document"
      assessments:
        type: "array"
        description: "査定"
        items:
          allOf:
            - $ref: "#/definitions/Assessment"
  Acceptance:
    type: "object"
    description: "承諾"
    required:
      - acceptanceTargetCode
      - acceptanceDatetime
    properties:
      acceptanceTargetCode:
        type: "integer"
        description: "承諾対象コード"
      acceptanceDatetime:
        type: "string"
        description: "承諾日時(日時を指定しない場合、バックエンドで時間を設定する)"
</textarea></td>
</tr>
</tbody></table>

<p><input type="submit" value="比較する"></p>
</form>
</div>

<div id="result">
<table cellspacing="0">
<tbody><tr>
	<td>swagger: "2.0"
</td>
	<td>swagger: "2.0"
</td>
</tr>
<tr>
	<td>info:
</td>
	<td>info:
</td>
</tr>
<tr>
	<td>  description: |-
</td>
	<td>  description: |-
</td>
</tr>
<tr>
	<td>    WEBダイレクトプロジェクトにおけるバックエンドモジュールAPIを記載する。&lt;br&gt;
</td>
	<td>    WEBダイレクトプロジェクトにおけるバックエンドモジュールAPIを記載する。&lt;br&gt;
</td>
</tr>
<tr>
	<td>    ルートパス設計はSS以降実施する。
</td>
	<td>    ルートパス設計はSS以降実施する。
</td>
</tr>
<tr>
	<td>  version: "1.0.0"
</td>
	<td>  version: "1.0.0"
</td>
</tr>
<tr>
	<td>  title: "バックエンドモジュールAPI"
</td>
	<td>  title: "バックエンドモジュールAPI"
</td>
</tr>
<tr>
	<td>host: "localhost:8080"
</td>
	<td>host: "localhost:8080"
</td>
</tr>
<tr>
	<td>basePath: "/webdirect"
</td>
	<td>basePath: "/webdirect"
</td>
</tr>
<tr>
	<td># tags.nameにはマルチバイトは使わない
</td>
	<td># tags.nameにはマルチバイトは使わない
</td>
</tr>
<tr>
	<td># description中の改行は&lt;br&gt;で行う
</td>
	<td># description中の改行は&lt;br&gt;で行う
</td>
</tr>
<tr>
	<td>tags:
</td>
	<td>tags:
</td>
</tr>
<tr>
	<td>  - name: "Insurance products"
</td>
	<td>  - name: "Insurance products"
</td>
</tr>
<tr>
	<td>    description: "保険商品関連IFを定義する"
</td>
	<td>    description: "保険商品関連IFを定義する"
</td>
</tr>
<tr>
	<td>  - name: "Disclosure"
</td>
	<td>  - name: "Disclosure"
</td>
</tr>
<tr>
	<td>    description: "告知関連IFを定義する"
</td>
	<td>    description: "告知関連IFを定義する"
</td>
</tr>
<tr>
	<td>  - name: "Apply"
</td>
	<td>  - name: "Apply"
</td>
</tr>
<tr>
	<td>    description: "申込関連IFを定義する"
</td>
	<td>    description: "申込関連IFを定義する"
</td>
</tr>
<tr>
	<td>  - name: "Account"
</td>
	<td>  - name: "Account"
</td>
</tr>
<tr>
	<td>    description: "アカウント関連IFを定義する"
</td>
	<td>    description: "アカウント関連IFを定義する"
</td>
</tr>
<tr>
	<td>  - name: "Batch"
</td>
	<td>  - name: "Batch"
</td>
</tr>
<tr>
	<td>    description: "スケジューラー起動を想定したIFを定義する"
</td>
	<td>    description: "スケジューラー起動を想定したIFを定義する"
</td>
</tr>
<tr>
	<td>  - name: "Back office"
</td>
	<td>  - name: "Back office"
</td>
</tr>
<tr>
	<td>    description: "管理画面やCRMからコールされるIFを定義する"
</td>
	<td>    description: "管理画面やCRMからコールされるIFを定義する"
</td>
</tr>
<tr>
	<td>  - name: "Common"
</td>
	<td>  - name: "Common"
</td>
</tr>
<tr>
	<td>    description: "業務に依存しない汎用IFを定義する"
</td>
	<td>    description: "業務に依存しない汎用IFを定義する"
</td>
</tr>
<tr>
	<td>schemes:
</td>
	<td>schemes:
</td>
</tr>
<tr>
	<td>  - "http"
</td>
	<td>  - "http"
</td>
</tr>
<tr>
	<td>  - "https"
</td>
	<td>  - "https"
</td>
</tr>
<tr>
	<td>paths:
</td>
	<td>paths:
</td>
</tr>
<tr>
	<td>  /product/design:
</td>
	<td>  /product/design:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Insurance products"
</td>
	<td>        - "Insurance products"
</td>
</tr>
<tr>
	<td>      summary: "保険商品設計API"
</td>
	<td>      summary: "保険商品設計API"
</td>
</tr>
<tr>
	<td>      description: "生年月日・性別を元に、契約年齢を算出し保険商品ラインナップ取得する。"
</td>
	<td>      description: "生年月日・性別を元に、契約年齢を算出し保険商品ラインナップ取得する。"
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              birthDate:
</td>
	<td>              birthDate:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "生年月日"
</td>
	<td>                description: "生年月日"
</td>
</tr>
<tr>
	<td>              sex:
</td>
	<td>              sex:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "性別"
</td>
	<td>                description: "性別"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      <em>        baseDate:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>                type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>                description: "計算基準日"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</em>responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            type: object
</td>
	<td>            type: object
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              contractAge:
</td>
	<td>              contractAge:
</td>
</tr>
<tr>
	<td>                type: "integer"
</td>
	<td>                type: "integer"
</td>
</tr>
<tr>
	<td>              products:
</td>
	<td>              products:
</td>
</tr>
<tr>
	<td>                type: "array"
</td>
	<td>                type: "array"
</td>
</tr>
<tr>
	<td>                items:
</td>
	<td>                items:
</td>
</tr>
<tr>
	<td>                  $ref: "#/definitions/ProductLineup"
</td>
	<td>                  $ref: "#/definitions/ProductLineup"
</td>
</tr>
<tr>
	<td>              planCache:
</td>
	<td>              planCache:
</td>
</tr>
<tr>
	<td>                type: "object"
</td>
	<td>                type: "object"
</td>
</tr>
<tr>
	<td>                allOf:
</td>
	<td>                allOf:
</td>
</tr>
<tr>
	<td>                  - $ref: "#/definitions/PlanCache"
</td>
	<td>                  - $ref: "#/definitions/PlanCache"
</td>
</tr>
<tr>
	<td>                description: "プランキャッシュ(契約年齢・性別で抽出したデータ)"
</td>
	<td>                description: "プランキャッシュ(契約年齢・性別で抽出したデータ)"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  # TODO リファクタリング
</td>
	<td>  # TODO リファクタリング
</td>
</tr>
<tr>
	<td>  /product/feeRange/find:
</td>
	<td>  /product/feeRange/find:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Insurance products"
</td>
	<td>        - "Insurance products"
</td>
</tr>
<tr>
	<td>      summary: "保険料レンジ取得API"
</td>
	<td>      summary: "保険料レンジ取得API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        固定要素・生年月日・性別別の保険料レンジを取得する(主契約・特約のパラメーター未精査)。
</td>
	<td>        固定要素・生年月日・性別別の保険料レンジを取得する(主契約・特約のパラメーター未精査)。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              birthDate:
</td>
	<td>              birthDate:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "生年月日"
</td>
	<td>                description: "生年月日"
</td>
</tr>
<tr>
	<td>              sex:
</td>
	<td>              sex:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "性別"
</td>
	<td>                description: "性別"
</td>
</tr>
<tr>
	<td>              productDesigns:
</td>
	<td>              productDesigns:
</td>
</tr>
<tr>
	<td>                type: "array"
</td>
	<td>                type: "array"
</td>
</tr>
<tr>
	<td>                description: "商品設計（制限職種該当有無（restrictionJobExist）は指定不要）"
</td>
	<td>                description: "商品設計（制限職種該当有無（restrictionJobExist）は指定不要）"
</td>
</tr>
<tr>
	<td>                items:
</td>
	<td>                items:
</td>
</tr>
<tr>
	<td>                  allOf:
</td>
	<td>                  allOf:
</td>
</tr>
<tr>
	<td>                    - $ref: "#/definitions/ProductDesign"
</td>
	<td>                    - $ref: "#/definitions/ProductDesign"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            type: "array"
</td>
	<td>            type: "array"
</td>
</tr>
<tr>
	<td>            items:
</td>
	<td>            items:
</td>
</tr>
<tr>
	<td>              type: "object"
</td>
	<td>              type: "object"
</td>
</tr>
<tr>
	<td>              properties:
</td>
	<td>              properties:
</td>
</tr>
<tr>
	<td>                appliedProvisionCd:
</td>
	<td>                <em>productCode:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>                  type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>                  description: "販売商品コード"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</em>appliedProvisionCd:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "該当約款コード"
</td>
	<td>                  description: "該当約款コード"
</td>
</tr>
<tr>
	<td>                benefit:
</td>
	<td>                benefit:
</td>
</tr>
<tr>
	<td>                  type: "array"
</td>
	<td>                  type: "array"
</td>
</tr>
<tr>
	<td>                  description: "給付金額(保険金額)"
</td>
	<td>                  description: "給付金額(保険金額)"
</td>
</tr>
<tr>
	<td>                  items:
</td>
	<td>                  items:
</td>
</tr>
<tr>
	<td>                    type: "string"
</td>
	<td>                    type: "string"
</td>
</tr>
<tr>
	<td>                premium:
</td>
	<td>                premium:
</td>
</tr>
<tr>
	<td>                  type: "array"
</td>
	<td>                  type: "array"
</td>
</tr>
<tr>
	<td>                  description: "保険料"
</td>
	<td>                  description: "保険料"
</td>
</tr>
<tr>
	<td>                  items:
</td>
	<td>                  items:
</td>
</tr>
<tr>
	<td>                    type: "string"
</td>
	<td>                    type: "string"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  # TODO リファクタリング
</td>
	<td>  # TODO リファクタリング
</td>
</tr>
<tr>
	<td>  /product/fee/get:
</td>
	<td>  /product/fee/get:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Insurance products"
</td>
	<td>        - "Insurance products"
</td>
</tr>
<tr>
	<td>      summary: "保険料計算API"
</td>
	<td>      summary: "保険料計算API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        固定要素・生年月日・性別別の保険料を取得する(主契約・特約のパラメーター未精査)。
</td>
	<td>        固定要素・生年月日・性別別の保険料を取得する(主契約・特約のパラメーター未精査)。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              birthDate:
</td>
	<td>              birthDate:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "生年月日"
</td>
	<td>                description: "生年月日"
</td>
</tr>
<tr>
	<td>              sex:
</td>
	<td>              sex:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "性別"
</td>
	<td>                description: "性別"
</td>
</tr>
<tr>
	<td>              needCheck:
</td>
	<td>              needCheck:
</td>
</tr>
<tr>
	<td>                type: "boolean"
</td>
	<td>                type: "boolean"
</td>
</tr>
<tr>
	<td>                description: "基幹APIを経由でチェックが必要か"
</td>
	<td>                description: "基幹APIを経由でチェックが必要か"
</td>
</tr>
<tr>
	<td>              productDesigns:
</td>
	<td>              productDesigns:
</td>
</tr>
<tr>
	<td>                type: "array"
</td>
	<td>                type: "array"
</td>
</tr>
<tr>
	<td>                description: "商品設計"
</td>
	<td>                description: "商品設計"
</td>
</tr>
<tr>
	<td>                items:
</td>
	<td>                items:
</td>
</tr>
<tr>
	<td>                  allOf:
</td>
	<td>                  allOf:
</td>
</tr>
<tr>
	<td>                    - $ref: "#/definitions/ProductDesign"
</td>
	<td>                    - $ref: "#/definitions/ProductDesign"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            type: "array"
</td>
	<td>            type: "array"
</td>
</tr>
<tr>
	<td>            items:
</td>
	<td>            items:
</td>
</tr>
<tr>
	<td>              type: "object"
</td>
	<td>              type: "object"
</td>
</tr>
<tr>
	<td>              properties:
</td>
	<td>              properties:
</td>
</tr>
<tr>
	<td>                appliedProvisionCd:
</td>
	<td>                <em>productCode:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>                  type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>                  description: "販売商品コード"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</em>appliedProvisionCd:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "該当約款コード"
</td>
	<td>                  description: "該当約款コード"
</td>
</tr>
<tr>
	<td>                premium:
</td>
	<td>                premium:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "保険料"
</td>
	<td>                  description: "保険料"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /product/validate:
</td>
	<td>  /product/validate:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Insurance products"
</td>
	<td>        - "Insurance products"
</td>
</tr>
<tr>
	<td>      summary: "保険商品チェックAPI"
</td>
	<td>      summary: "保険商品チェックAPI"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        販売条件チェックAPI経由のチェックと複数同時通算チェックを行い、保険商品の妥当性チェックを行う。
</td>
	<td>        販売条件チェックAPI経由のチェックと複数同時通算チェックを行い、保険商品の妥当性チェックを行う。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              birthDate:
</td>
	<td>              birthDate:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "生年月日"
</td>
	<td>                description: "生年月日"
</td>
</tr>
<tr>
	<td>              sex:
</td>
	<td>              sex:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "性別"
</td>
	<td>                description: "性別"
</td>
</tr>
<tr>
	<td>              productDesigns:
</td>
	<td>              productDesigns:
</td>
</tr>
<tr>
	<td>                type: "array"
</td>
	<td>                type: "array"
</td>
</tr>
<tr>
	<td>                description: "チェック対象の商品"
</td>
	<td>                description: "チェック対象の商品"
</td>
</tr>
<tr>
	<td>                items:
</td>
	<td>                items:
</td>
</tr>
<tr>
	<td>                  allOf:
</td>
	<td>                  allOf:
</td>
</tr>
<tr>
	<td>                    - $ref: "#/definitions/ProductDesign"
</td>
	<td>                    - $ref: "#/definitions/ProductDesign"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /account/auth:
</td>
	<td>  /account/auth:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Account"
</td>
	<td>        - "Account"
</td>
</tr>
<tr>
	<td>      summary: "アカウント認証API"
</td>
	<td>      summary: "アカウント認証API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        メールアドレスが確認済みのアカウントに対する、アカウント/パスワードか外部認証IDでマッチしたユーザー情報を返却する。&lt;br&gt;初回アクセス時にアカウントを本登録に変更する。&lt;br&gt;指定回数以上認証失敗した場合、アカウントをロックする。
</td>
	<td>        メールアドレスが確認済みのアカウントに対する、アカウント/パスワードか外部認証IDでマッチしたユーザー情報を返却する。&lt;br&gt;初回アクセス時にアカウントを本登録に変更する。&lt;br&gt;指定回数以上認証失敗した場合、アカウントをロックする。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              mailaddress:
</td>
	<td>              mailaddress:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "メールアドレス(アカウント/パスワードで認証時必須)"
</td>
	<td>                description: "メールアドレス(アカウント/パスワードで認証時必須)"
</td>
</tr>
<tr>
	<td>              password:
</td>
	<td>              password:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "パスワード(アカウント/パスワードで認証時必須)"
</td>
	<td>                description: "パスワード(アカウント/パスワードで認証時必須)"
</td>
</tr>
<tr>
	<td>              extAuthCode:
</td>
	<td>              extAuthCode:
</td>
</tr>
<tr>
	<td>                type: "integer"
</td>
	<td>                type: "integer"
</td>
</tr>
<tr>
	<td>                description: "外部認証コード(外部認証時必須)"
</td>
	<td>                description: "外部認証コード(外部認証時必須)"
</td>
</tr>
<tr>
	<td>              extAuthId:
</td>
	<td>              extAuthId:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "外部認証ID(外部認証時必須)"
</td>
	<td>                description: "外部認証ID(外部認証時必須)"
</td>
</tr>
<tr>
	<td>              isFirstLogin:
</td>
	<td>              isFirstLogin:
</td>
</tr>
<tr>
	<td>                type: "boolean"
</td>
	<td>                type: "boolean"
</td>
</tr>
<tr>
	<td>                description: "初回ログインか"
</td>
	<td>                description: "初回ログインか"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            $ref: "#/definitions/Account"
</td>
	<td>            $ref: "#/definitions/Account"
</td>
</tr>
<tr>
	<td>        "401":
</td>
	<td>        "401":
</td>
</tr>
<tr>
	<td>          description: "authentication error"
</td>
	<td>          description: "authentication error"
</td>
</tr>
<tr>
	<td>  /<em>account</em>/<em>publishTemporary</em>:
</td>
	<td>  /<em>apply</em>/<em>add</em>:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "A<em>ccount</em>"
</td>
	<td>        - "A<em>pply</em>"
</td>
</tr>
<tr>
	<td>      summary: "<em>仮アカウント発行</em>API"
</td>
	<td>      summary: "<em>申込追加</em>API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        <em>試算結果とメール</em>ア<em>ドレス</em>を元に仮アカウントを発行する。&lt;br&gt;仮アカウントの通知はメールにて行う。
</td>
	<td>        ア<em>カウント未発行時：認証・個人データ</em>を元に仮アカウントを発行<em>し、商品設計から申込を作成する。&lt;br&gt;アカウント発行済(個人IDが設定されている時)：個人データを元にアカウント情報を更新して、商品設計から申込を作成</em>する。&lt;br&gt;<em>※</em>仮アカウントの通知はメールにて行う。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            required:
</td>
	<td>            required:
</td>
</tr>
<tr>
	<td>              - individual
</td>
	<td>              - individual
</td>
</tr>
<tr>
	<td>              - <em>auth
</em></td>
	<td>              - acceptances
</td>
</tr>
<tr>
	<td><em>              -&nbsp;</em>acceptances
</td>
	<td></td>
</tr>
<tr>
	<td>              - productDesignsV1
</td>
	<td>              - productDesignsV1
</td>
</tr>
<tr>
	<td>              - productDesignsV2
</td>
	<td>              - productDesignsV2
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              individual:
</td>
	<td>              individual:
</td>
</tr>
<tr>
	<td>                allOf:
</td>
	<td>                allOf:
</td>
</tr>
<tr>
	<td>                  - $ref: "#/definitions/Individual"
</td>
	<td>                  - $ref: "#/definitions/Individual"
</td>
</tr>
<tr>
	<td>                description: "個人"
</td>
	<td>                description: "個人"
</td>
</tr>
<tr>
	<td>              auth:
</td>
	<td>              auth:
</td>
</tr>
<tr>
	<td>                allOf:
</td>
	<td>                allOf:
</td>
</tr>
<tr>
	<td>                  - $ref: "#/definitions/Auth"
</td>
	<td>                  - $ref: "#/definitions/Auth"
</td>
</tr>
<tr>
	<td>                description: "認証"
</td>
	<td>                description: "認証<em>(アカウント発行済の場合には不要)</em>"
</td>
</tr>
<tr>
	<td>              acceptances:
</td>
	<td>              acceptances:
</td>
</tr>
<tr>
	<td>                type: "array"
</td>
	<td>                type: "array"
</td>
</tr>
<tr>
	<td>                description: "承諾"
</td>
	<td>                description: "承諾"
</td>
</tr>
<tr>
	<td>                items:
</td>
	<td>                items:
</td>
</tr>
<tr>
	<td>                  allOf:
</td>
	<td>                  allOf:
</td>
</tr>
<tr>
	<td>                    - $ref: "#/definitions/Acceptance"
</td>
	<td>                    - $ref: "#/definitions/Acceptance"
</td>
</tr>
<tr>
	<td>              productDesignsV1:
</td>
	<td>              productDesignsV1:
</td>
</tr>
<tr>
	<td>                type: "array"
</td>
	<td>                type: "array"
</td>
</tr>
<tr>
	<td>                items:
</td>
	<td>                items:
</td>
</tr>
<tr>
	<td>                  $ref: "#/definitions/ProductDesign"
</td>
	<td>                  $ref: "#/definitions/ProductDesign"
</td>
</tr>
<tr>
	<td>                description: "商品設計(当初意向)"
</td>
	<td>                description: "商品設計(当初意向)"
</td>
</tr>
<tr>
	<td>              productDesignsV2:
</td>
	<td>              productDesignsV2:
</td>
</tr>
<tr>
	<td>                type: "array"
</td>
	<td>                type: "array"
</td>
</tr>
<tr>
	<td>                items:
</td>
	<td>                items:
</td>
</tr>
<tr>
	<td>                  $ref: "#/definitions/ProductDesign"
</td>
	<td>                  $ref: "#/definitions/ProductDesign"
</td>
</tr>
<tr>
	<td>                description: "商品設計(最終意向)"
</td>
	<td>                description: "商品設計(最終意向)"
</td>
</tr>
<tr>
	<td>              agencyCode:
</td>
	<td>              agencyCode:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "代理店コード"
</td>
	<td>                description: "代理店コード"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /account/resetPassword:
</td>
	<td>  /account/resetPassword:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Account"
</td>
	<td>        - "Account"
</td>
</tr>
<tr>
	<td>      summary: "パスワード再設定API"
</td>
	<td>      summary: "パスワード再設定API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        メールアドレスを持つアカウントに対してハッシュ生成を行い、ハッシュ付きURLをメールで送付する。&lt;br&gt;ハッシュの有効期限は現在日時より2時間。
</td>
	<td>        メールアドレスを持つアカウントに対してハッシュ生成を行い、ハッシュ付きURLをメールで送付する。&lt;br&gt;ハッシュの有効期限は現在日時より2時間。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            required:
</td>
	<td>            required:
</td>
</tr>
<tr>
	<td>              - mailaddress
</td>
	<td>              - mailaddress
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              mailaddress:
</td>
	<td>              mailaddress:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "メールアドレス"
</td>
	<td>                description: "メールアドレス"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /account/resetMailaddress:
</td>
	<td>  /account/resetMailaddress:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Account"
</td>
	<td>        - "Account"
</td>
</tr>
<tr>
	<td>      summary: "メールアドレス再設定API"
</td>
	<td>      summary: "メールアドレス再設定API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        アカウントに対してハッシュ生成を行い、ハッシュ付きURLをメールで送付する。&lt;br&gt;ハッシュの有効期限は現在日時より2時間。
</td>
	<td>        アカウントに対してハッシュ生成を行い、ハッシュ付きURLをメールで送付する。&lt;br&gt;ハッシュの有効期限は現在日時より2時間。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            required:
</td>
	<td>            required:
</td>
</tr>
<tr>
	<td>              - accountId
</td>
	<td>              - accountId
</td>
</tr>
<tr>
	<td>              - mailaddress
</td>
	<td>              - mailaddress
</td>
</tr>
<tr>
	<td>              - confirmMailaddress
</td>
	<td>              - confirmMailaddress
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              accountId:
</td>
	<td>              accountId:
</td>
</tr>
<tr>
	<td>                type: "<em>string</em>"
</td>
	<td>                type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>                description: "アカウントID"
</td>
	<td>                description: "アカウントID"
</td>
</tr>
<tr>
	<td>              mailaddress:
</td>
	<td>              mailaddress:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "メールアドレス"
</td>
	<td>                description: "メールアドレス"
</td>
</tr>
<tr>
	<td>              confirmMailaddress:
</td>
	<td>              confirmMailaddress:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "確認用メールアドレス"
</td>
	<td>                description: "確認用メールアドレス"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /account/auth/{hashCode}:
</td>
	<td>  /account/auth/{hashCode}:
</td>
</tr>
<tr>
	<td>    get:
</td>
	<td>    get:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Account"
</td>
	<td>        - "Account"
</td>
</tr>
<tr>
	<td>      summary: "認証ハッシュチェックAPI"
</td>
	<td>      summary: "認証ハッシュチェックAPI"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        ハッシュ値が妥当か確認する。&lt;br&gt;ハッシュ値生成方法はSS以降決定。
</td>
	<td>        ハッシュ値が妥当か確認する。&lt;br&gt;ハッシュ値生成方法はSS以降決定。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "hashCode"
</td>
	<td>        - name: "hashCode"
</td>
</tr>
<tr>
	<td>          in: "path"
</td>
	<td>          in: "path"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          type: "string"
</td>
	<td>          type: "string"
</td>
</tr>
<tr>
	<td>          description: "ハッシュ値"
</td>
	<td>          description: "ハッシュ値"
</td>
</tr>
<tr>
	<td>        - name: "hashUsageCode"
</td>
	<td>        - name: "hashUsageCode"
</td>
</tr>
<tr>
	<td>          in: "query"
</td>
	<td>          in: "query"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          type: "string"
</td>
	<td>          type: "string"
</td>
</tr>
<tr>
	<td>          description: "ハッシュ用途コード"
</td>
	<td>          description: "ハッシュ用途コード"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            $ref: "#/definitions/Account"
</td>
	<td>            $ref: "#/definitions/Account"
</td>
</tr>
<tr>
	<td>        "401":
</td>
	<td>        "401":
</td>
</tr>
<tr>
	<td>          description: "authentication error"
</td>
	<td>          description: "authentication error"
</td>
</tr>
<tr>
	<td>  /account/updatePassword:
</td>
	<td>  /account/updatePassword:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Account"
</td>
	<td>        - "Account"
</td>
</tr>
<tr>
	<td>      summary: "パスワード変更API"
</td>
	<td>      summary: "パスワード変更API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        パスワードを変更する。
</td>
	<td>        パスワードを変更する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            required:
</td>
	<td>            required:
</td>
</tr>
<tr>
	<td>              - accountId
</td>
	<td>              - accountId
</td>
</tr>
<tr>
	<td>              - password
</td>
	<td>              - password
</td>
</tr>
<tr>
	<td>              - confirmPassword
</td>
	<td>              - confirmPassword
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              accountId:
</td>
	<td>              accountId:
</td>
</tr>
<tr>
	<td>                type: "<em>string</em>"
</td>
	<td>                type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>                description: "アカウントID"
</td>
	<td>                description: "アカウントID"
</td>
</tr>
<tr>
	<td>              password:
</td>
	<td>              password:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "パスワード"
</td>
	<td>                description: "パスワード"
</td>
</tr>
<tr>
	<td>              confirmPassword:
</td>
	<td>              confirmPassword:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "確認用パスワード"
</td>
	<td>                description: "確認用パスワード"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /account/updateMailaddress:
</td>
	<td>  /account/updateMailaddress:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Account"
</td>
	<td>        - "Account"
</td>
</tr>
<tr>
	<td>      summary: "メールアドレス変更API"
</td>
	<td>      summary: "メールアドレス変更API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        ログインIDとしてのメールアドレスを事前に入力したメールアドレス候補で上書きする。
</td>
	<td>        ログインIDとしてのメールアドレスを事前に入力したメールアドレス候補で上書きする。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              mailaddress:
</td>
	<td>              mailaddress:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "メールアドレス(アカウント/パスワードで認証時必須)"
</td>
	<td>                description: "メールアドレス(アカウント/パスワードで認証時必須)"
</td>
</tr>
<tr>
	<td>              password:
</td>
	<td>              password:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "パスワード(アカウント/パスワードで認証時必須)"
</td>
	<td>                description: "パスワード(アカウント/パスワードで認証時必須)"
</td>
</tr>
<tr>
	<td>              extAuthCode:
</td>
	<td>              extAuthCode:
</td>
</tr>
<tr>
	<td>                type: "integer"
</td>
	<td>                type: "integer"
</td>
</tr>
<tr>
	<td>                description: "外部認証コード(外部認証時必須)"
</td>
	<td>                description: "外部認証コード(外部認証時必須)"
</td>
</tr>
<tr>
	<td>              extAuthId:
</td>
	<td>              extAuthId:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "外部認証ID(外部認証時必須)"
</td>
	<td>                description: "外部認証ID(外部認証時必須)"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  # TODO 枠だけ作成。仕様は別途定義する
</td>
	<td>  <em>/account/canCreateNew:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>    post:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      tags:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        - "Account"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      summary: "アカウント発行可否チェックAPI"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      description: |-
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        メールアドレスや外部認証IDが未登録かどうかをチェックする
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      consumes:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        - "application/json"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      produces:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        - "application/json"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      parameters:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        - name: "body"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>          in: "body"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>          required: true
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>          schema:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>            properties:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>              mailaddress:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>                type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>                description: "メールアドレス"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>              extAuthCode:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>                type: "integer"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>                description: "外部認証コード(外部認証チェック時、IDとコードはセットで必須)"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>              extAuthId:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>                type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>                description: "外部認証ID(外部認証チェック時、IDとコードはセットで必須)"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      responses:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        "200":
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>          description: "successful operation"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        "400":
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>          description: "Invalid input"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>&nbsp;&nbsp;</em># TODO 枠だけ作成。仕様は別途定義する
</td>
</tr>
<tr>
	<td>  /office/account/update:
</td>
	<td>  /office/account/update:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Back office"
</td>
	<td>        - "Back office"
</td>
</tr>
<tr>
	<td>      summary: "アカウント更新API"
</td>
	<td>      summary: "アカウント更新API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        アカウントIDに対するアカウントデータを更新する。
</td>
	<td>        アカウントIDに対するアカウントデータを更新する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            required:
</td>
	<td>            required:
</td>
</tr>
<tr>
	<td>              - accountId
</td>
	<td>              - accountId
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              accountId:
</td>
	<td>              accountId:
</td>
</tr>
<tr>
	<td>                type: "integer"
</td>
	<td>                type: "integer"
</td>
</tr>
<tr>
	<td>                description: "アカウントID"
</td>
	<td>                description: "アカウントID"
</td>
</tr>
<tr>
	<td>              mailAddress:
</td>
	<td>              mailAddress:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "メールアドレス"
</td>
	<td>                description: "メールアドレス"
</td>
</tr>
<tr>
	<td>              wannaDisconnect:
</td>
	<td>              wannaDisconnect:
</td>
</tr>
<tr>
	<td>                type: "boolean"
</td>
	<td>                type: "boolean"
</td>
</tr>
<tr>
	<td>                description: "メール配信切断可否（true:メール配信を切断する, false:接続する）"
</td>
	<td>                description: "メール配信切断可否（true:メール配信を切断する, false:接続する）"
</td>
</tr>
<tr>
	<td>              telNums:
</td>
	<td>              telNums:
</td>
</tr>
<tr>
	<td>                type: "array"
</td>
	<td>                type: "array"
</td>
</tr>
<tr>
	<td>                items:
</td>
	<td>                items:
</td>
</tr>
<tr>
	<td>                  allOf:
</td>
	<td>                  allOf:
</td>
</tr>
<tr>
	<td>                    - $ref: "#/definitions/TelNum"
</td>
	<td>                    - $ref: "#/definitions/TelNum"
</td>
</tr>
<tr>
	<td>                description: "電話番号"
</td>
	<td>                description: "電話番号"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /office/plan/find:
</td>
	<td>  /office/plan/find:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Back office"
</td>
	<td>        - "Back office"
</td>
</tr>
<tr>
	<td>      summary: "プラン参照API"
</td>
	<td>      summary: "プラン参照API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        プランデータを参照する。
</td>
	<td>        プランデータを参照する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              planId:
</td>
	<td>              plan<em>File</em>Id:
</td>
</tr>
<tr>
	<td>                type: "integer"
</td>
	<td>                type: "integer"
</td>
</tr>
<tr>
	<td>                description: "プランID。指定しない場合、現在適用中と次回適用予定のプランを返却する。"
</td>
	<td>                description: "プラン<em>ファイル</em>ID。指定しない場合、現在適用中と次回適用予定のプランを返却する。"
</td>
</tr>
<tr>
	<td>              needFileData:
</td>
	<td>              needFileData:
</td>
</tr>
<tr>
	<td>                type: "boolean"
</td>
	<td>                type: "boolean"
</td>
</tr>
<tr>
	<td>                description: "ファイルデータが必要な場合trueを設定する(デフォルトはfalse)"
</td>
	<td>                description: "ファイルデータが必要な場合trueを設定する(デフォルトはfalse)"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              plans:
</td>
	<td>              plans:
</td>
</tr>
<tr>
	<td>                type: "array"
</td>
	<td>                type: "array"
</td>
</tr>
<tr>
	<td>                items:
</td>
	<td>                items:
</td>
</tr>
<tr>
	<td>                  allOf:
</td>
	<td>                  allOf:
</td>
</tr>
<tr>
	<td>                    - $ref: "#/definitions/Plan"
</td>
	<td>                    - $ref: "#/definitions/Plan<em>File</em>"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /office/plan/add:
</td>
	<td>  /office/plan/add:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Back office"
</td>
	<td>        - "Back office"
</td>
</tr>
<tr>
	<td>      summary: "プラン追加API"
</td>
	<td>      summary: "プラン追加API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        プランデータを追加する。
</td>
	<td>        プランデータを追加する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            required:
</td>
	<td>            required:
</td>
</tr>
<tr>
	<td>              - startDatetime
</td>
	<td>              - startDatetime
</td>
</tr>
<tr>
	<td>              - fileName
</td>
	<td>              - fileName
</td>
</tr>
<tr>
	<td>              - fileData
</td>
	<td>              - fileData
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              startDatetime:
</td>
	<td>              startDatetime:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "適用開始日時"
</td>
	<td>                description: "適用開始日時"
</td>
</tr>
<tr>
	<td>              fileName:
</td>
	<td>              fileName:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "ファイル名"
</td>
	<td>                description: "ファイル名"
</td>
</tr>
<tr>
	<td>              fileData:
</td>
	<td>              fileData:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "ファイルデータ（Base64で暗号化された文字列）"
</td>
	<td>                description: "ファイルデータ（Base64で暗号化された文字列）"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /office/plan/delete:
</td>
	<td>  /office/plan/delete:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Back office"
</td>
	<td>        - "Back office"
</td>
</tr>
<tr>
	<td>      summary: "プラン削除API"
</td>
	<td>      summary: "プラン削除API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        プランIDに対するプランデータを物理削除する。
</td>
	<td>        プラン<em>ファイル</em>IDに対するプランデータを物理削除する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            required:
</td>
	<td>            required:
</td>
</tr>
<tr>
	<td>              - planId
</td>
	<td>              - plan<em>File</em>Id
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              planId:
</td>
	<td>              plan<em>File</em>Id:
</td>
</tr>
<tr>
	<td>                type: "integer"
</td>
	<td>                type: "integer"
</td>
</tr>
<tr>
	<td>                description: "プランID"
</td>
	<td>                description: "プラン<em>ファイル</em>ID"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /office/operator/auth:
</td>
	<td>  /office/operator/auth:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Back office"
</td>
	<td>        - "Back office"
</td>
</tr>
<tr>
	<td>      summary: "運用者認証API"
</td>
	<td>      summary: "運用者認証API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        ID／Password方式で運用者を認証する。
</td>
	<td>        ID／Password方式で運用者を認証する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            required:
</td>
	<td>            required:
</td>
</tr>
<tr>
	<td>              - mailaddress
</td>
	<td>              - mailaddress
</td>
</tr>
<tr>
	<td>              - password
</td>
	<td>              - password
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              mailaddress:
</td>
	<td>              mailaddress:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>              password:
</td>
	<td>              password:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            $ref: "#/definitions/Operator"
</td>
	<td>            $ref: "#/definitions/Operator"
</td>
</tr>
<tr>
	<td>        "401":
</td>
	<td>        "401":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /office/operator/auth/{hashCode}:
</td>
	<td>  /office/operator/auth/{hashCode}:
</td>
</tr>
<tr>
	<td>    get:
</td>
	<td>    get:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Back office"
</td>
	<td>        - "Back office"
</td>
</tr>
<tr>
	<td>      summary: "運用者認証ハッシュチェックAPI"
</td>
	<td>      summary: "運用者認証ハッシュチェックAPI"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        ハッシュ値が妥当か確認する。
</td>
	<td>        ハッシュ値が妥当か確認する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "hashCode"
</td>
	<td>        - name: "hashCode"
</td>
</tr>
<tr>
	<td>          in: "path"
</td>
	<td>          in: "path"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          type: "string"
</td>
	<td>          type: "string"
</td>
</tr>
<tr>
	<td>          description: "ハッシュ値"
</td>
	<td>          description: "ハッシュ値"
</td>
</tr>
<tr>
	<td>        - name: "hashUsageCode"
</td>
	<td>        - name: "hashUsageCode"
</td>
</tr>
<tr>
	<td>          in: "query"
</td>
	<td>          in: "query"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          type: "string"
</td>
	<td>          type: "string"
</td>
</tr>
<tr>
	<td>          description: "ハッシュ用途コード"
</td>
	<td>          description: "ハッシュ用途コード"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            $ref: "#/definitions/Operator"
</td>
	<td>            $ref: "#/definitions/Operator"
</td>
</tr>
<tr>
	<td>        "401":
</td>
	<td>        "401":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /office/operator/resetPassword:
</td>
	<td>  /office/operator/resetPassword:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Back office"
</td>
	<td>        - "Back office"
</td>
</tr>
<tr>
	<td>      summary: "運用者パスワード再設定API"
</td>
	<td>      summary: "運用者パスワード再設定API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        メールアドレスを持つアカウントに対してハッシュ生成を行い、ハッシュ付きURLをメールで送付する。&lt;br&gt;ハッシュの有効期限は現在日時より2時間。
</td>
	<td>        メールアドレスを持つアカウントに対してハッシュ生成を行い、ハッシュ付きURLをメールで送付する。&lt;br&gt;ハッシュの有効期限は現在日時より2時間。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            required:
</td>
	<td>            required:
</td>
</tr>
<tr>
	<td>              - mailaddress
</td>
	<td>              - mailaddress
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              mailaddress:
</td>
	<td>              mailaddress:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /office/operator/updatePassword:
</td>
	<td>  /office/operator/updatePassword:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Back office"
</td>
	<td>        - "Back office"
</td>
</tr>
<tr>
	<td>      summary: "運用者パスワード更新API"
</td>
	<td>      summary: "運用者パスワード更新API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        運用者認証ハッシュチェック後、運用者パスワードを更新し、認証ハッシュチェックに利用したハッシュデータを削除する。
</td>
	<td>        運用者認証ハッシュチェック後、運用者パスワードを更新し、認証ハッシュチェックに利用したハッシュデータを削除する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            required:
</td>
	<td>            required:
</td>
</tr>
<tr>
	<td>              - operatorId
</td>
	<td>              - operatorId
</td>
</tr>
<tr>
	<td>              - password
</td>
	<td>              - password
</td>
</tr>
<tr>
	<td>              - confirmPassword
</td>
	<td>              - confirmPassword
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              operatorId:
</td>
	<td>              operatorId:
</td>
</tr>
<tr>
	<td>                type: "integer"
</td>
	<td>                type: "integer"
</td>
</tr>
<tr>
	<td>                description: "運用者ID"
</td>
	<td>                description: "運用者ID"
</td>
</tr>
<tr>
	<td>              password:
</td>
	<td>              password:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "パスワード"
</td>
	<td>                description: "パスワード"
</td>
</tr>
<tr>
	<td>              confirmPassword:
</td>
	<td>              confirmPassword:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "確認用パスワード"
</td>
	<td>                description: "確認用パスワード"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /office/operator/find:
</td>
	<td>  /office/operator/find:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Back office"
</td>
	<td>        - "Back office"
</td>
</tr>
<tr>
	<td>      summary: "運用者参照API"
</td>
	<td>      summary: "運用者参照API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        運用者IDに対する運用者データを取得する。&lt;br&gt;運用者IDを設定しない場合、全取得する。
</td>
	<td>        運用者IDに対する運用者データを取得する。&lt;br&gt;運用者IDを設定しない場合、全取得する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              operatorId:
</td>
	<td>              operatorId:
</td>
</tr>
<tr>
	<td>                type: "array"
</td>
	<td>                type: "array"
</td>
</tr>
<tr>
	<td>                description: "運用者ID(指定しない場合、全取得)"
</td>
	<td>                description: "運用者ID(指定しない場合、全取得)"
</td>
</tr>
<tr>
	<td>                items:
</td>
	<td>                items:
</td>
</tr>
<tr>
	<td>                  type: "integer"
</td>
	<td>                  type: "integer"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            type: "array"
</td>
	<td>            type: "array"
</td>
</tr>
<tr>
	<td>            items:
</td>
	<td>            items:
</td>
</tr>
<tr>
	<td>              $ref: "#/definitions/Operator"
</td>
	<td>              $ref: "#/definitions/Operator"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /office/operator/add:
</td>
	<td>  /office/operator/add:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Back office"
</td>
	<td>        - "Back office"
</td>
</tr>
<tr>
	<td>      summary: "運用者追加API"
</td>
	<td>      summary: "運用者追加API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        仮発行状態で運用者を追加し、メールにて通知を行う。
</td>
	<td>        仮発行状態で運用者を追加し、メールにて通知を行う。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              operators:
</td>
	<td>              operators:
</td>
</tr>
<tr>
	<td>                type: "array"
</td>
	<td>                type: "array"
</td>
</tr>
<tr>
	<td>                items:
</td>
	<td>                items:
</td>
</tr>
<tr>
	<td>                  required:
</td>
	<td>                  required:
</td>
</tr>
<tr>
	<td>                    - lastName
</td>
	<td>                    - lastName
</td>
</tr>
<tr>
	<td>                    - firstName
</td>
	<td>                    - firstName
</td>
</tr>
<tr>
	<td>                    - mailaddress
</td>
	<td>                    - mailaddress
</td>
</tr>
<tr>
	<td>                    - roleCode
</td>
	<td>                    - roleCode
</td>
</tr>
<tr>
	<td>                  properties:
</td>
	<td>                  properties:
</td>
</tr>
<tr>
	<td>                    lastName:
</td>
	<td>                    lastName:
</td>
</tr>
<tr>
	<td>                      type: "string"
</td>
	<td>                      type: "string"
</td>
</tr>
<tr>
	<td>                      description: "姓"
</td>
	<td>                      description: "姓"
</td>
</tr>
<tr>
	<td>                    firstName:
</td>
	<td>                    firstName:
</td>
</tr>
<tr>
	<td>                      type: "string"
</td>
	<td>                      type: "string"
</td>
</tr>
<tr>
	<td>                      description: "名"
</td>
	<td>                      description: "名"
</td>
</tr>
<tr>
	<td>                    mailaddress:
</td>
	<td>                    mailaddress:
</td>
</tr>
<tr>
	<td>                      type: "string"
</td>
	<td>                      type: "string"
</td>
</tr>
<tr>
	<td>                      description: "メールアドレス"
</td>
	<td>                      description: "メールアドレス"
</td>
</tr>
<tr>
	<td>                    roleCode:
</td>
	<td>                    roleCode:
</td>
</tr>
<tr>
	<td>                      type: "integer"
</td>
	<td>                      type: "integer"
</td>
</tr>
<tr>
	<td>                      description: "権限コード"
</td>
	<td>                      description: "権限コード"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            type: "array"
</td>
	<td>            type: "array"
</td>
</tr>
<tr>
	<td>            items:
</td>
	<td>            items:
</td>
</tr>
<tr>
	<td>              properties:
</td>
	<td>              properties:
</td>
</tr>
<tr>
	<td>                mailaddress:
</td>
	<td>                mailaddress:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "作成対象のメールアドレス(失敗時は運用者IDが発行されないため)"
</td>
	<td>                  description: "作成対象のメールアドレス(失敗時は運用者IDが発行されないため)"
</td>
</tr>
<tr>
	<td>                isSucceeded:
</td>
	<td>                isSucceeded:
</td>
</tr>
<tr>
	<td>                  type: "boolean"
</td>
	<td>                  type: "boolean"
</td>
</tr>
<tr>
	<td>                  description: "処理成功フラグ"
</td>
	<td>                  description: "処理成功フラグ"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /office/operator/update:
</td>
	<td>  /office/operator/update:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Back office"
</td>
	<td>        - "Back office"
</td>
</tr>
<tr>
	<td>      summary: "運用者更新API"
</td>
	<td>      summary: "運用者更新API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        運用者を更新する。
</td>
	<td>        運用者を更新する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            required:
</td>
	<td>            required:
</td>
</tr>
<tr>
	<td>              - operatorId
</td>
	<td>              - operatorId
</td>
</tr>
<tr>
	<td>              - lastName
</td>
	<td>              - lastName
</td>
</tr>
<tr>
	<td>              - firstName
</td>
	<td>              - firstName
</td>
</tr>
<tr>
	<td>              - mailaddress
</td>
	<td>              - mailaddress
</td>
</tr>
<tr>
	<td>              - roleCode
</td>
	<td>              - roleCode
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              operatorId:
</td>
	<td>              operatorId:
</td>
</tr>
<tr>
	<td>                type: "integer"
</td>
	<td>                type: "integer"
</td>
</tr>
<tr>
	<td>                description: "運用者ID"
</td>
	<td>                description: "運用者ID"
</td>
</tr>
<tr>
	<td>              lastName:
</td>
	<td>              lastName:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "姓"
</td>
	<td>                description: "姓"
</td>
</tr>
<tr>
	<td>              firstName:
</td>
	<td>              firstName:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "名"
</td>
	<td>                description: "名"
</td>
</tr>
<tr>
	<td>              mailaddress:
</td>
	<td>              mailaddress:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "メールアドレス"
</td>
	<td>                description: "メールアドレス"
</td>
</tr>
<tr>
	<td>              roleCode:
</td>
	<td>              roleCode:
</td>
</tr>
<tr>
	<td>                type: "integer"
</td>
	<td>                type: "integer"
</td>
</tr>
<tr>
	<td>                description: "権限コード"
</td>
	<td>                description: "権限コード"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /office/operator/delete:
</td>
	<td>  /office/operator/delete:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Back office"
</td>
	<td>        - "Back office"
</td>
</tr>
<tr>
	<td>      summary: "運用者削除API"
</td>
	<td>      summary: "運用者削除API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        運用者IDに対する運用者を物理削除する。
</td>
	<td>        運用者IDに対する運用者を物理削除する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            required:
</td>
	<td>            required:
</td>
</tr>
<tr>
	<td>              - operatorIds
</td>
	<td>              - operatorIds
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              operatorIds:
</td>
	<td>              operatorIds:
</td>
</tr>
<tr>
	<td>                type: "array"
</td>
	<td>                type: "array"
</td>
</tr>
<tr>
	<td>                description: "運用者ID"
</td>
	<td>                description: "運用者ID"
</td>
</tr>
<tr>
	<td>                items:
</td>
	<td>                items:
</td>
</tr>
<tr>
	<td>                  type: "integer"
</td>
	<td>                  type: "integer"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            type: "array"
</td>
	<td>            type: "array"
</td>
</tr>
<tr>
	<td>            items:
</td>
	<td>            items:
</td>
</tr>
<tr>
	<td>              properties:
</td>
	<td>              properties:
</td>
</tr>
<tr>
	<td>                operatorId:
</td>
	<td>                operatorId:
</td>
</tr>
<tr>
	<td>                  type: "integer"
</td>
	<td>                  type: "integer"
</td>
</tr>
<tr>
	<td>                  description: "運用者ID"
</td>
	<td>                  description: "運用者ID"
</td>
</tr>
<tr>
	<td>                isSucceeded:
</td>
	<td>                isSucceeded:
</td>
</tr>
<tr>
	<td>                  type: "boolean"
</td>
	<td>                  type: "boolean"
</td>
</tr>
<tr>
	<td>                  description: "処理成功フラグ"
</td>
	<td>                  description: "処理成功フラグ"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /common/contact/find:
</td>
	<td>  /common/contact/find:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Common"
</td>
	<td>        - "Common"
</td>
</tr>
<tr>
	<td>      summary: "連絡参照API"
</td>
	<td>      summary: "連絡参照API"
</td>
</tr>
<tr>
	<td>      description: "アカウントIDからトピックおよび連絡を取得する。"
</td>
	<td>      description: "アカウントIDからトピックおよび連絡を取得する。"
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              accountId:
</td>
	<td>              accountId:
</td>
</tr>
<tr>
	<td>                type: "<em>string</em>"
</td>
	<td>                type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>                description: "アカウントID"
</td>
	<td>                description: "アカウントID"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            type: "array"
</td>
	<td>            type: "array"
</td>
</tr>
<tr>
	<td>            items:
</td>
	<td>            items:
</td>
</tr>
<tr>
	<td>              description: "連絡関連データ"
</td>
	<td>              description: "連絡関連データ"
</td>
</tr>
<tr>
	<td>              properties:
</td>
	<td>              properties:
</td>
</tr>
<tr>
	<td>                contactId:
</td>
	<td>                contactId:
</td>
</tr>
<tr>
	<td>                  type: "<em>string</em>"
</td>
	<td>                  type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>                  description: "連絡ID"
</td>
	<td>                  description: "連絡ID"
</td>
</tr>
<tr>
	<td>                contactCode:
</td>
	<td>                contactCode:
</td>
</tr>
<tr>
	<td>                  type: "integer"
</td>
	<td>                  type: "integer"
</td>
</tr>
<tr>
	<td>                  description: "連絡対象コード"
</td>
	<td>                  description: "連絡対象コード"
</td>
</tr>
<tr>
	<td>                mailSubject:
</td>
	<td>                mailSubject:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "メールタイトル"
</td>
	<td>                  description: "メールタイトル"
</td>
</tr>
<tr>
	<td>                mailContent:
</td>
	<td>                mailContent:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "メール本文"
</td>
	<td>                  description: "メール本文"
</td>
</tr>
<tr>
	<td>                messageBoxSubject:
</td>
	<td>                messageBoxSubject:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "メッセージBoxタイトル"
</td>
	<td>                  description: "メッセージBoxタイトル"
</td>
</tr>
<tr>
	<td>                messageBoxContent:
</td>
	<td>                messageBoxContent:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "メッセージBox本文"
</td>
	<td>                  description: "メッセージBox本文"
</td>
</tr>
<tr>
	<td>                response:
</td>
	<td>                response:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "回答"
</td>
	<td>                  description: "回答"
</td>
</tr>
<tr>
	<td>                respondedDatetime:
</td>
	<td>                respondedDatetime:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "回答日時"
</td>
	<td>                  description: "回答日時"
</td>
</tr>
<tr>
	<td>                createdDatetime:
</td>
	<td>                createdDatetime:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "作成日時"
</td>
	<td>                  description: "作成日時"
</td>
</tr>
<tr>
	<td>                displayedDatetime:
</td>
	<td>                displayedDatetime:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "掲載日時"
</td>
	<td>                  description: "掲載日時"
</td>
</tr>
<tr>
	<td>                wantDisplay:
</td>
	<td>                wantDisplay:
</td>
</tr>
<tr>
	<td>                  type: "boolean"
</td>
	<td>                  type: "boolean"
</td>
</tr>
<tr>
	<td>                  description: "掲載フラグ"
</td>
	<td>                  description: "掲載フラグ"
</td>
</tr>
<tr>
	<td>                mailSendStartHour:
</td>
	<td>                mailSendStartHour:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "メール送信可能開始時間"
</td>
	<td>                  description: "メール送信可能開始時間"
</td>
</tr>
<tr>
	<td>                mailSendEndHour:
</td>
	<td>                mailSendEndHour:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "メール送信可能終了時間"
</td>
	<td>                  description: "メール送信可能終了時間"
</td>
</tr>
<tr>
	<td>                mailSendDatetime:
</td>
	<td>                mailSendDatetime:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "メール送信日時"
</td>
	<td>                  description: "メール送信日時"
</td>
</tr>
<tr>
	<td>                mailaddress:
</td>
	<td>                mailaddress:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "メールアドレス"
</td>
	<td>                  description: "メールアドレス"
</td>
</tr>
<tr>
	<td>                sendStatusCode:
</td>
	<td>                sendStatusCode:
</td>
</tr>
<tr>
	<td>                  type: "integer"
</td>
	<td>                  type: "integer"
</td>
</tr>
<tr>
	<td>                  description: "送信ステータスコード"
</td>
	<td>                  description: "送信ステータスコード"
</td>
</tr>
<tr>
	<td>                sendServiceCode:
</td>
	<td>                sendServiceCode:
</td>
</tr>
<tr>
	<td>                  type: "integer"
</td>
	<td>                  type: "integer"
</td>
</tr>
<tr>
	<td>                  description: "送信業務コード"
</td>
	<td>                  description: "送信業務コード"
</td>
</tr>
<tr>
	<td>                sesMessageId:
</td>
	<td>                sesMessageId:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "SES メッセージID"
</td>
	<td>                  description: "SES メッセージID"
</td>
</tr>
<tr>
	<td>                topicId:
</td>
	<td>                topicId:
</td>
</tr>
<tr>
	<td>                  type: "<em>string</em>"
</td>
	<td>                  type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>                  description: "トピックID"
</td>
	<td>                  description: "トピックID"
</td>
</tr>
<tr>
	<td>                topicCategories:
</td>
	<td>                topicCategories:
</td>
</tr>
<tr>
	<td>                  type: "array"
</td>
	<td>                  type: "array"
</td>
</tr>
<tr>
	<td>                  items: 
</td>
	<td>                  items: 
</td>
</tr>
<tr>
	<td>                    $ref: "#/definitions/TopicCategory"
</td>
	<td>                    $ref: "#/definitions/TopicCategory"
</td>
</tr>
<tr>
	<td>                productAdditionalId:
</td>
	<td>                productAdditionalId:
</td>
</tr>
<tr>
	<td>                  type: "<em>string</em>"
</td>
	<td>                  type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>                  description: "商品付加ID"
</td>
	<td>                  description: "商品付加ID"
</td>
</tr>
<tr>
	<td>                productAdditionalVersion:
</td>
	<td>                productAdditionalVersion:
</td>
</tr>
<tr>
	<td>                  type: "integer"
</td>
	<td>                  type: "integer"
</td>
</tr>
<tr>
	<td>                  description: "商品付加バージョン"
</td>
	<td>                  description: "商品付加バージョン"
</td>
</tr>
<tr>
	<td>                policyNo:
</td>
	<td>                policyNo:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "証券番号"
</td>
	<td>                  description: "証券番号"
</td>
</tr>
<tr>
	<td>                productCode:
</td>
	<td>                productCode:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "販売商品コード"
</td>
	<td>                  description: "販売商品コード"
</td>
</tr>
<tr>
	<td>                applyId:
</td>
	<td>                applyId:
</td>
</tr>
<tr>
	<td>                  type: "<em>string</em>"
</td>
	<td>                  type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>                  description: "申込ID"
</td>
	<td>                  description: "申込ID"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /common/contact/markAsResponded:
</td>
	<td>  /common/contact/markAsResponded:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Common"
</td>
	<td>        - "Common"
</td>
</tr>
<tr>
	<td>      summary: "連絡対応済API"
</td>
	<td>      summary: "連絡対応済API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        連絡IDに対する要対応連絡を対応済(CRM起点の連絡はCC確認待ち)にする。
</td>
	<td>        連絡IDに対する要対応連絡を対応済(CRM起点の連絡はCC確認待ち)にする。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              contactId:
</td>
	<td>              contactId:
</td>
</tr>
<tr>
	<td>                type: "<em>string</em>"
</td>
	<td>                type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>                description: "連絡ID"
</td>
	<td>                description: "連絡ID"
</td>
</tr>
<tr>
	<td>              response:
</td>
	<td>              response:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "回答"
</td>
	<td>                description: "回答"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      <em>        topicCategoryCode:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>                type: "integer"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>                description: "トピックカテゴリーコード"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</em>responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /common/resource/code:
</td>
	<td>  /common/resource/code:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Common"
</td>
	<td>        - "Common"
</td>
</tr>
<tr>
	<td>      summary: "コード値参照API"
</td>
	<td>      summary: "コード値参照API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        コード値とラベルの一覧を返却する。
</td>
	<td>        コード値とラベルの一覧を返却する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              codeId:
</td>
	<td>              codeId:
</td>
</tr>
<tr>
	<td>                type: "array"
</td>
	<td>                type: "array"
</td>
</tr>
<tr>
	<td>                items:
</td>
	<td>                items:
</td>
</tr>
<tr>
	<td>                  type: "<em>string</em>"
</td>
	<td>                  type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            type: "array"
</td>
	<td>            type: "array"
</td>
</tr>
<tr>
	<td>            items:
</td>
	<td>            items:
</td>
</tr>
<tr>
	<td>              $ref: "#/definitions/CodeMaster"
</td>
	<td>              $ref: "#/definitions/CodeMaster"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /disclosure/start:
</td>
	<td>  /disclosure/start:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Disclosure"
</td>
	<td>        - "Disclosure"
</td>
</tr>
<tr>
	<td>      summary: "告知開始API"
</td>
	<td>      summary: "告知開始API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        (未取得の場合)証券番号取得し、AURAセッションを開始(再開)し、回答すべき質問を返却する。
</td>
	<td>        (未取得の場合)証券番号取得し、AURAセッションを開始(再開)し、回答すべき質問を返却する。
</td>
</tr>
<tr>
	<td>        セッション開始時に連携されるinput.xmlを保存する。
</td>
	<td>        セッション開始時に連携されるinput.xmlを保存する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - in: "body"
</td>
	<td>        - in: "body"
</td>
</tr>
<tr>
	<td>          name: "body"
</td>
	<td>          name: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              applyId:
</td>
	<td>              applyId:
</td>
</tr>
<tr>
	<td>                type: "<em>string</em>"
</td>
	<td>                type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>                description: "申込ID"
</td>
	<td>                description: "申込ID"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              questions:
</td>
	<td>              questions:
</td>
</tr>
<tr>
	<td>                type: "array"
</td>
	<td>                type: "array"
</td>
</tr>
<tr>
	<td>                items:
</td>
	<td>                items:
</td>
</tr>
<tr>
	<td>                  $ref: "#/definitions/AuraQuestion"
</td>
	<td>                  $ref: "#/definitions/AuraQuestion"
</td>
</tr>
<tr>
	<td>              session:
</td>
	<td>              session:
</td>
</tr>
<tr>
	<td>                $ref: "#/definitions/AuraSession"
</td>
	<td>                $ref: "#/definitions/AuraSession"
</td>
</tr>
<tr>
	<td>              status:
</td>
	<td>              status:
</td>
</tr>
<tr>
	<td>                $ref: "#/definitions/AuraStatus"
</td>
	<td>                $ref: "#/definitions/AuraStatus"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /disclosure/answer:
</td>
	<td>  /disclosure/answer:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Disclosure"
</td>
	<td>        - "Disclosure"
</td>
</tr>
<tr>
	<td>      summary: "告知回答API"
</td>
	<td>      summary: "告知回答API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        AURAに質問の回答を送信する。
</td>
	<td>        AURAに質問の回答を送信する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - in: "body"
</td>
	<td>        - in: "body"
</td>
</tr>
<tr>
	<td>          name: "body"
</td>
	<td>          name: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              answer:
</td>
	<td>              answer:
</td>
</tr>
<tr>
	<td>                $ref: "#/definitions/AuraAnswer"
</td>
	<td>                $ref: "#/definitions/AuraAnswer"
</td>
</tr>
<tr>
	<td>              session:
</td>
	<td>              session:
</td>
</tr>
<tr>
	<td>                $ref: "#/definitions/AuraSession"
</td>
	<td>                $ref: "#/definitions/AuraSession"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              <em>subQuestion</em>:
</td>
	<td>              <em>questions</em>:
</td>
</tr>
<tr>
	<td>                <em>allOf</em>:
</td>
	<td>                <em>type</em>:<em> "array"</em>
</td>
</tr>
<tr>
	<td>                <em>  - $ref</em>:<em> "#/definitions/AuraQuestion"</em>
</td>
	<td>                <em>items</em>:
</td>
</tr>
<tr>
	<td>                <em>description</em>: "<em>子質問</em>"
</td>
	<td>                <em>  $ref</em>: "<em>#/definitions/AuraQuestion</em>"
</td>
</tr>
<tr>
	<td>              session:
</td>
	<td>              session:
</td>
</tr>
<tr>
	<td>                $ref: "#/definitions/AuraSession"
</td>
	<td>                $ref: "#/definitions/AuraSession"
</td>
</tr>
<tr>
	<td>              status:
</td>
	<td>              status:
</td>
</tr>
<tr>
	<td>                $ref: "#/definitions/AuraStatus"
</td>
	<td>                $ref: "#/definitions/AuraStatus"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /disclosure/complete:
</td>
	<td>  /disclosure/complete:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Disclosure"
</td>
	<td>        - "Disclosure"
</td>
</tr>
<tr>
	<td>      summary: "告知完了API"
</td>
	<td>      summary: "告知完了API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        AURAに告知完了を通知しOutput.xmlを基幹システムに連携する。&lt;br&gt;複数商品申込み時には画面で入力された回答結果を元に告知完了を行い、同様にOutput.xmlを基幹システムに連携する。&lt;br&gt;謝絶時には上記を行わない。
</td>
	<td>        AURAに告知完了を通知しOutput.xmlを基幹システムに連携する。&lt;br&gt;複数商品申込み時には画面で入力された回答結果を元に告知完了を行い、同様にOutput.xmlを基幹システムに連携する。&lt;br&gt;謝絶時には上記を行わない。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - in: "body"
</td>
	<td>        - in: "body"
</td>
</tr>
<tr>
	<td>          name: "body"
</td>
	<td>          name: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              session:
</td>
	<td>              session:
</td>
</tr>
<tr>
	<td>                $ref: "#/definitions/AuraSession"
</td>
	<td>                $ref: "#/definitions/AuraSession"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /apply/update:
</td>
	<td>  /apply/update:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Apply"
</td>
	<td>        - "Apply"
</td>
</tr>
<tr>
	<td>      summary: "申込更新API"
</td>
	<td>      summary: "申込更新API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        入力データを更新し完了ステータスを付加する。
</td>
	<td>        入力データを更新し完了ステータスを付加する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            required:
</td>
	<td>            required:
</td>
</tr>
<tr>
	<td>              - productGroups
</td>
	<td>              - productGroups
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              productGroups:
</td>
	<td>              productGroups:
</td>
</tr>
<tr>
	<td>                type: "array"
</td>
	<td>                type: "array"
</td>
</tr>
<tr>
	<td>                items:
</td>
	<td>                items:
</td>
</tr>
<tr>
	<td>                  allOf:
</td>
	<td>                  allOf:
</td>
</tr>
<tr>
	<td>                    - $ref: "#/definitions/ProductGroup"
</td>
	<td>                    - $ref: "#/definitions/ProductGroup"
</td>
</tr>
<tr>
	<td>                description: "商品グループ（商品付加、主契約、特約、承諾、契約者、受取人、支払、ドキュメント）"
</td>
	<td>                description: "商品グループ（商品付加、主契約、特約、承諾、契約者、受取人、支払、ドキュメント）"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /apply/submit:
</td>
	<td>  /apply/submit:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Apply"
</td>
	<td>        - "Apply"
</td>
</tr>
<tr>
	<td>      summary: "申込完了API"
</td>
	<td>      summary: "申込完了API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        申込データと付随するファイルを基幹システムに連携する。
</td>
	<td>        申込データと付随するファイルを基幹システムに連携する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            required:
</td>
	<td>            required:
</td>
</tr>
<tr>
	<td>              - applyId
</td>
	<td>              - applyId
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              applyId:
</td>
	<td>              applyId:
</td>
</tr>
<tr>
	<td>                type: "<em>string</em>"
</td>
	<td>                type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>                description: "申込ID"
</td>
	<td>                description: "申込ID"
</td>
</tr>
<tr>
	<td>              policyPostCls:
</td>
	<td>              policyPostCls:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "保険証券郵送区分"
</td>
	<td>                description: "保険証券郵送区分"
</td>
</tr>
<tr>
	<td>              applyChangeType:
</td>
	<td>              applyChangeType:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "申込変更区分"
</td>
	<td>                description: "申込変更区分"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /apply/find:
</td>
	<td>  /apply/find:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Apply"
</td>
	<td>        - "Apply"
</td>
</tr>
<tr>
	<td>      summary: "申込参照API"
</td>
	<td>      summary: "申込参照API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        アカウントに対する申込データを取得する。
</td>
	<td>        アカウントに対する申込データを取得する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              accountId:
</td>
	<td>              accountId:
</td>
</tr>
<tr>
	<td>                type: "<em>string</em>"
</td>
	<td>                type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>                description: "アカウントID"
</td>
	<td>                description: "アカウントID"
</td>
</tr>
<tr>
	<td>              applyId:
</td>
	<td>              applyId:
</td>
</tr>
<tr>
	<td>                type: "<em>string</em>"
</td>
	<td>                type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>                description: "申込ID"
</td>
	<td>                description: "申込ID"
</td>
</tr>
<tr>
	<td>              productAdditionalId:
</td>
	<td>              productAdditionalId:
</td>
</tr>
<tr>
	<td>                type: "<em>string</em>"
</td>
	<td>                type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>                description: "商品付加ID"
</td>
	<td>                description: "商品付加ID"
</td>
</tr>
<tr>
	<td>              productAdditionalVersion:
</td>
	<td>              productAdditionalVersion:
</td>
</tr>
<tr>
	<td>                type: "integer"
</td>
	<td>                type: "integer"
</td>
</tr>
<tr>
	<td>                description: "商品付加バージョン"
</td>
	<td>                description: "商品付加バージョン"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            type: "array"
</td>
	<td>            type: "array"
</td>
</tr>
<tr>
	<td>            items:
</td>
	<td>            items:
</td>
</tr>
<tr>
	<td>              type: "object"
</td>
	<td>              type: "object"
</td>
</tr>
<tr>
	<td>              properties:
</td>
	<td>              properties:
</td>
</tr>
<tr>
	<td>                applyId:
</td>
	<td>                applyId:
</td>
</tr>
<tr>
	<td>                  type: "<em>string</em>"
</td>
	<td>                  type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>                  description: "申込ID"
</td>
	<td>                  description: "申込ID"
</td>
</tr>
<tr>
	<td>                applyDatetime:
</td>
	<td>                applyDatetime:
</td>
</tr>
<tr>
	<td>                  type: "string"
</td>
	<td>                  type: "string"
</td>
</tr>
<tr>
	<td>                  description: "申込完了日時"
</td>
	<td>                  description: "申込完了日時"
</td>
</tr>
<tr>
	<td>                productGroups:
</td>
	<td>                productGroups:
</td>
</tr>
<tr>
	<td>                  type: "array"
</td>
	<td>                  type: "array"
</td>
</tr>
<tr>
	<td>                  description: "商品グループ"
</td>
	<td>                  description: "商品グループ"
</td>
</tr>
<tr>
	<td>                  items:
</td>
	<td>                  items:
</td>
</tr>
<tr>
	<td>                    allOf:
</td>
	<td>                    allOf:
</td>
</tr>
<tr>
	<td>                      - $ref: "#/definitions/ProductGroup"
</td>
	<td>                      - $ref: "#/definitions/ProductGroup"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /apply/delete:
</td>
	<td>  /apply/delete:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Apply"
</td>
	<td>        - "Apply"
</td>
</tr>
<tr>
	<td>      summary: "申込削除API"
</td>
	<td>      summary: "申込削除API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        申込IDに対する申込データを論理削除する。
</td>
	<td>        申込IDに対する申込データを論理削除する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            required:
</td>
	<td>            required:
</td>
</tr>
<tr>
	<td>              - applyId
</td>
	<td>              - applyId
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              applyId:
</td>
	<td>              applyId:
</td>
</tr>
<tr>
	<td>                type: "<em>string</em>"
</td>
	<td>                type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>                description: "申込ID"
</td>
	<td>                description: "申込ID"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /apply/individual/validate:
</td>
	<td>  /apply/individual/validate:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Apply"
</td>
	<td>        - "Apply"
</td>
</tr>
<tr>
	<td>      summary: "本人情報チェックAPI"
</td>
	<td>      summary: "本人情報チェックAPI"
</td>
</tr>
<tr>
	<td>      description: "本人確認アシストAPIから取得した本人情報（生年月日、姓名、かな）と、申込データに対する個人情報の情報と突合する。"
</td>
	<td>      description: "本人確認アシストAPIから取得した本人情報（生年月日、姓名、かな）と、申込データに対する個人情報の情報と突合する。"
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            required:
</td>
	<td>            required:
</td>
</tr>
<tr>
	<td>              - target
</td>
	<td>              - target
</td>
</tr>
<tr>
	<td>              - individual
</td>
	<td>              - individual
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              target:
</td>
	<td>              target:
</td>
</tr>
<tr>
	<td>                type: "object"
</td>
	<td>                type: "object"
</td>
</tr>
<tr>
	<td>                required:
</td>
	<td>                required:
</td>
</tr>
<tr>
	<td>                  - applyId
</td>
	<td>                  - applyId
</td>
</tr>
<tr>
	<td>                properties:
</td>
	<td>                properties:
</td>
</tr>
<tr>
	<td>                  applyId:
</td>
	<td>                  applyId:
</td>
</tr>
<tr>
	<td>                    type: "<em>string</em>"
</td>
	<td>                    type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>                    description: "申込ID"
</td>
	<td>                    description: "申込ID"
</td>
</tr>
<tr>
	<td>              individual:
</td>
	<td>              individual:
</td>
</tr>
<tr>
	<td>                required:
</td>
	<td>                required:
</td>
</tr>
<tr>
	<td>                  - lastName
</td>
	<td>                  - lastName
</td>
</tr>
<tr>
	<td>                  - firstName
</td>
	<td>                  - firstName
</td>
</tr>
<tr>
	<td>                  - lastNameKana
</td>
	<td>                  - lastNameKana
</td>
</tr>
<tr>
	<td>                  - firstNameKana
</td>
	<td>                  - firstNameKana
</td>
</tr>
<tr>
	<td>                  - birthDate
</td>
	<td>                  - birthDate
</td>
</tr>
<tr>
	<td>                properties:
</td>
	<td>                properties:
</td>
</tr>
<tr>
	<td>                  lastName:
</td>
	<td>                  lastName:
</td>
</tr>
<tr>
	<td>                    type: "string"
</td>
	<td>                    type: "string"
</td>
</tr>
<tr>
	<td>                    description: "姓"
</td>
	<td>                    description: "姓"
</td>
</tr>
<tr>
	<td>                  firstName:
</td>
	<td>                  firstName:
</td>
</tr>
<tr>
	<td>                    type: "string"
</td>
	<td>                    type: "string"
</td>
</tr>
<tr>
	<td>                    description: "名"
</td>
	<td>                    description: "名"
</td>
</tr>
<tr>
	<td>                  lastNameKana:
</td>
	<td>                  lastNameKana:
</td>
</tr>
<tr>
	<td>                    type: "string"
</td>
	<td>                    type: "string"
</td>
</tr>
<tr>
	<td>                    description: "セイ"
</td>
	<td>                    description: "セイ"
</td>
</tr>
<tr>
	<td>                  firstNameKana:
</td>
	<td>                  firstNameKana:
</td>
</tr>
<tr>
	<td>                    type: "string"
</td>
	<td>                    type: "string"
</td>
</tr>
<tr>
	<td>                    description: "メイ"
</td>
	<td>                    description: "メイ"
</td>
</tr>
<tr>
	<td>                  birthDate:
</td>
	<td>                  birthDate:
</td>
</tr>
<tr>
	<td>                    type: "string"
</td>
	<td>                    type: "string"
</td>
</tr>
<tr>
	<td>                    description: "生年月日"
</td>
	<td>                    description: "生年月日"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /batch/judgeStatus/import:
</td>
	<td>  /<em>apply/redesign:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>    post:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      tags:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        - "Apply"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      summary: "申込再設定API"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      description: |-
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        本人確認書類を更新し、基幹システムの本人確認書類搭載APIをコールする。
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        ※IF項目は申込更新と同様（ただし使用するデータは本人確認書類のみをターゲットとする）
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      consumes:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        - "application/json"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      produces:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        - "application/json"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      parameters:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        - name: "body"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>          in: "body"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>          required: true
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>          schema:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>            required:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>              - productGroups
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>            properties:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>              productGroups:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>                type: "array"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>                items:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>                  allOf:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>                    - $ref: "#/definitions/ProductGroup"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>                description: 商品グループ（商品付加、主契約、特約、承諾、契約者、受取人、支払、ドキュメント）
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      responses:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        "200":
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>          description: "successful operation"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        "400":
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>          description: "Invalid input"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>  /</em>batch/judgeStatus/import:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Batch"
</td>
	<td>        - "Batch"
</td>
</tr>
<tr>
	<td>      summary: "ステータス同期API"
</td>
	<td>      summary: "ステータス同期API"
</td>
</tr>
<tr>
	<td>      description: "審査ステータスと査定結果を基幹システムから取得する。スケジューラーからの利用を想定している。"
</td>
	<td>      description: "審査ステータスと査定結果を基幹システムから取得する。スケジューラーからの利用を想定している。"
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            type: "array"
</td>
	<td>            type: "array"
</td>
</tr>
<tr>
	<td>            items:
</td>
	<td>            items:
</td>
</tr>
<tr>
	<td>              $ref: "#/definitions/BatchResult"
</td>
	<td>              $ref: "#/definitions/BatchResult"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /office/contact/add:
</td>
	<td>  /office/contact/add:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Back office"
</td>
	<td>        - "Back office"
</td>
</tr>
<tr>
	<td>      summary: "連絡追加・更新API"
</td>
	<td>      summary: "連絡追加・更新API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        連絡IDに紐づくレコードが非存在の場合、連絡レコードを登録し、
</td>
	<td>        連絡IDに紐づくレコードが非存在の場合、連絡レコードを登録し、
</td>
</tr>
<tr>
	<td>        連絡IDに紐づくレコードが存在する場合、連絡レコードを更新する。
</td>
	<td>        連絡IDに紐づくレコードが存在する場合、連絡レコードを更新する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              accountId:
</td>
	<td>              accountId:
</td>
</tr>
<tr>
	<td>                type: "integer"
</td>
	<td>                type: "integer"
</td>
</tr>
<tr>
	<td>                description: "アカウントID(追加時必須。連絡をアカウントに紐づける場合設定する。)"
</td>
	<td>                description: "アカウントID(追加時必須。連絡をアカウントに紐づける場合設定する。)"
</td>
</tr>
<tr>
	<td>              applyId:
</td>
	<td>              applyId:
</td>
</tr>
<tr>
	<td>                type: "integer"
</td>
	<td>                type: "integer"
</td>
</tr>
<tr>
	<td>                description: "申込ID(追加時必須。連絡を申込に紐づける場合設定する。)"
</td>
	<td>                description: "申込ID(追加時必須。連絡を申込に紐づける場合設定する。)"
</td>
</tr>
<tr>
	<td>              productAdditionalId:
</td>
	<td>              productAdditionalId:
</td>
</tr>
<tr>
	<td>                type: "integer"
</td>
	<td>                type: "integer"
</td>
</tr>
<tr>
	<td>                description: "商品付加ID(追加時必須。連絡を商品に紐づける場合設定する。)"
</td>
	<td>                description: "商品付加ID(追加時必須。連絡を商品に紐づける場合設定する。)"
</td>
</tr>
<tr>
	<td>              topicCategoryCode:
</td>
	<td>              topicCategoryCode:
</td>
</tr>
<tr>
	<td>                type: "integer"
</td>
	<td>                type: "integer"
</td>
</tr>
<tr>
	<td>                description: "トピックカテゴリーコード(追加時必須)"
</td>
	<td>                description: "トピックカテゴリーコード(追加時必須)"
</td>
</tr>
<tr>
	<td>              <em>needAction</em>:
</td>
	<td>              <em>topicStatusCode</em>:
</td>
</tr>
<tr>
	<td>                type: "<em>boolean</em>"
</td>
	<td>                type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>                description: "<em>対応要否フラグ</em>(追加時<em>必須。ユーザーアクションが必</em>要<em>な場合</em>設定する。)"
</td>
	<td>                description: "<em>トピックステータスコード</em>(<em>新規</em>追加時<em>は対応不</em>要<em>、未対応のいずれか、代理回答時は対応済を</em>設定する。)"
</td>
</tr>
<tr>
	<td>              <em>  default: false
</em></td>
	<td>              contactId:
</td>
</tr>
<tr>
	<td><em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</em>contactId:
</td>
	<td></td>
</tr>
<tr>
	<td>                type: "integer"
</td>
	<td>                type: "integer"
</td>
</tr>
<tr>
	<td>                description: "連絡ID(更新時必須)"
</td>
	<td>                description: "連絡ID(更新時必須)"
</td>
</tr>
<tr>
	<td>              contactCode:
</td>
	<td>              contactCode:
</td>
</tr>
<tr>
	<td>                type: "integer"
</td>
	<td>                type: "integer"
</td>
</tr>
<tr>
	<td>                description: "連絡対象コード(追加時必須)"
</td>
	<td>                description: "連絡対象コード(追加時必須)"
</td>
</tr>
<tr>
	<td>              mailSubject:
</td>
	<td>              mailSubject:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "メールタイトル(追加時メールかメッセージBoxのどちらかが必須)"
</td>
	<td>                description: "メールタイトル(追加時メールかメッセージBoxのどちらかが必須)"
</td>
</tr>
<tr>
	<td>              mailContent:
</td>
	<td>              mailContent:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "メール本文(追加時メールかメッセージBoxのどちらかが必須)"
</td>
	<td>                description: "メール本文(追加時メールかメッセージBoxのどちらかが必須)"
</td>
</tr>
<tr>
	<td>              messageBoxSubject:
</td>
	<td>              messageBoxSubject:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "メッセージBoxタイトル(追加時メールかメッセージBoxのどちらかが必須)"
</td>
	<td>                description: "メッセージBoxタイトル(追加時メールかメッセージBoxのどちらかが必須)"
</td>
</tr>
<tr>
	<td>              messageBoxContent:
</td>
	<td>              messageBoxContent:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "メッセージBox本文(追加時メールかメッセージBoxのどちらかが必須)"
</td>
	<td>                description: "メッセージBox本文(追加時メールかメッセージBoxのどちらかが必須)"
</td>
</tr>
<tr>
	<td>              response:
</td>
	<td>              response:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "回答"
</td>
	<td>                description: "回答"
</td>
</tr>
<tr>
	<td>              respondedDatetime:
</td>
	<td>              respondedDatetime:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "回答日時"
</td>
	<td>                description: "回答日時"
</td>
</tr>
<tr>
	<td>              mailSendStartHour:
</td>
	<td>              mailSendStartHour:
</td>
</tr>
<tr>
	<td>                type: "integer"
</td>
	<td>                type: "integer"
</td>
</tr>
<tr>
	<td>                description: "メール送信可能開始時間(メール送信可能開始~終了時間の間にバッチ処理された連絡に対してメール送信を行う)"
</td>
	<td>                description: "メール送信可能開始時間(メール送信可能開始~終了時間の間にバッチ処理された連絡に対してメール送信を行う)"
</td>
</tr>
<tr>
	<td>              mailSendEndHour:
</td>
	<td>              mailSendEndHour:
</td>
</tr>
<tr>
	<td>                type: "integer"
</td>
	<td>                type: "integer"
</td>
</tr>
<tr>
	<td>                description: "メール送信可能終了時間(メール送信可能開始~終了時間の間にバッチ処理された連絡に対してメール送信を行う)"
</td>
	<td>                description: "メール送信可能終了時間(メール送信可能開始~終了時間の間にバッチ処理された連絡に対してメール送信を行う)"
</td>
</tr>
<tr>
	<td>              wantDisplay:
</td>
	<td>              wantDisplay:
</td>
</tr>
<tr>
	<td>                type: "boolean"
</td>
	<td>                type: "boolean"
</td>
</tr>
<tr>
	<td>                description: "掲載フラグ(掲載が必要な場合設定する。)"
</td>
	<td>                description: "掲載フラグ(掲載が必要な場合設定する。)"
</td>
</tr>
<tr>
	<td>                default: false
</td>
	<td>                default: false
</td>
</tr>
<tr>
	<td>              crmStaffName:
</td>
	<td>              crmStaffName:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "CRM担当者（担当者の氏名を設定する。書式：姓＋全角スペース＋名）"
</td>
	<td>                description: "CRM担当者（担当者の氏名を設定する。書式：姓＋全角スペース＋名）"
</td>
</tr>
<tr>
	<td>              crmApproverName:
</td>
	<td>              crmApproverName:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "CRM承認者（承認者の氏名を設定する。主に掲載フラグをONにする（承認する）場合に使用する。書式：姓＋全角スペース＋名）"
</td>
	<td>                description: "CRM承認者（承認者の氏名を設定する。主に掲載フラグをONにする（承認する）場合に使用する。書式：姓＋全角スペース＋名）"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /office/contact/delete:
</td>
	<td>  /office/contact/delete:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Back office"
</td>
	<td>        - "Back office"
</td>
</tr>
<tr>
	<td>      summary: "連絡削除API"
</td>
	<td>      summary: "連絡削除API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        連絡IDに対する連絡レコードを論理削除する。
</td>
	<td>        連絡IDに対する連絡レコードを論理削除する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            required:
</td>
	<td>            required:
</td>
</tr>
<tr>
	<td>              - contactIds
</td>
	<td>              - contactIds
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              contactIds:
</td>
	<td>              contactIds:
</td>
</tr>
<tr>
	<td>                type: "array"
</td>
	<td>                type: "array"
</td>
</tr>
<tr>
	<td>                description: "連絡ID"
</td>
	<td>                description: "連絡ID"
</td>
</tr>
<tr>
	<td>                items:
</td>
	<td>                items:
</td>
</tr>
<tr>
	<td>                  type: "integer"
</td>
	<td>                  type: "integer"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            type: "array"
</td>
	<td>            type: "array"
</td>
</tr>
<tr>
	<td>            items:
</td>
	<td>            items:
</td>
</tr>
<tr>
	<td>              properties:
</td>
	<td>              properties:
</td>
</tr>
<tr>
	<td>                contactId:
</td>
	<td>                contactId:
</td>
</tr>
<tr>
	<td>                  type: "integer"
</td>
	<td>                  type: "integer"
</td>
</tr>
<tr>
	<td>                  description: "連絡ID"
</td>
	<td>                  description: "連絡ID"
</td>
</tr>
<tr>
	<td>                isSucceeded:
</td>
	<td>                isSucceeded:
</td>
</tr>
<tr>
	<td>                  type: "boolean"
</td>
	<td>                  type: "boolean"
</td>
</tr>
<tr>
	<td>                  description: "処理成功フラグ"
</td>
	<td>                  description: "処理成功フラグ"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /office/announce/find:
</td>
	<td>  /office/announce/find:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Back office"
</td>
	<td>        - "Back office"
</td>
</tr>
<tr>
	<td>      summary: "アナウンス参照API"
</td>
	<td>      summary: "アナウンス参照API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        アナウンスIDに対する運用者データを取得する。&lt;br&gt;アナウンスIDを設定しない場合、全取得する。
</td>
	<td>        アナウンスIDに対する運用者データを取得する。&lt;br&gt;アナウンスIDを設定しない場合、全取得する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              announceId:
</td>
	<td>              announceId:
</td>
</tr>
<tr>
	<td>                type: "array"
</td>
	<td>                type: "array"
</td>
</tr>
<tr>
	<td>                description: "アナウンスID(指定しない場合、全取得)"
</td>
	<td>                description: "アナウンスID(指定しない場合、全取得)"
</td>
</tr>
<tr>
	<td>                items:
</td>
	<td>                items:
</td>
</tr>
<tr>
	<td>                  type: "integer"
</td>
	<td>                  type: "integer"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            type: "array"
</td>
	<td>            type: "array"
</td>
</tr>
<tr>
	<td>            items:
</td>
	<td>            items:
</td>
</tr>
<tr>
	<td>              $ref: "#/definitions/Announce"
</td>
	<td>              $ref: "#/definitions/Announce"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /office/announce/add:
</td>
	<td>  /office/announce/add:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Back office"
</td>
	<td>        - "Back office"
</td>
</tr>
<tr>
	<td>      summary: "アナウンス追加・更新API"
</td>
	<td>      summary: "アナウンス追加・更新API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        アナウンスを追加・更新する。&lt;br&gt;アナウンスIDが入力されていれば、更新処理を行う。
</td>
	<td>        アナウンスを追加・更新する。&lt;br&gt;アナウンスIDが入力されていれば、更新処理を行う。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            $ref: "#/definitions/Announce"
</td>
	<td>            $ref: "#/definitions/Announce"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /office/announce/delete:
</td>
	<td>  /office/announce/delete:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Back office"
</td>
	<td>        - "Back office"
</td>
</tr>
<tr>
	<td>      summary: "アナウンス削除API"
</td>
	<td>      summary: "アナウンス削除API"
</td>
</tr>
<tr>
	<td>      description: |-
</td>
	<td>      description: |-
</td>
</tr>
<tr>
	<td>        アナウンスIDに対するアナウンスレコードを論理削除する。
</td>
	<td>        アナウンスIDに対するアナウンスレコードを論理削除する。
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - name: "body"
</td>
	<td>        - name: "body"
</td>
</tr>
<tr>
	<td>          in: "body"
</td>
	<td>          in: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            required:
</td>
	<td>            required:
</td>
</tr>
<tr>
	<td>              - announceIds
</td>
	<td>              - announceIds
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              announceIds:
</td>
	<td>              announceIds:
</td>
</tr>
<tr>
	<td>                type: "array"
</td>
	<td>                type: "array"
</td>
</tr>
<tr>
	<td>                description: "アナウンスID"
</td>
	<td>                description: "アナウンスID"
</td>
</tr>
<tr>
	<td>                items:
</td>
	<td>                items:
</td>
</tr>
<tr>
	<td>                  type: "integer"
</td>
	<td>                  type: "integer"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            type: "array"
</td>
	<td>            type: "array"
</td>
</tr>
<tr>
	<td>            items:
</td>
	<td>            items:
</td>
</tr>
<tr>
	<td>              properties:
</td>
	<td>              properties:
</td>
</tr>
<tr>
	<td>                announceId:
</td>
	<td>                announceId:
</td>
</tr>
<tr>
	<td>                  type: "integer"
</td>
	<td>                  type: "integer"
</td>
</tr>
<tr>
	<td>                  description: "アナウンスID"
</td>
	<td>                  description: "アナウンスID"
</td>
</tr>
<tr>
	<td>                isSucceeded:
</td>
	<td>                isSucceeded:
</td>
</tr>
<tr>
	<td>                  type: "boolean"
</td>
	<td>                  type: "boolean"
</td>
</tr>
<tr>
	<td>                  description: "処理成功フラグ"
</td>
	<td>                  description: "処理成功フラグ"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /batch/maintenanceDatabae:
</td>
	<td>  /batch/maintenanceDatabae:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Batch"
</td>
	<td>        - "Batch"
</td>
</tr>
<tr>
	<td>      summary: "データメンテナンスAPI"
</td>
	<td>      summary: "データメンテナンスAPI"
</td>
</tr>
<tr>
	<td>      description: "保持期間をすぎたデータを削除する、日次で実行する。&lt;br&gt;&lt;例&gt;&lt;br&gt;・一定期間更新ないアカウント・申込データを論理削除する。&lt;br&gt; ・一定期間更新のない仮アカウントを物理削除する。"
</td>
	<td>      description: "保持期間をすぎたデータを削除する、日次で実行する。&lt;br&gt;&lt;例&gt;&lt;br&gt;・一定期間更新ないアカウント・申込データを論理削除する。&lt;br&gt; ・一定期間更新のない仮アカウントを物理削除する。"
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            type: "array"
</td>
	<td>            type: "array"
</td>
</tr>
<tr>
	<td>            items:
</td>
	<td>            items:
</td>
</tr>
<tr>
	<td>              $ref: "#/definitions/BatchResult"
</td>
	<td>              $ref: "#/definitions/BatchResult"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /batch/promotion:
</td>
	<td>  /batch/promotion:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Batch"
</td>
	<td>        - "Batch"
</td>
</tr>
<tr>
	<td>      summary: "フォローメール送信API"
</td>
	<td>      summary: "フォローメール送信API"
</td>
</tr>
<tr>
	<td>      description: "申し込みフローが滞っているアカウントにフォローメールを送信する。日次で実行する。"
</td>
	<td>      description: "申し込みフローが滞っているアカウントにフォローメールを送信する。日次で実行する。"
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>  /common/bounce/update:
</td>
	<td>  /common/bounce/update:
</td>
</tr>
<tr>
	<td>    post:
</td>
	<td>    post:
</td>
</tr>
<tr>
	<td>      tags:
</td>
	<td>      tags:
</td>
</tr>
<tr>
	<td>        - "Common"
</td>
	<td>        - "Common"
</td>
</tr>
<tr>
	<td>      summary: "バウンス受信API"
</td>
	<td>      summary: "バウンス受信API"
</td>
</tr>
<tr>
	<td>      description: "Amazon SESからコールされ、メールのバウンス状態を受信する。"
</td>
	<td>      description: "Amazon SESからコールされ、メールのバウンス状態を受信する。"
</td>
</tr>
<tr>
	<td>      consumes:
</td>
	<td>      consumes:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      produces:
</td>
	<td>      produces:
</td>
</tr>
<tr>
	<td>        - "application/json"
</td>
	<td>        - "application/json"
</td>
</tr>
<tr>
	<td>      parameters:
</td>
	<td>      parameters:
</td>
</tr>
<tr>
	<td>        - in: "body"
</td>
	<td>        - in: "body"
</td>
</tr>
<tr>
	<td>          name: "body"
</td>
	<td>          name: "body"
</td>
</tr>
<tr>
	<td>          required: true
</td>
	<td>          required: true
</td>
</tr>
<tr>
	<td>          schema:
</td>
	<td>          schema:
</td>
</tr>
<tr>
	<td>            required:
</td>
	<td>            required:
</td>
</tr>
<tr>
	<td>              - sesMessageId
</td>
	<td>              - sesMessageId
</td>
</tr>
<tr>
	<td>              - becauseOf
</td>
	<td>              - becauseOf
</td>
</tr>
<tr>
	<td>            properties:
</td>
	<td>            properties:
</td>
</tr>
<tr>
	<td>              sesMessageId:
</td>
	<td>              sesMessageId:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "SESメッセージID"
</td>
	<td>                description: "SESメッセージID"
</td>
</tr>
<tr>
	<td>              becauseOf:
</td>
	<td>              becauseOf:
</td>
</tr>
<tr>
	<td>                type: "string"
</td>
	<td>                type: "string"
</td>
</tr>
<tr>
	<td>                description: "バウンス理由"
</td>
	<td>                description: "バウンス理由"
</td>
</tr>
<tr>
	<td>      responses:
</td>
	<td>      responses:
</td>
</tr>
<tr>
	<td>        "200":
</td>
	<td>        "200":
</td>
</tr>
<tr>
	<td>          description: "successful operation"
</td>
	<td>          description: "successful operation"
</td>
</tr>
<tr>
	<td>        "400":
</td>
	<td>        "400":
</td>
</tr>
<tr>
	<td>          description: "Invalid input"
</td>
	<td>          description: "Invalid input"
</td>
</tr>
<tr>
	<td>definitions:
</td>
	<td>definitions:
</td>
</tr>
<tr>
	<td>  <em>## TODO 頃合いを見てReq／Res最適化
</em></td>
	<td>  ProductAdditional:
</td>
</tr>
<tr>
	<td><em>&nbsp;&nbsp;</em>ProductAdditional:
</td>
	<td></td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "商品付加"
</td>
	<td>    description: "商品付加"
</td>
</tr>
<tr>
	<td>    required:
</td>
	<td>    required:
</td>
</tr>
<tr>
	<td>      - productCode
</td>
	<td>      - productCode
</td>
</tr>
<tr>
	<td>      - <em>calcResult
</em></td>
	<td>      - isCanceled
</td>
</tr>
<tr>
	<td><em>      - hasDiff
</em></td>
	<td></td>
</tr>
<tr>
	<td><em>      -&nbsp;</em>isCanceled
</td>
	<td></td>
</tr>
<tr>
	<td>      - productAdditionalVersion
</td>
	<td>      - productAdditionalVersion
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      productAdditionalId:
</td>
	<td>      productAdditionalId:
</td>
</tr>
<tr>
	<td>        type: "<em>string</em>"
</td>
	<td>        type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>        description: "商品付加ID"
</td>
	<td>        description: "商品付加ID"
</td>
</tr>
<tr>
	<td>      productAdditionalVersion:
</td>
	<td>      productAdditionalVersion:
</td>
</tr>
<tr>
	<td>        type: "integer"
</td>
	<td>        type: "integer"
</td>
</tr>
<tr>
	<td>        description: |-
</td>
	<td>        description: |-
</td>
</tr>
<tr>
	<td>          商品付加バージョン&lt;br&gt;バージョン管理する場合、現行からインクリメントする。
</td>
	<td>          商品付加バージョン&lt;br&gt;バージョン管理する場合、現行からインクリメントする。
</td>
</tr>
<tr>
	<td>      productCode:
</td>
	<td>      <em>updateDatetime:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "更新日時"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</em>productCode:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "販売商品コード"
</td>
	<td>        description: "販売商品コード"
</td>
</tr>
<tr>
	<td>      salesProductNameLabel:
</td>
	<td>      salesProductNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "販売商品名称"
</td>
	<td>        description: "販売商品名称"
</td>
</tr>
<tr>
	<td>      salesProductPetNameLabel:
</td>
	<td>      salesProductPetNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "販売商品愛称"
</td>
	<td>        description: "販売商品愛称"
</td>
</tr>
<tr>
	<td>      <em>unSelectableCds</em>:
</td>
	<td>      <em>calcBaseDate</em>:
</td>
</tr>
<tr>
	<td>        type: "<em>array</em>"
</td>
	<td>        type: "<em>string</em>"
</td>
</tr>
<tr>
	<td>        description: "<em>同時申込不可商品</em>"
</td>
	<td>        description: "<em>保険料計算機基準日</em>"
</td>
</tr>
<tr>
	<td>      <em>  items</em>:
</td>
	<td>      <em>disclosuredDate</em>:
</td>
</tr>
<tr>
	<td>        <em>&nbsp;&nbsp;</em>type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>      <em>calcResult</em>:
</td>
	<td>      <em>  description: "告知完了日"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      policyNo</em>:
</td>
</tr>
<tr>
	<td>        type: "<em>object</em>"
</td>
	<td>        type: "<em>string</em>"
</td>
</tr>
<tr>
	<td>        description: "<em>試算結果</em>"
</td>
	<td>        description: "<em>証券番号</em>"
</td>
</tr>
<tr>
	<td>      <em>calcBaseDate</em>:
</td>
	<td>      <em>encryptedPolicyNo</em>:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "<em>保険料計算機基準日</em>"
</td>
	<td>        description: "<em>暗号化証券番号</em>"
</td>
</tr>
<tr>
	<td>      <em>disclosured</em>D<em>ate</em>:
</td>
	<td>      <em>receipt</em>D<em>iversionPolicyNo</em>:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "<em>告知完了日</em>"
</td>
	<td>        description: "<em>収納方法流用元証券番号</em>"
</td>
</tr>
<tr>
	<td>      <em>applyDate</em>:
</td>
	<td>      <em>contractSpecialProvisions</em>:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "<em>申込</em>日"
</td>
	<td>        description: "<em>契約</em>日<em>に関する特則</em>"
</td>
</tr>
<tr>
	<td>      <em>judgeStat</em>C<em>ode</em>:
</td>
	<td>      <em>policyPost</em>C<em>ls</em>:
</td>
</tr>
<tr>
	<td>        type: "<em>integer</em>"
</td>
	<td>        type: "<em>string</em>"
</td>
</tr>
<tr>
	<td>        description: "<em>審査ステータスコード</em>"
</td>
	<td>        description: "<em>保険証券郵送区分</em>"
</td>
</tr>
<tr>
	<td>      <em>judgeReaction</em>:
</td>
	<td>      <em>agencyCode</em>:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "<em>査定結果対応</em>"
</td>
	<td>        description: "<em>代理店コード</em>"
</td>
</tr>
<tr>
	<td>      <em>policyNo</em>:
</td>
	<td>      <em>unselectableCds</em>:
</td>
</tr>
<tr>
	<td>        type: "<em>string</em>"
</td>
	<td>        type: "<em>array</em>"
</td>
</tr>
<tr>
	<td>        description: "<em>証券番号</em>"
</td>
	<td>        description: "<em>同時申込不可商品</em>"
</td>
</tr>
<tr>
	<td>      <em>encryptedPolicyNo:
</em></td>
	<td>        <em>items</em>:
</td>
</tr>
<tr>
	<td><em>&nbsp;</em>  <em>     type</em>:<em> "string"</em>
</td>
	<td></td>
</tr>
<tr>
	<td>        <em>description</em>: "<em>暗号化証券番号</em>"
</td>
	<td>        <em>  type</em>: "<em>string</em>"
</td>
</tr>
<tr>
	<td>      <em>receiptDiversionPolicyNo</em>:
</td>
	<td>      <em>transferStatusCode</em>:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "<em>収納方法流用元証券番号</em>"
</td>
	<td>        description: "<em>連動ステータスコード</em>"
</td>
</tr>
<tr>
	<td>      <em>contractSpecialProvisions</em>:
</td>
	<td>      <em>applyChangeType</em>:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "<em>契約日に関する特則</em>"
</td>
	<td>        description: "<em>申込変更区分</em>"
</td>
</tr>
<tr>
	<td>      <em>agencyCode</em>:
</td>
	<td>      <em>judgementGetDatetime</em>:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "<em>代理店コード</em>"
</td>
	<td>        description: "<em>審査取得日時</em>"
</td>
</tr>
<tr>
	<td>      <em>has</em>D<em>iff</em>:
</td>
	<td>      <em>expiration</em>D<em>atetime</em>:
</td>
</tr>
<tr>
	<td>        type: "<em>boolean</em>"
</td>
	<td>        type: "<em>string</em>"
</td>
</tr>
<tr>
	<td>        description: "<em>差分あり</em>"
</td>
	<td>        description: "<em>有効期限日時</em>"
</td>
</tr>
<tr>
	<td>      isCanceled:
</td>
	<td>      isCanceled:
</td>
</tr>
<tr>
	<td>        type: "boolean"
</td>
	<td>        type: "boolean"
</td>
</tr>
<tr>
	<td>        description: "取消済"
</td>
	<td>        description: "取消済"
</td>
</tr>
<tr>
	<td>  ProductLineup:
</td>
	<td>  ProductLineup:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: |-
</td>
	<td>    description: |-
</td>
</tr>
<tr>
	<td>      商品ラインナップ&lt;br&gt;UI設計書_インターフェース仕様_商品情報取得APIを参照
</td>
	<td>      商品ラインナップ&lt;br&gt;UI設計書_インターフェース仕様_商品情報取得APIを参照
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      salesProductCd:
</td>
	<td>      salesProductCd:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "販売商品コード"
</td>
	<td>        description: "販売商品コード"
</td>
</tr>
<tr>
	<td>      salesProductName:
</td>
	<td>      salesProductName:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "販売商品名称"
</td>
	<td>        description: "販売商品名称"
</td>
</tr>
<tr>
	<td>      salesProductPetName:
</td>
	<td>      salesProductPetName:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "販売商品愛称"
</td>
	<td>        description: "販売商品愛称"
</td>
</tr>
<tr>
	<td>      mainProvisionInfo:
</td>
	<td>      mainProvisionInfo:
</td>
</tr>
<tr>
	<td>        type: "object"
</td>
	<td>        type: "object"
</td>
</tr>
<tr>
	<td>        description: "主約款情報"
</td>
	<td>        description: "主約款情報"
</td>
</tr>
<tr>
	<td>      provisionInfoList:
</td>
	<td>      provisionInfoList:
</td>
</tr>
<tr>
	<td>        type: "array"
</td>
	<td>        type: "array"
</td>
</tr>
<tr>
	<td>        description: "約款情報リスト"
</td>
	<td>        description: "約款情報リスト"
</td>
</tr>
<tr>
	<td>        items:
</td>
	<td>        items:
</td>
</tr>
<tr>
	<td>          type: "object"
</td>
	<td>          type: "object"
</td>
</tr>
<tr>
	<td>  ProductDesign:
</td>
	<td>  ProductDesign:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "商品設計"
</td>
	<td>    description: "商品設計"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      salesProductCd:
</td>
	<td>      salesProductCd:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "販売商品コード"
</td>
	<td>        description: "販売商品コード"
</td>
</tr>
<tr>
	<td>      baseDate:
</td>
	<td>      baseDate:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "計算基準日"
</td>
	<td>        description: "計算基準日"
</td>
</tr>
<tr>
	<td>      contractSpecialProvisions:
</td>
	<td>      contractSpecialProvisions:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "契約日に関する特則"
</td>
	<td>        description: "契約日に関する特則"
</td>
</tr>
<tr>
	<td>      restrictionJobExist:
</td>
	<td>      restrictionJobExist:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "制限職種該当有無"
</td>
	<td>        description: "制限職種該当有無"
</td>
</tr>
<tr>
	<td>      basePolicy:
</td>
	<td>      basePolicy:
</td>
</tr>
<tr>
	<td>        $ref: "#/definitions/BasePolicy"
</td>
	<td>        $ref: "#/definitions/BasePolicy"
</td>
</tr>
<tr>
	<td>      riders:
</td>
	<td>      riders:
</td>
</tr>
<tr>
	<td>        type: "array"
</td>
	<td>        type: "array"
</td>
</tr>
<tr>
	<td>        items:
</td>
	<td>        items:
</td>
</tr>
<tr>
	<td>          $ref: "#/definitions/Rider"
</td>
	<td>          $ref: "#/definitions/Rider"
</td>
</tr>
<tr>
	<td>  BasePolicy:
</td>
	<td>  BasePolicy:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "主契約(基幹API項目より抽出。UCにより項目を吟味する)"
</td>
	<td>    description: "主契約(基幹API項目より抽出。UCにより項目を吟味する)"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      selectableFlg:
</td>
	<td>      selectableFlg:
</td>
</tr>
<tr>
	<td>        type: "boolean"
</td>
	<td>        type: "boolean"
</td>
</tr>
<tr>
	<td>        description: "選択フラグ"
</td>
	<td>        description: "選択フラグ"
</td>
</tr>
<tr>
	<td>      standardProvisionCd:
</td>
	<td>      standardProvisionCd:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "標準約款コード"
</td>
	<td>        description: "標準約款コード"
</td>
</tr>
<tr>
	<td>      appliedProvisionCd:
</td>
	<td>      appliedProvisionCd:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "該当約款コード"
</td>
	<td>        description: "該当約款コード"
</td>
</tr>
<tr>
	<td>      appliedProvisionVersion:
</td>
	<td>      appliedProvisionVersion:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "該当約款バージョン"
</td>
	<td>        description: "該当約款バージョン"
</td>
</tr>
<tr>
	<td>      provisionName:
</td>
	<td>      provisionName:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "約款名称"
</td>
	<td>        description: "約款名称"
</td>
</tr>
<tr>
	<td>      benefitFirstPayConvCls:
</td>
	<td>      benefitFirstPayConvCls:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "初回給付金支払倍率型区分"
</td>
	<td>        description: "初回給付金支払倍率型区分"
</td>
</tr>
<tr>
	<td>      benefitFirstPayConvClsNameLabel:
</td>
	<td>      benefitFirstPayConvClsNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "初回給付金支払倍率型区分名称"
</td>
	<td>        description: "初回給付金支払倍率型区分名称"
</td>
</tr>
<tr>
	<td>      benefitFirstPayConvClsUnitLabel:
</td>
	<td>      benefitFirstPayConvClsUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "初回給付金支払倍率型区分単位"
</td>
	<td>        description: "初回給付金支払倍率型区分単位"
</td>
</tr>
<tr>
	<td>      insurancePeriodClass:
</td>
	<td>      insurancePeriodClass:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保険期間種別"
</td>
	<td>        description: "保険期間種別"
</td>
</tr>
<tr>
	<td>      insurancePeriod:
</td>
	<td>      insurancePeriod:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保険期間"
</td>
	<td>        description: "保険期間"
</td>
</tr>
<tr>
	<td>      insurancePeriodNameLabel:
</td>
	<td>      insurancePeriodNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保険期間名称"
</td>
	<td>        description: "保険期間名称"
</td>
</tr>
<tr>
	<td>      insurancePeriodUnitLabel:
</td>
	<td>      insurancePeriodUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保険期間単位"
</td>
	<td>        description: "保険期間単位"
</td>
</tr>
<tr>
	<td>      benefit:
</td>
	<td>      benefit:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "給付金額（保険金額）"
</td>
	<td>        description: "給付金額（保険金額）"
</td>
</tr>
<tr>
	<td>      benefitNameLabel:
</td>
	<td>      benefitNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "給付金額（保険金額）名称"
</td>
	<td>        description: "給付金額（保険金額）名称"
</td>
</tr>
<tr>
	<td>      benefitUnitLabel:
</td>
	<td>      benefitUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "給付金額（保険金額）単位"
</td>
	<td>        description: "給付金額（保険金額）単位"
</td>
</tr>
<tr>
	<td>      paymentPeriodClass:
</td>
	<td>      paymentPeriodClass:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "払込期間種別"
</td>
	<td>        description: "払込期間種別"
</td>
</tr>
<tr>
	<td>      paymentPeriod:
</td>
	<td>      paymentPeriod:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "払込期間"
</td>
	<td>        description: "払込期間"
</td>
</tr>
<tr>
	<td>      paymentPeriodNameLabel:
</td>
	<td>      paymentPeriodNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "払込期間名称"
</td>
	<td>        description: "払込期間名称"
</td>
</tr>
<tr>
	<td>      paymentPeriodUnitLabel:
</td>
	<td>      paymentPeriodUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "払込期間単位"
</td>
	<td>        description: "払込期間単位"
</td>
</tr>
<tr>
	<td>      paymentMethod:
</td>
	<td>      paymentMethod:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "払込方法（回数）"
</td>
	<td>        description: "払込方法（回数）"
</td>
</tr>
<tr>
	<td>      paymentChannel:
</td>
	<td>      paymentChannel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "払込経路"
</td>
	<td>        description: "払込経路"
</td>
</tr>
<tr>
	<td>      premium:
</td>
	<td>      premium:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保険料"
</td>
	<td>        description: "保険料"
</td>
</tr>
<tr>
	<td>      riskSelectionMethod:
</td>
	<td>      riskSelectionMethod:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "危険選択方法"
</td>
	<td>        description: "危険選択方法"
</td>
</tr>
<tr>
	<td>      livingNeedsRider:
</td>
	<td>      livingNeedsRider:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "リビング・ニーズ特約有無"
</td>
	<td>        description: "リビング・ニーズ特約有無"
</td>
</tr>
<tr>
	<td>      livingNeedsRiderNameLabel:
</td>
	<td>      livingNeedsRiderNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "リビング・ニーズ特約名称"
</td>
	<td>        description: "リビング・ニーズ特約名称"
</td>
</tr>
<tr>
	<td>      livingNeedsRiderUnitLabel:
</td>
	<td>      livingNeedsRiderUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "リビング・ニーズ特約単位"
</td>
	<td>        description: "リビング・ニーズ特約単位"
</td>
</tr>
<tr>
	<td>      freeOfPRiderFlg:
</td>
	<td>      freeOfPRiderFlg:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保険料払込免除特約有無"
</td>
	<td>        description: "保険料払込免除特約有無"
</td>
</tr>
<tr>
	<td>      freeOfPRiderNameLabel:
</td>
	<td>      freeOfPRiderNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保険料払込免除特約名称"
</td>
	<td>        description: "保険料払込免除特約名称"
</td>
</tr>
<tr>
	<td>      freeOfPRiderUnitLabel:
</td>
	<td>      freeOfPRiderUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保険料払込免除特約単位"
</td>
	<td>        description: "保険料払込免除特約単位"
</td>
</tr>
<tr>
	<td>      hosCovPayLimitClass:
</td>
	<td>      hosCovPayLimitClass:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "入院給付金支払限度日数型区分"
</td>
	<td>        description: "入院給付金支払限度日数型区分"
</td>
</tr>
<tr>
	<td>      hosCovPayLimitClassNameLabel:
</td>
	<td>      hosCovPayLimitClassNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "入院給付金支払限度日数型区分名称"
</td>
	<td>        description: "入院給付金支払限度日数型区分名称"
</td>
</tr>
<tr>
	<td>      hosCovPayLimitClassUnitLabel:
</td>
	<td>      hosCovPayLimitClassUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "入院給付金支払限度日数型区分単位"
</td>
	<td>        description: "入院給付金支払限度日数型区分単位"
</td>
</tr>
<tr>
	<td>      benefitPayConvCls:
</td>
	<td>      benefitPayConvCls:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "手術給付金支払倍率区分"
</td>
	<td>        description: "手術給付金支払倍率区分"
</td>
</tr>
<tr>
	<td>      benefitPayConvClsNameLabel:
</td>
	<td>      benefitPayConvClsNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "手術給付金支払倍率区分名称"
</td>
	<td>        description: "手術給付金支払倍率区分名称"
</td>
</tr>
<tr>
	<td>      benefitPayConvClsUnitLabel:
</td>
	<td>      benefitPayConvClsUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "手術給付金支払倍率区分単位"
</td>
	<td>        description: "手術給付金支払倍率区分単位"
</td>
</tr>
<tr>
	<td>      disHsptUnlmtDaysSpPrv:
</td>
	<td>      disHsptUnlmtDaysSpPrv:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "特定疾病支払日数無制限特則"
</td>
	<td>        description: "特定疾病支払日数無制限特則"
</td>
</tr>
<tr>
	<td>      disHsptUnlmtDaysSpPrvNameLabel:
</td>
	<td>      disHsptUnlmtDaysSpPrvNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "特定疾病支払日数無制限特則名称"
</td>
	<td>        description: "特定疾病支払日数無制限特則名称"
</td>
</tr>
<tr>
	<td>      disHsptUnlmtDaysSpPrvUnitLabel:
</td>
	<td>      disHsptUnlmtDaysSpPrvUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "特定疾病支払日数無制限特則単位"
</td>
	<td>        description: "特定疾病支払日数無制限特則単位"
</td>
</tr>
<tr>
	<td>      receiptDiversionExist:
</td>
	<td>      receiptDiversionExist:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "収納方法流用有無"
</td>
	<td>        description: "収納方法流用有無"
</td>
</tr>
<tr>
	<td>      receiptDiversionPolicyNo:
</td>
	<td>      receiptDiversionPolicyNo:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "収納方法流用元証券番号"
</td>
	<td>        description: "収納方法流用元証券番号"
</td>
</tr>
<tr>
	<td>      diseaseCoverageType:
</td>
	<td>      diseaseCoverageType:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保障範囲型区分"
</td>
	<td>        description: "保障範囲型区分"
</td>
</tr>
<tr>
	<td>      diseaseCoverageTypeNameLabel:
</td>
	<td>      diseaseCoverageTypeNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保障範囲型区分名称"
</td>
	<td>        description: "保障範囲型区分名称"
</td>
</tr>
<tr>
	<td>      diseaseCoverageTypeUnitLabel:
</td>
	<td>      diseaseCoverageTypeUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保障範囲型区分単位"
</td>
	<td>        description: "保障範囲型区分単位"
</td>
</tr>
<tr>
	<td>      freeOfPremiumRiderCls:
</td>
	<td>      freeOfPremiumRiderCls:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保険料払込免除特約種類"
</td>
	<td>        description: "保険料払込免除特約種類"
</td>
</tr>
<tr>
	<td>      freeOfPremiumRiderClsNameLabel:
</td>
	<td>      freeOfPremiumRiderClsNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保険料払込免除特約種類名称"
</td>
	<td>        description: "保険料払込免除特約種類名称"
</td>
</tr>
<tr>
	<td>      freeOfPremiumRiderClsUnitLabel:
</td>
	<td>      freeOfPremiumRiderClsUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保険料払込免除特約種類単位"
</td>
	<td>        description: "保険料払込免除特約種類単位"
</td>
</tr>
<tr>
	<td>      prepayKind:
</td>
	<td>      prepayKind:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "前納種類"
</td>
	<td>        description: "前納種類"
</td>
</tr>
<tr>
	<td>      firstPrepayFrequency:
</td>
	<td>      firstPrepayFrequency:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "前納払込回数"
</td>
	<td>        description: "前納払込回数"
</td>
</tr>
<tr>
	<td>      downPaymentBenefit:
</td>
	<td>      downPaymentBenefit:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "一部一時払給付金額（保険金額）"
</td>
	<td>        description: "一部一時払給付金額（保険金額）"
</td>
</tr>
<tr>
	<td>      currencyKind:
</td>
	<td>      currencyKind:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "通貨種類"
</td>
	<td>        description: "通貨種類"
</td>
</tr>
<tr>
	<td>  PlanBasePolicy:
</td>
	<td>  PlanBasePolicy:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "プラン主契約"
</td>
	<td>    description: "プラン主契約"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      rider:
</td>
	<td>      rider:
</td>
</tr>
<tr>
	<td>        allOf:
</td>
	<td>        allOf:
</td>
</tr>
<tr>
	<td>          - $ref: "#/definitions/BasePolicy"
</td>
	<td>          - $ref: "#/definitions/BasePolicy"
</td>
</tr>
<tr>
	<td>      isChosenWell:
</td>
	<td>      isChosenWell:
</td>
</tr>
<tr>
	<td>        type: "boolean"
</td>
	<td>        type: "boolean"
</td>
</tr>
<tr>
	<td>        description: "商品レコメンドフラグ"
</td>
	<td>        description: "商品レコメンドフラグ"
</td>
</tr>
<tr>
	<td>  Rider:
</td>
	<td>  Rider:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "特約(基幹API項目より抽出。UCにより項目を吟味する)"
</td>
	<td>    description: "特約(基幹API項目より抽出。UCにより項目を吟味する)"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      selectableFlg:
</td>
	<td>      <em>serialNumber:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "integer"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "シリアル番号"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</em>selectableFlg:
</td>
</tr>
<tr>
	<td>        type: "boolean"
</td>
	<td>        type: "boolean"
</td>
</tr>
<tr>
	<td>        description: "選択フラグ"
</td>
	<td>        description: "選択フラグ"
</td>
</tr>
<tr>
	<td>      standardProvisionCd:
</td>
	<td>      standardProvisionCd:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "標準約款コード"
</td>
	<td>        description: "標準約款コード"
</td>
</tr>
<tr>
	<td>      appliedProvisionCd:
</td>
	<td>      appliedProvisionCd:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "該当約款コード"
</td>
	<td>        description: "該当約款コード"
</td>
</tr>
<tr>
	<td>      appliedProvisionVersion:
</td>
	<td>      appliedProvisionVersion:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "該当約款バージョン"
</td>
	<td>        description: "該当約款バージョン"
</td>
</tr>
<tr>
	<td>      provisionName:
</td>
	<td>      provisionName:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "約款名称"
</td>
	<td>        description: "約款名称"
</td>
</tr>
<tr>
	<td>      benefitFirstPayConvCls:
</td>
	<td>      benefitFirstPayConvCls:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "初回給付金支払倍率型区分"
</td>
	<td>        description: "初回給付金支払倍率型区分"
</td>
</tr>
<tr>
	<td>      benefitFirstPayConvClsNameLabel:
</td>
	<td>      benefitFirstPayConvClsNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "初回給付金支払倍率型区分名称"
</td>
	<td>        description: "初回給付金支払倍率型区分名称"
</td>
</tr>
<tr>
	<td>      benefitFirstPayConvClsUnitLabel:
</td>
	<td>      benefitFirstPayConvClsUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "初回給付金支払倍率型区分単位"
</td>
	<td>        description: "初回給付金支払倍率型区分単位"
</td>
</tr>
<tr>
	<td>      insurancePeriodClass:
</td>
	<td>      insurancePeriodClass:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保険期間種別"
</td>
	<td>        description: "保険期間種別"
</td>
</tr>
<tr>
	<td>      insurancePeriod:
</td>
	<td>      insurancePeriod:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保険期間"
</td>
	<td>        description: "保険期間"
</td>
</tr>
<tr>
	<td>      insurancePeriodNameLabel:
</td>
	<td>      insurancePeriodNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保険期間名称"
</td>
	<td>        description: "保険期間名称"
</td>
</tr>
<tr>
	<td>      insurancePeriodUnitLabel:
</td>
	<td>      insurancePeriodUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保険期間単位"
</td>
	<td>        description: "保険期間単位"
</td>
</tr>
<tr>
	<td>      benefit:
</td>
	<td>      benefit:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "給付金額（保険金額）"
</td>
	<td>        description: "給付金額（保険金額）"
</td>
</tr>
<tr>
	<td>      benefitNameLabel:
</td>
	<td>      benefitNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "給付金額（保険金額）名称"
</td>
	<td>        description: "給付金額（保険金額）名称"
</td>
</tr>
<tr>
	<td>      benefitUnitLabel:
</td>
	<td>      benefitUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "給付金額（保険金額）単位"
</td>
	<td>        description: "給付金額（保険金額）単位"
</td>
</tr>
<tr>
	<td>      paymentPeriodClass:
</td>
	<td>      paymentPeriodClass:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "払込期間種別"
</td>
	<td>        description: "払込期間種別"
</td>
</tr>
<tr>
	<td>      paymentPeriod:
</td>
	<td>      paymentPeriod:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "払込期間"
</td>
	<td>        description: "払込期間"
</td>
</tr>
<tr>
	<td>      paymentPeriodNameLabel:
</td>
	<td>      paymentPeriodNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "払込期間名称"
</td>
	<td>        description: "払込期間名称"
</td>
</tr>
<tr>
	<td>      paymentPeriodUnitLabel:
</td>
	<td>      paymentPeriodUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "払込期間単位"
</td>
	<td>        description: "払込期間単位"
</td>
</tr>
<tr>
	<td>      additionType:
</td>
	<td>      additionType:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "付加区分"
</td>
	<td>        description: "付加区分"
</td>
</tr>
<tr>
	<td>      additionTypeNameLabel:
</td>
	<td>      additionTypeNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "付加区分名称"
</td>
	<td>        description: "付加区分名称"
</td>
</tr>
<tr>
	<td>      additionTypeUnitLabel:
</td>
	<td>      additionTypeUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "付加区分単位"
</td>
	<td>        description: "付加区分単位"
</td>
</tr>
<tr>
	<td>      diseaseCoverageType:
</td>
	<td>      diseaseCoverageType:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保障範囲型区分"
</td>
	<td>        description: "保障範囲型区分"
</td>
</tr>
<tr>
	<td>      diseaseCoverageTypeNameLabel:
</td>
	<td>      diseaseCoverageTypeNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保障範囲型区分名称"
</td>
	<td>        description: "保障範囲型区分名称"
</td>
</tr>
<tr>
	<td>      diseaseCoverageTypeUnitLabel:
</td>
	<td>      diseaseCoverageTypeUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保障範囲型区分単位"
</td>
	<td>        description: "保障範囲型区分単位"
</td>
</tr>
<tr>
	<td>      freeOfPremiumRiderCls:
</td>
	<td>      freeOfPremiumRiderCls:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保険料払込免除特約種類"
</td>
	<td>        description: "保険料払込免除特約種類"
</td>
</tr>
<tr>
	<td>      freeOfPremiumRiderClsNameLabel:
</td>
	<td>      freeOfPremiumRiderClsNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保険料払込免除特約種類名称"
</td>
	<td>        description: "保険料払込免除特約種類名称"
</td>
</tr>
<tr>
	<td>      freeOfPremiumRiderClsUnitLabel:
</td>
	<td>      freeOfPremiumRiderClsUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保険料払込免除特約種類単位"
</td>
	<td>        description: "保険料払込免除特約種類単位"
</td>
</tr>
<tr>
	<td>      premium:
</td>
	<td>      premium:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "保険料"
</td>
	<td>        description: "保険料"
</td>
</tr>
<tr>
	<td>      hosCovPayLimitClass:
</td>
	<td>      hosCovPayLimitClass:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "入院給付金支払限度日数型区分"
</td>
	<td>        description: "入院給付金支払限度日数型区分"
</td>
</tr>
<tr>
	<td>      hosCovPayLimitClassNameLabel:
</td>
	<td>      hosCovPayLimitClassNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "入院給付金支払限度日数型区分名称"
</td>
	<td>        description: "入院給付金支払限度日数型区分名称"
</td>
</tr>
<tr>
	<td>      hosCovPayLimitClassUnitLabel:
</td>
	<td>      hosCovPayLimitClassUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "入院給付金支払限度日数型区分単位"
</td>
	<td>        description: "入院給付金支払限度日数型区分単位"
</td>
</tr>
<tr>
	<td>      disHsptUnlmtDaysSpPrv:
</td>
	<td>      disHsptUnlmtDaysSpPrv:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "特定疾病支払日数無制限特則"
</td>
	<td>        description: "特定疾病支払日数無制限特則"
</td>
</tr>
<tr>
	<td>      disHsptUnlmtDaysSpPrvNameLabel:
</td>
	<td>      disHsptUnlmtDaysSpPrvNameLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "特定疾病支払日数無制限特則名称"
</td>
	<td>        description: "特定疾病支払日数無制限特則名称"
</td>
</tr>
<tr>
	<td>      disHsptUnlmtDaysSpPrvUnitLabel:
</td>
	<td>      disHsptUnlmtDaysSpPrvUnitLabel:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "特定疾病支払日数無制限特則単位"
</td>
	<td>        description: "特定疾病支払日数無制限特則単位"
</td>
</tr>
<tr>
	<td>      downPaymentBenefit:
</td>
	<td>      downPaymentBenefit:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "一部一時払給付金額（保険金額）"
</td>
	<td>        description: "一部一時払給付金額（保険金額）"
</td>
</tr>
<tr>
	<td>      riskSelectionMethod:
</td>
	<td>      riskSelectionMethod:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "危険選択方法"
</td>
	<td>        description: "危険選択方法"
</td>
</tr>
<tr>
	<td>  PlanRider:
</td>
	<td>  PlanRider:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "プラン特約"
</td>
	<td>    description: "プラン特約"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      rider:
</td>
	<td>      rider:
</td>
</tr>
<tr>
	<td>        allOf:
</td>
	<td>        allOf:
</td>
</tr>
<tr>
	<td>          - $ref: "#/definitions/Rider"
</td>
	<td>          - $ref: "#/definitions/Rider"
</td>
</tr>
<tr>
	<td>      isChosenWell:
</td>
	<td>      isChosenWell:
</td>
</tr>
<tr>
	<td>        type: "boolean"
</td>
	<td>        type: "boolean"
</td>
</tr>
<tr>
	<td>        description: "加入傾向フラグ"
</td>
	<td>        description: "加入傾向フラグ"
</td>
</tr>
<tr>
	<td>  Account:
</td>
	<td>  Account:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "アカウント"
</td>
	<td>    description: "アカウント"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      accountId:
</td>
	<td>      accountId:
</td>
</tr>
<tr>
	<td>        type: "<em>string</em>"
</td>
	<td>        type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>        description: "アカウントID"
</td>
	<td>        description: "アカウントID"
</td>
</tr>
<tr>
	<td>      wannaDisconnect:
</td>
	<td>      wannaDisconnect:
</td>
</tr>
<tr>
	<td>        type: "boolean"
</td>
	<td>        type: "boolean"
</td>
</tr>
<tr>
	<td>        description: "メール配信切断可否（true:メール配信を切断する, false:接続する）"
</td>
	<td>        description: "メール配信切断可否（true:メール配信を切断する, false:接続する）"
</td>
</tr>
<tr>
	<td>      individual:
</td>
	<td>      individual:
</td>
</tr>
<tr>
	<td>        $ref: "#/definitions/Individual"
</td>
	<td>        $ref: "#/definitions/Individual"
</td>
</tr>
<tr>
	<td>      auth:
</td>
	<td>      auth:
</td>
</tr>
<tr>
	<td>        $ref: "#/definitions/Auth"
</td>
	<td>        $ref: "#/definitions/Auth"
</td>
</tr>
<tr>
	<td>  Individual:
</td>
	<td>  Individual:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "個人"
</td>
	<td>    description: "個人"
</td>
</tr>
<tr>
	<td>    required:
</td>
	<td>    required:
</td>
</tr>
<tr>
	<td>      - lastName
</td>
	<td>      - lastName
</td>
</tr>
<tr>
	<td>      - firstName
</td>
	<td>      - firstName
</td>
</tr>
<tr>
	<td>      - lastNameKana
</td>
	<td>      - lastNameKana
</td>
</tr>
<tr>
	<td>      - firstNameKana
</td>
	<td>      - firstNameKana
</td>
</tr>
<tr>
	<td>      - birthDate
</td>
	<td>      - birthDate
</td>
</tr>
<tr>
	<td>      - sexCode
</td>
	<td>      - sexCode
</td>
</tr>
<tr>
	<td>      - relationshipCode
</td>
	<td>      - relationshipCode
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      individualId:
</td>
	<td>      individualId:
</td>
</tr>
<tr>
	<td>        type: "<em>string</em>"
</td>
	<td>        type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>        description: "個人ID(新規作成時は不要)"
</td>
	<td>        description: "個人ID(新規作成時は不要)"
</td>
</tr>
<tr>
	<td>      lastName:
</td>
	<td>      lastName:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "姓"
</td>
	<td>        description: "姓"
</td>
</tr>
<tr>
	<td>      firstName:
</td>
	<td>      firstName:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "名"
</td>
	<td>        description: "名"
</td>
</tr>
<tr>
	<td>      lastNameKana:
</td>
	<td>      lastNameKana:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "セイ"
</td>
	<td>        description: "セイ"
</td>
</tr>
<tr>
	<td>      firstNameKana:
</td>
	<td>      firstNameKana:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "メイ"
</td>
	<td>        description: "メイ"
</td>
</tr>
<tr>
	<td>      birthDate:
</td>
	<td>      birthDate:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "生年月日"
</td>
	<td>        description: "生年月日"
</td>
</tr>
<tr>
	<td>      sexCode:
</td>
	<td>      sexCode:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "性別コード"
</td>
	<td>        description: "性別コード"
</td>
</tr>
<tr>
	<td>      relationshipCode:
</td>
	<td>      relationshipCode:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "続柄コード"
</td>
	<td>        description: "続柄コード"
</td>
</tr>
<tr>
	<td>      relationshipDetail:
</td>
	<td>      relationshipDetail:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "続柄詳細"
</td>
	<td>        description: "続柄詳細"
</td>
</tr>
<tr>
	<td>      zipCode:
</td>
	<td>      zipCode:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "郵便番号"
</td>
	<td>        description: "郵便番号"
</td>
</tr>
<tr>
	<td>      prefectures:
</td>
	<td>      prefectures:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "都道府県"
</td>
	<td>        description: "都道府県"
</td>
</tr>
<tr>
	<td>      city:
</td>
	<td>      city:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "市区町村"
</td>
	<td>        description: "市区町村"
</td>
</tr>
<tr>
	<td>      blockStreet:
</td>
	<td>      blockStreet:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "丁目番地"
</td>
	<td>        description: "丁目番地"
</td>
</tr>
<tr>
	<td>      buildings:
</td>
	<td>      buildings:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "建物名"
</td>
	<td>        description: "建物名"
</td>
</tr>
<tr>
	<td>      jobCode:
</td>
	<td>      jobCode:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "職業コード"
</td>
	<td>        description: "職業コード"
</td>
</tr>
<tr>
	<td>      jobSubCode:
</td>
	<td>      jobSubCode:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "職種コード"
</td>
	<td>        description: "職種コード"
</td>
</tr>
<tr>
	<td>      jobDetailCode:
</td>
	<td>      jobDetailCode:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "業務内容コード"
</td>
	<td>        description: "業務内容コード"
</td>
</tr>
<tr>
	<td>      office:
</td>
	<td>      office:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "勤務先"
</td>
	<td>        description: "勤務先"
</td>
</tr>
<tr>
	<td>      incomeCode:
</td>
	<td>      incomeCode:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "年収コード"
</td>
	<td>        description: "年収コード"
</td>
</tr>
<tr>
	<td>      telNums:
</td>
	<td>      <em>mailaddress:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "メールアドレス"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</em>telNums:
</td>
</tr>
<tr>
	<td>        type: "array"
</td>
	<td>        type: "array"
</td>
</tr>
<tr>
	<td>        description: "電話番号関連"
</td>
	<td>        description: "電話番号関連"
</td>
</tr>
<tr>
	<td>        items:
</td>
	<td>        items:
</td>
</tr>
<tr>
	<td>          allOf:
</td>
	<td>          allOf:
</td>
</tr>
<tr>
	<td>            - $ref: "#/definitions/TelNum"
</td>
	<td>            - $ref: "#/definitions/TelNum"
</td>
</tr>
<tr>
	<td>  Auth:
</td>
	<td>  Auth:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "認証(外に出すデータは吟味すること)"
</td>
	<td>    description: "認証(外に出すデータは吟味すること)"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      mailaddress:
</td>
	<td>      mailaddress:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "メールアドレス"
</td>
	<td>        description: "メールアドレス"
</td>
</tr>
<tr>
	<td>      extAuthCode:
</td>
	<td>      extAuthCode:
</td>
</tr>
<tr>
	<td>        type: "integer"
</td>
	<td>        type: "integer"
</td>
</tr>
<tr>
	<td>        description: "外部認証コード"
</td>
	<td>        description: "外部認証コード"
</td>
</tr>
<tr>
	<td>      extAuthId:
</td>
	<td>      extAuthId:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "外部認証ID"
</td>
	<td>        description: "外部認証ID"
</td>
</tr>
<tr>
	<td>      lastLoginDatetime:
</td>
	<td>      lastLoginDatetime:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "最終ログイン日時"
</td>
	<td>        description: "最終ログイン日時"
</td>
</tr>
<tr>
	<td>      mailaddressCandidate:
</td>
	<td>      mailaddressCandidate:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "メールアドレス候補"
</td>
	<td>        description: "メールアドレス候補"
</td>
</tr>
<tr>
	<td>      password:
</td>
	<td>      password:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "パスワード"
</td>
	<td>        description: "パスワード<em>（申込追加APIのインプットのみ使用）</em>"
</td>
</tr>
<tr>
	<td>  Payment:
</td>
	<td>  Payment:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "支払"
</td>
	<td>    description: "支払"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      productAdditionalId:
</td>
	<td>      productAdditionalId:
</td>
</tr>
<tr>
	<td>        type: "<em>string</em>"
</td>
	<td>        type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>        description: "商品付加ID"
</td>
	<td>        description: "商品付加ID"
</td>
</tr>
<tr>
	<td>      paymentChannelCode:
</td>
	<td>      paymentChannelCode:
</td>
</tr>
<tr>
	<td>        type: "integer"
</td>
	<td>        type: "integer"
</td>
</tr>
<tr>
	<td>        description: "払込経路コード"
</td>
	<td>        description: "払込経路コード"
</td>
</tr>
<tr>
	<td>      extPaymentId:
</td>
	<td>      extPaymentId:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "外部支払ID(TODO：要調査)"
</td>
	<td>        description: "外部支払ID(TODO：要調査)"
</td>
</tr>
<tr>
	<td>  Document:
</td>
	<td>  Document:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "ドキュメント"
</td>
	<td>    description: "ドキュメント"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      productAdditionalId:
</td>
	<td>      productAdditionalId:
</td>
</tr>
<tr>
	<td>        type: "<em>string</em>"
</td>
	<td>        type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>        description: "商品付加ID"
</td>
	<td>        description: "商品付加ID"
</td>
</tr>
<tr>
	<td>      documentCode:
</td>
	<td>      documentCode:
</td>
</tr>
<tr>
	<td>        type: "integer"
</td>
	<td>        type: "integer"
</td>
</tr>
<tr>
	<td>        description: "ドキュメントコード"
</td>
	<td>        description: "ドキュメントコード"
</td>
</tr>
<tr>
	<td>      fileData:
</td>
	<td>      fileData:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "ファイルデータ(base64で暗号化された文字列)"
</td>
	<td>        description: "ファイルデータ(base64で暗号化された文字列)"
</td>
</tr>
<tr>
	<td>      createDatetime:
</td>
	<td>      createDatetime:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "生成日時"
</td>
	<td>        description: "生成日時"
</td>
</tr>
<tr>
	<td>  ProductPlan:
</td>
	<td>  ProductPlan:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "商品単位のプラン情報"
</td>
	<td>    description: "商品単位のプラン情報"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      salesProductCd:
</td>
	<td>      salesProductCd:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "販売商品コード"
</td>
	<td>        description: "販売商品コード"
</td>
</tr>
<tr>
	<td>      isRecommended:
</td>
	<td>      isRecommended:
</td>
</tr>
<tr>
	<td>        type: "boolean"
</td>
	<td>        type: "boolean"
</td>
</tr>
<tr>
	<td>        description: "商品レコメンドフラグ"
</td>
	<td>        description: "商品レコメンドフラグ"
</td>
</tr>
<tr>
	<td>      plans:
</td>
	<td>      plans:
</td>
</tr>
<tr>
	<td>        type: "array"
</td>
	<td>        type: "array"
</td>
</tr>
<tr>
	<td>        description: "プラン内容のリスト（最大５件まで）"
</td>
	<td>        description: "プラン内容のリスト（最大５件まで）"
</td>
</tr>
<tr>
	<td>        items:
</td>
	<td>        items:
</td>
</tr>
<tr>
	<td>          type: "object"
</td>
	<td>          type: "object"
</td>
</tr>
<tr>
	<td>          description: "プラン内容"
</td>
	<td>          description: "プラン内容"
</td>
</tr>
<tr>
	<td>          properties:
</td>
	<td>          properties:
</td>
</tr>
<tr>
	<td>            planNo:
</td>
	<td>            planNo:
</td>
</tr>
<tr>
	<td>              type: "string"
</td>
	<td>              type: "string"
</td>
</tr>
<tr>
	<td>              description: "プラン番号"
</td>
	<td>              description: "プラン番号"
</td>
</tr>
<tr>
	<td>            planName:
</td>
	<td>            planName:
</td>
</tr>
<tr>
	<td>              type: "string"
</td>
	<td>              type: "string"
</td>
</tr>
<tr>
	<td>              description: "プラン名"
</td>
	<td>              description: "プラン名"
</td>
</tr>
<tr>
	<td>            planDetail:
</td>
	<td>            planDetail:
</td>
</tr>
<tr>
	<td>              type: "string"
</td>
	<td>              type: "string"
</td>
</tr>
<tr>
	<td>              description: "プラン詳細"
</td>
	<td>              description: "プラン詳細"
</td>
</tr>
<tr>
	<td>            isRecommended:
</td>
	<td>            isRecommended:
</td>
</tr>
<tr>
	<td>              type: "boolean"
</td>
	<td>              type: "boolean"
</td>
</tr>
<tr>
	<td>              description: "プランレコメンドフラグ"
</td>
	<td>              description: "プランレコメンドフラグ"
</td>
</tr>
<tr>
	<td>            basePolicy:
</td>
	<td>            basePolicy:
</td>
</tr>
<tr>
	<td>              allOf:
</td>
	<td>              allOf:
</td>
</tr>
<tr>
	<td>                - $ref: "#/definitions/BasePolicy"
</td>
	<td>                - $ref: "#/definitions/BasePolicy"
</td>
</tr>
<tr>
	<td>              description: "主契約"
</td>
	<td>              description: "主契約"
</td>
</tr>
<tr>
	<td>            riders:
</td>
	<td>            riders:
</td>
</tr>
<tr>
	<td>              type: "array"
</td>
	<td>              type: "array"
</td>
</tr>
<tr>
	<td>              items:
</td>
	<td>              items:
</td>
</tr>
<tr>
	<td>                allOf:
</td>
	<td>                allOf:
</td>
</tr>
<tr>
	<td>                  - $ref: "#/definitions/PlanRider"
</td>
	<td>                  - $ref: "#/definitions/PlanRider"
</td>
</tr>
<tr>
	<td>                description: "プラン特約"
</td>
	<td>                description: "プラン特約"
</td>
</tr>
<tr>
	<td>  PlanCache:
</td>
	<td>  PlanCache:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "契約年齢、性別から抽出した全商品のプラン情報（Redisから取得するプランデータもこの形）"
</td>
	<td>    description: "契約年齢、性別から抽出した全商品のプラン情報（Redisから取得するプランデータもこの形）"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      productPlans:
</td>
	<td>      productPlans:
</td>
</tr>
<tr>
	<td>        type: "array"
</td>
	<td>        type: "array"
</td>
</tr>
<tr>
	<td>        description: "商品単位のプラン情報リスト"
</td>
	<td>        description: "商品単位のプラン情報リスト"
</td>
</tr>
<tr>
	<td>        items:
</td>
	<td>        items:
</td>
</tr>
<tr>
	<td>          allOf:
</td>
	<td>          allOf:
</td>
</tr>
<tr>
	<td>            - $ref: "#/definitions/ProductPlan"
</td>
	<td>            - $ref: "#/definitions/ProductPlan"
</td>
</tr>
<tr>
	<td>  Plan:
</td>
	<td>  Plan<em>File</em>:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "プラン"
</td>
	<td>    description: "プラン<em>ファイル</em>"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      planId:
</td>
	<td>      planId:
</td>
</tr>
<tr>
	<td>        type: "integer"
</td>
	<td>        type: "integer"
</td>
</tr>
<tr>
	<td>        description: "プランID"
</td>
	<td>        description: "プラン<em>ファイル</em>ID"
</td>
</tr>
<tr>
	<td>      fileName:
</td>
	<td>      fileName:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "ファイル名"
</td>
	<td>        description: "ファイル名"
</td>
</tr>
<tr>
	<td>      fileData:
</td>
	<td>      fileData:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "ファイルデータ"
</td>
	<td>        description: "ファイルデータ"
</td>
</tr>
<tr>
	<td>      startDateTime:
</td>
	<td>      startDateTime:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "適用開始日時"
</td>
	<td>        description: "適用開始日時"
</td>
</tr>
<tr>
	<td>      isApplying:
</td>
	<td>      <em>endDateTime:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "適用終了日時"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      note:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "注釈"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</em>isApplying:
</td>
</tr>
<tr>
	<td>        type: "boolean"
</td>
	<td>        type: "boolean"
</td>
</tr>
<tr>
	<td>        description: "適用中プランフラグ（true: 適用中プラン, false: それ以外のプラン）"
</td>
	<td>        description: "適用中プランフラグ（true: 適用中プラン, false: それ以外のプラン）"
</td>
</tr>
<tr>
	<td>  Operator:
</td>
	<td>  Operator:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "運用者"
</td>
	<td>    description: "運用者"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      operatorId:
</td>
	<td>      operatorId:
</td>
</tr>
<tr>
	<td>        type: "integer"
</td>
	<td>        type: "integer"
</td>
</tr>
<tr>
	<td>        description: "運用者ID"
</td>
	<td>        description: "運用者ID"
</td>
</tr>
<tr>
	<td>      lastName:
</td>
	<td>      lastName:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "姓"
</td>
	<td>        description: "姓"
</td>
</tr>
<tr>
	<td>      firstName:
</td>
	<td>      firstName:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "名"
</td>
	<td>        description: "名"
</td>
</tr>
<tr>
	<td>      mailaddress:
</td>
	<td>      mailaddress:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "メールアドレス"
</td>
	<td>        description: "メールアドレス"
</td>
</tr>
<tr>
	<td>      activatedDatetime:
</td>
	<td>      activatedDatetime:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "本登録日時"
</td>
	<td>        description: "本登録日時"
</td>
</tr>
<tr>
	<td>      roleCode:
</td>
	<td>      roleCode:
</td>
</tr>
<tr>
	<td>        type: "integer"
</td>
	<td>        type: "integer"
</td>
</tr>
<tr>
	<td>        description: "権限コード"
</td>
	<td>        description: "権限コード"
</td>
</tr>
<tr>
	<td>      loginTrialTimes:
</td>
	<td>      loginTrialTimes:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "ログイン試行回数"
</td>
	<td>        description: "ログイン試行回数"
</td>
</tr>
<tr>
	<td>      lastLoginDatetime:
</td>
	<td>      lastLoginDatetime:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "最終ログイン日時"
</td>
	<td>        description: "最終ログイン日時"
</td>
</tr>
<tr>
	<td>  <em>    password:
</em></td>
	<td>  CodeMaster:
</td>
</tr>
<tr>
	<td><em>        type: "string"
</em></td>
	<td></td>
</tr>
<tr>
	<td><em>        description: "パスワード(レスポンス時は指定しない)"
</em></td>
	<td></td>
</tr>
<tr>
	<td><em>&nbsp;&nbsp;</em>CodeMaster:
</td>
	<td></td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "コードマスター"
</td>
	<td>    description: "コードマスター"
</td>
</tr>
<tr>
	<td>    required:
</td>
	<td>    required:
</td>
</tr>
<tr>
	<td>      - code
</td>
	<td>      - code
</td>
</tr>
<tr>
	<td>      - name
</td>
	<td>      - name
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      code:
</td>
	<td>      code:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "コード"
</td>
	<td>        description: "コード"
</td>
</tr>
<tr>
	<td>      name:
</td>
	<td>      name:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "コード名"
</td>
	<td>        description: "コード名"
</td>
</tr>
<tr>
	<td>      children:
</td>
	<td>      children:
</td>
</tr>
<tr>
	<td>        type: "array"
</td>
	<td>        type: "array"
</td>
</tr>
<tr>
	<td>        description: "子コード"
</td>
	<td>        description: "子コード"
</td>
</tr>
<tr>
	<td>        items:
</td>
	<td>        items:
</td>
</tr>
<tr>
	<td>          $ref: "#/definitions/CodeMaster"
</td>
	<td>          $ref: "#/definitions/CodeMaster"
</td>
</tr>
<tr>
	<td>  Contact:
</td>
	<td>  Contact:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "連絡"
</td>
	<td>    description: "連絡"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      contactId:
</td>
	<td>      contactId:
</td>
</tr>
<tr>
	<td>        type: "<em>string</em>"
</td>
	<td>        type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>        description: "連絡ID"
</td>
	<td>        description: "連絡ID"
</td>
</tr>
<tr>
	<td>      contactCode:
</td>
	<td>      contactCode:
</td>
</tr>
<tr>
	<td>        type: "integer"
</td>
	<td>        type: "integer"
</td>
</tr>
<tr>
	<td>        description: "連絡対象コード"
</td>
	<td>        description: "連絡対象コード"
</td>
</tr>
<tr>
	<td>      mailSubject:
</td>
	<td>      mailSubject:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "メールタイトル"
</td>
	<td>        description: "メールタイトル"
</td>
</tr>
<tr>
	<td>      mailContent:
</td>
	<td>      mailContent:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "メール本文"
</td>
	<td>        description: "メール本文"
</td>
</tr>
<tr>
	<td>      messageBoxSubject:
</td>
	<td>      messageBoxSubject:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "メッセージBoxタイトル"
</td>
	<td>        description: "メッセージBoxタイトル"
</td>
</tr>
<tr>
	<td>      messageBoxContent:
</td>
	<td>      messageBoxContent:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "メッセージBox本文"
</td>
	<td>        description: "メッセージBox本文"
</td>
</tr>
<tr>
	<td>      response:
</td>
	<td>      response:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "回答"
</td>
	<td>        description: "回答"
</td>
</tr>
<tr>
	<td>      respondedDatetime:
</td>
	<td>      respondedDatetime:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "回答日時"
</td>
	<td>        description: "回答日時"
</td>
</tr>
<tr>
	<td>      createdDatetime:
</td>
	<td>      createdDatetime:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "作成日時"
</td>
	<td>        description: "作成日時"
</td>
</tr>
<tr>
	<td>      displayedDatetime:
</td>
	<td>      displayedDatetime:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "掲載日時"
</td>
	<td>        description: "掲載日時"
</td>
</tr>
<tr>
	<td>      wantDisplay:
</td>
	<td>      wantDisplay:
</td>
</tr>
<tr>
	<td>        type: "boolean"
</td>
	<td>        type: "boolean"
</td>
</tr>
<tr>
	<td>        description: "掲載フラグ"
</td>
	<td>        description: "掲載フラグ"
</td>
</tr>
<tr>
	<td>      mailSendStartHour:
</td>
	<td>      mailSendStartHour:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "メール送信可能開始時間"
</td>
	<td>        description: "メール送信可能開始時間"
</td>
</tr>
<tr>
	<td>      mailSendEndHour:
</td>
	<td>      mailSendEndHour:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "メール送信可能終了時間"
</td>
	<td>        description: "メール送信可能終了時間"
</td>
</tr>
<tr>
	<td>      mailSendDatetime:
</td>
	<td>      mailSendDatetime:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "メール送信日時"
</td>
	<td>        description: "メール送信日時"
</td>
</tr>
<tr>
	<td>      mailaddress:
</td>
	<td>      mailaddress:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "メールアドレス"
</td>
	<td>        description: "メールアドレス"
</td>
</tr>
<tr>
	<td>      sendStatusCode:
</td>
	<td>      sendStatusCode:
</td>
</tr>
<tr>
	<td>        type: "integer"
</td>
	<td>        type: "integer"
</td>
</tr>
<tr>
	<td>        description: "送信ステータスコード"
</td>
	<td>        description: "送信ステータスコード"
</td>
</tr>
<tr>
	<td>      sendServiceCode:
</td>
	<td>      sendServiceCode:
</td>
</tr>
<tr>
	<td>        type: "integer"
</td>
	<td>        type: "integer"
</td>
</tr>
<tr>
	<td>        description: "送信業務コード"
</td>
	<td>        description: "送信業務コード"
</td>
</tr>
<tr>
	<td>      sesMessageId:
</td>
	<td>      sesMessageId:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "SES メッセージID"
</td>
	<td>        description: "SES メッセージID"
</td>
</tr>
<tr>
	<td>      topicId:
</td>
	<td>      topicId:
</td>
</tr>
<tr>
	<td>        type: "<em>string</em>"
</td>
	<td>        type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>        description: "トピックID"
</td>
	<td>        description: "トピックID"
</td>
</tr>
<tr>
	<td>#  トピックDTOについて、作成したものの不使用のためコメントアウト。
</td>
	<td>#  トピックDTOについて、作成したものの不使用のためコメントアウト。
</td>
</tr>
<tr>
	<td>#  Topic:
</td>
	<td>#  Topic:
</td>
</tr>
<tr>
	<td>#    type: "object"
</td>
	<td>#    type: "object"
</td>
</tr>
<tr>
	<td>#    description: "トピック"
</td>
	<td>#    description: "トピック"
</td>
</tr>
<tr>
	<td>#    properties:
</td>
	<td>#    properties:
</td>
</tr>
<tr>
	<td>#      productAdditionalId:
</td>
	<td>#      productAdditionalId:
</td>
</tr>
<tr>
	<td>#        type: "<em>string</em>"
</td>
	<td>#        type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>#        description: "商品付加ID"
</td>
	<td>#        description: "商品付加ID"
</td>
</tr>
<tr>
	<td>#      productAdditionalVersion:
</td>
	<td>#      productAdditionalVersion:
</td>
</tr>
<tr>
	<td>#        type: "integer"
</td>
	<td>#        type: "integer"
</td>
</tr>
<tr>
	<td>#        description: "商品付加バージョン"
</td>
	<td>#        description: "商品付加バージョン"
</td>
</tr>
<tr>
	<td>#      applyId:
</td>
	<td>#      applyId:
</td>
</tr>
<tr>
	<td>#        type: "<em>string</em>"
</td>
	<td>#        type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>#        description: "申込ID"
</td>
	<td>#        description: "申込ID"
</td>
</tr>
<tr>
	<td>#      accountId:
</td>
	<td>#      accountId:
</td>
</tr>
<tr>
	<td>#        type: "<em>string</em>"
</td>
	<td>#        type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>#        description: "アカウントID"
</td>
	<td>#        description: "アカウントID"
</td>
</tr>
<tr>
	<td>  TopicCategory:
</td>
	<td>  TopicCategory:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "トピックカテゴリー"
</td>
	<td>    description: "トピックカテゴリー"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      topicCategoryCode:
</td>
	<td>      topicCategoryCode:
</td>
</tr>
<tr>
	<td>        type: "integer"
</td>
	<td>        type: "integer"
</td>
</tr>
<tr>
	<td>        description: "トピックカテゴリーコード"
</td>
	<td>        description: "トピックカテゴリーコード"
</td>
</tr>
<tr>
	<td>      topicStatusCode:
</td>
	<td>      topicStatusCode:
</td>
</tr>
<tr>
	<td>        type: "integer"
</td>
	<td>        type: "integer"
</td>
</tr>
<tr>
	<td>        description: "トピックステータスコード"
</td>
	<td>        description: "トピックステータスコード"
</td>
</tr>
<tr>
	<td>  Announce:
</td>
	<td>  Announce:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "アナウンス"
</td>
	<td>    description: "アナウンス"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      announceId:
</td>
	<td>      announceId:
</td>
</tr>
<tr>
	<td>        type: "<em>string</em>"
</td>
	<td>        type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>        description: "アナウンスID"
</td>
	<td>        description: "アナウンスID"
</td>
</tr>
<tr>
	<td>      subject:
</td>
	<td>      subject:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "タイトル"
</td>
	<td>        description: "タイトル"
</td>
</tr>
<tr>
	<td>      content:
</td>
	<td>      content:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "内容"
</td>
	<td>        description: "内容"
</td>
</tr>
<tr>
	<td>      linkUrl:
</td>
	<td>      linkUrl:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "リンク先URL"
</td>
	<td>        description: "リンク先URL"
</td>
</tr>
<tr>
	<td>      startDatetime:
</td>
	<td>      startDatetime:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "表示開始日時"
</td>
	<td>        description: "表示開始日時"
</td>
</tr>
<tr>
	<td>      endDatetime:
</td>
	<td>      endDatetime:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "表示終了日時"
</td>
	<td>        description: "表示終了日時"
</td>
</tr>
<tr>
	<td>  AuraSession:
</td>
	<td>  AuraSession:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "AURAとのリクエストに使用されるセッション項目"
</td>
	<td>    description: "AURAとのリクエストに使用されるセッション項目"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      applyId:
</td>
	<td>      applyId:
</td>
</tr>
<tr>
	<td>        type: "<em>string</em>"
</td>
	<td>        type: "<em>integer</em>"
</td>
</tr>
<tr>
	<td>        description: "申込ID"
</td>
	<td>        description: "申込ID"
</td>
</tr>
<tr>
	<td>      etag:
</td>
	<td>      etag:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "AURAセッション時に指定するEtag"
</td>
	<td>        description: "AURAセッション時に指定するEtag"
</td>
</tr>
<tr>
	<td>  AuraStatus:
</td>
	<td>  AuraStatus:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: |-
</td>
	<td>    description: |-
</td>
</tr>
<tr>
	<td>      AURA告知に対するステータス
</td>
	<td>      AURA告知に対するステータス
</td>
</tr>
<tr>
	<td>      eアンダーライティングインテグレーションガイドv6参照
</td>
	<td>      eアンダーライティングインテグレーションガイドv6参照
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      completed:
</td>
	<td>      completed:
</td>
</tr>
<tr>
	<td>        type: "boolean"
</td>
	<td>        type: "boolean"
</td>
</tr>
<tr>
	<td>        description: "告知回答が完了しているか"
</td>
	<td>        description: "告知回答が完了しているか"
</td>
</tr>
<tr>
	<td>      submitted:
</td>
	<td>      submitted:
</td>
</tr>
<tr>
	<td>        type: "boolean"
</td>
	<td>        type: "boolean"
</td>
</tr>
<tr>
	<td>        description: "AURAに告知が提出済みか"
</td>
	<td>        description: "AURAに告知が提出済みか"
</td>
</tr>
<tr>
	<td>  AuraQuestion:
</td>
	<td>  AuraQuestion:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: |-
</td>
	<td>    description: |-
</td>
</tr>
<tr>
	<td>      AURA告知
</td>
	<td>      AURA告知
</td>
</tr>
<tr>
	<td>      eアンダーライティングインテグレーションガイドv6参照
</td>
	<td>      eアンダーライティングインテグレーションガイドv6参照
</td>
</tr>
<tr>
	<td>  AuraAnswer:
</td>
	<td>  AuraAnswer:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: |-
</td>
	<td>    description: |-
</td>
</tr>
<tr>
	<td>      AURA告知に対する回答(questionType, unknownAnswer以外にもあり)
</td>
	<td>      AURA告知に対する回答(questionType, unknownAnswer以外にもあり)
</td>
</tr>
<tr>
	<td>      eアンダーライティングインテグレーションガイドv6参照
</td>
	<td>      eアンダーライティングインテグレーションガイドv6参照
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      questionId:
</td>
	<td>      questionId:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>      questionType:
</td>
	<td>      questionType:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>      unknownAnswer:
</td>
	<td>      unknownAnswer:
</td>
</tr>
<tr>
	<td>        type: "boolean"
</td>
	<td>        type: "boolean"
</td>
</tr>
<tr>
	<td>      otherParam:
</td>
	<td>      otherParam:
</td>
</tr>
<tr>
	<td>        type: "object"
</td>
	<td>        type: "object"
</td>
</tr>
<tr>
	<td>        description: "質問形態により異なるデータ"
</td>
	<td>        description: "質問形態により異なるデータ"
</td>
</tr>
<tr>
	<td>  BatchResult:
</td>
	<td>  <em>    searchString:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "検索の質問を渡す際に必要となるパラメータ"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>&nbsp;&nbsp;</em>BatchResult:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "バッチ実行結果を返却する。"
</td>
	<td>    description: "バッチ実行結果を返却する。"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      resultCode:
</td>
	<td>      resultCode:
</td>
</tr>
<tr>
	<td>        type: "integer"
</td>
	<td>        type: "integer"
</td>
</tr>
<tr>
	<td>        description: "info/errorのコードを指定"
</td>
	<td>        description: "info/errorのコードを指定"
</td>
</tr>
<tr>
	<td>      detail:
</td>
	<td>      detail:
</td>
</tr>
<tr>
	<td>        type: "object"
</td>
	<td>        type: "object"
</td>
</tr>
<tr>
	<td>        description: "エラー時の詳細()"
</td>
	<td>        description: "エラー時の詳細()"
</td>
</tr>
<tr>
	<td>        properties:
</td>
	<td>        properties:
</td>
</tr>
<tr>
	<td>          targetId:
</td>
	<td>          targetId:
</td>
</tr>
<tr>
	<td>            type: "string"
</td>
	<td>            type: "string"
</td>
</tr>
<tr>
	<td>            description: "原因特定のために使用するID"
</td>
	<td>            description: "原因特定のために使用するID"
</td>
</tr>
<tr>
	<td>  TelNum:
</td>
	<td>  TelNum:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "電話番号"
</td>
	<td>    description: "電話番号"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      telNum:
</td>
	<td>      telNum:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "電話番号"
</td>
	<td>        description: "電話番号"
</td>
</tr>
<tr>
	<td>      telNumType:
</td>
	<td>      telNumType:
</td>
</tr>
<tr>
	<td>        type: "integer"
</td>
	<td>        type: "integer"
</td>
</tr>
<tr>
	<td>        description: "電話番号タイプ"
</td>
	<td>        description: "電話番号タイプ"
</td>
</tr>
<tr>
	<td>  ProductGroup:
</td>
	<td>  <em>Assessment:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>    type: "object"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>    description: "査定"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>    properties:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      assessmentId:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "integer"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "査定ID"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      productAdditionalId:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "integer"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "商品付加ID"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      productAdditionalVersion:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "integer"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "商品付加バージョン"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      policyNo:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "証券番号"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      auraProductCd:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "AURA用プロダクトコード"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      standardProvisionCd:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "標準約款コード"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      appliedProvisionCd:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "該当約款コード"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      appliedProvisionVersion:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "該当約款バージョン"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      decisionCd:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "査定結果コード"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      freeOfPRiderFlg:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "保険料払込免除特約有無"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      freeOfPremiumRiderCls:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "保険料払込免除特約種類"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      diseaseCoverageType:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "保障範囲型区分"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      amountRestriction:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "金額制限"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      amountRestriction10k:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "金額制限（万円）"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      exclusions:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "array"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "不担保"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        items:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>          allOf:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>            - $ref: "#/definitions/Exclusion"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>  Exclusion:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>    type: "object"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>    description: "不担保"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>    properties:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      serialNumber:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "integer"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "シリアル番号"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      exclusionClassCd:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "不担保種別コード"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      exclusionPartCd:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "不担保部位・傷病コード"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      exclusionPeriodCd:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "不担保期間コード"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      exclusionSpareCd:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "不担保予備コード"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      exclusionClassName:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "特別条件内容"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      exclusionPeriodName:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "不担保期間"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>      exclusionPartName:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "string"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "不担保部位名称"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>&nbsp;&nbsp;</em>ProductGroup:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "商品グループ"
</td>
	<td>    description: "商品グループ"
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      productAdditional:
</td>
	<td>      productAdditional:
</td>
</tr>
<tr>
	<td>        allOf:
</td>
	<td>        allOf:
</td>
</tr>
<tr>
	<td>          - $ref: "#/definitions/ProductAdditional"
</td>
	<td>          - $ref: "#/definitions/ProductAdditional"
</td>
</tr>
<tr>
	<td>        description: "商品付加"
</td>
	<td>        description: "商品付加"
</td>
</tr>
<tr>
	<td>      basePolicy:
</td>
	<td>      basePolicy:
</td>
</tr>
<tr>
	<td>        allOf:
</td>
	<td>        allOf:
</td>
</tr>
<tr>
	<td>          - $ref: "#/definitions/BasePolicy"
</td>
	<td>          - $ref: "#/definitions/BasePolicy"
</td>
</tr>
<tr>
	<td>        description: "主契約"
</td>
	<td>        description: "主契約"
</td>
</tr>
<tr>
	<td>      riders:
</td>
	<td>      riders:
</td>
</tr>
<tr>
	<td>        type: "array"
</td>
	<td>        type: "array"
</td>
</tr>
<tr>
	<td>        items:
</td>
	<td>        items:
</td>
</tr>
<tr>
	<td>          allOf:
</td>
	<td>          allOf:
</td>
</tr>
<tr>
	<td>            - $ref: "#/definitions/Rider"
</td>
	<td>            - $ref: "#/definitions/Rider"
</td>
</tr>
<tr>
	<td>        description: "特約"
</td>
	<td>        description: "特約"
</td>
</tr>
<tr>
	<td>      acceptances:
</td>
	<td>      acceptances:
</td>
</tr>
<tr>
	<td>        type: "array"
</td>
	<td>        type: "array"
</td>
</tr>
<tr>
	<td>        items:
</td>
	<td>        items:
</td>
</tr>
<tr>
	<td>          allOf:
</td>
	<td>          allOf:
</td>
</tr>
<tr>
	<td>            - $ref: "#/definitions/Acceptance"
</td>
	<td>            - $ref: "#/definitions/Acceptance"
</td>
</tr>
<tr>
	<td>        description: "承諾"
</td>
	<td>        description: "承諾"
</td>
</tr>
<tr>
	<td>      self:
</td>
	<td>      self:
</td>
</tr>
<tr>
	<td>        allOf:
</td>
	<td>        allOf:
</td>
</tr>
<tr>
	<td>          - $ref: "#/definitions/Individual"
</td>
	<td>          - $ref: "#/definitions/Individual"
</td>
</tr>
<tr>
	<td>        description: "契約者"
</td>
	<td>        description: "契約者"
</td>
</tr>
<tr>
	<td>      reciever:
</td>
	<td>      reciever:
</td>
</tr>
<tr>
	<td>        allOf:
</td>
	<td>        allOf:
</td>
</tr>
<tr>
	<td>          - $ref: "#/definitions/Individual"
</td>
	<td>          - $ref: "#/definitions/Individual"
</td>
</tr>
<tr>
	<td>        description: "受取人"
</td>
	<td>        description: "受取人"
</td>
</tr>
<tr>
	<td>      payment:
</td>
	<td>      payment:
</td>
</tr>
<tr>
	<td>        allOf:
</td>
	<td>        allOf:
</td>
</tr>
<tr>
	<td>          - $ref: "#/definitions/Payment"
</td>
	<td>          - $ref: "#/definitions/Payment"
</td>
</tr>
<tr>
	<td>        description: "支払"
</td>
	<td>        description: "支払"
</td>
</tr>
<tr>
	<td>      docs:
</td>
	<td>      docs:
</td>
</tr>
<tr>
	<td>        type: "array"
</td>
	<td>        type: "array"
</td>
</tr>
<tr>
	<td>        description: "ドキュメント"
</td>
	<td>        description: "ドキュメント"
</td>
</tr>
<tr>
	<td>        items:
</td>
	<td>        items:
</td>
</tr>
<tr>
	<td>          allOf:
</td>
	<td>          allOf:
</td>
</tr>
<tr>
	<td>            - $ref: "#/definitions/Document"
</td>
	<td>            - $ref: "#/definitions/Document"
</td>
</tr>
<tr>
	<td>  Acceptance:
</td>
	<td>  <em>    assessments:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        type: "array"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        description: "査定"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>        items:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>          allOf:
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>            - $ref: "#/definitions/Assessment"
</em></td>
</tr>
<tr>
	<td></td>
	<td><em>&nbsp;&nbsp;</em>Acceptance:
</td>
</tr>
<tr>
	<td>    type: "object"
</td>
	<td>    type: "object"
</td>
</tr>
<tr>
	<td>    description: "承諾"
</td>
	<td>    description: "承諾"
</td>
</tr>
<tr>
	<td>    required:
</td>
	<td>    required:
</td>
</tr>
<tr>
	<td>      - acceptanceTargetCode
</td>
	<td>      - acceptanceTargetCode
</td>
</tr>
<tr>
	<td>      - acceptanceDatetime
</td>
	<td>      - acceptanceDatetime
</td>
</tr>
<tr>
	<td>    properties:
</td>
	<td>    properties:
</td>
</tr>
<tr>
	<td>      acceptanceTargetCode:
</td>
	<td>      acceptanceTargetCode:
</td>
</tr>
<tr>
	<td>        type: "integer"
</td>
	<td>        type: "integer"
</td>
</tr>
<tr>
	<td>        description: "承諾対象コード"
</td>
	<td>        description: "承諾対象コード"
</td>
</tr>
<tr>
	<td>      acceptanceDatetime:
</td>
	<td>      acceptanceDatetime:
</td>
</tr>
<tr>
	<td>        type: "string"
</td>
	<td>        type: "string"
</td>
</tr>
<tr>
	<td>        description: "承諾日時(日時を指定しない場合、バックエンドで時間を設定する)"
</td>
	<td>        description: "承諾日時(日時を指定しない場合、バックエンドで時間を設定する)"
</td>
</tr>
<tr>
	<td><font color="gray">
		文字数: 39350<br>
		空白数: 25394 空白込み文字数: 64744<br>
		改行数: 2525 改行込み文字数: 67269<br>
		単語数: 4159
	</font></td>
	<td><font color="gray">
		文字数: 42334<br>
		空白数: 26980 空白込み文字数: 69314<br>
		改行数: 2695 改行込み文字数: 72009<br>
		単語数: 4433
	</font></td>
</tr>
</tbody></table>

<p>
	<input type="button" id="hide" value="結果のみ表示 (印刷用)" onclick="hideForm()"> |
	<input type="radio" name="color" value="1" onclick="setColor1()" checked="">
		<span class="blue">カラー1</span>
	<input type="radio" name="color" value="2" onclick="setColor2()">
		<span class="green">カラー2</span>
	<input type="radio" name="color" value="3" onclick="setColor3()">
		<span class="black">モノクロ</span>
</p>
</div>

<div id="save">
<hr><!-- ________________________________________ -->

<h4>この結果を公開する</h4>

<form method="POST" id="save" name="save" action="https://difff.jp/save.cgi">
<p>この結果をﾃﾞｭﾌﾌサーバに保存し、公開用のURLを発行します。<br>
削除パスワードを設定しておけば、あとで消すこともできます。<br>
<b>公開期間は3日間です。</b>公開期間を過ぎると自動的に削除されます。</p>

<table id="passwd">
<tbody><tr>
	<td class="n">削除バスワード：<input type="text" name="passwd" size="10" value=""></td>
	<td class="n">設定したパスワードは後で確認することが<br>できませんので必ず控えてください。</td>
</tr>
</tbody></table>

<input type="submit" onclick="return savehtml();" value="結果を公開する">

<p>「結果を公開する」を押さない限り、入力した文書などがサーバに保存されることはありません。<br>
この機能はテスト運用中のものです。予告なく提供を中止することがあります。</p>
</form>
</div>




</body></html>